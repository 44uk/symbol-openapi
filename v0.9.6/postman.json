{
    "item": [
        {
            "id": "2ad85fd1-4383-4e0f-aaac-2abb82daa55a",
            "name": "accounts",
            "item": [
                {
                    "id": "eb00e654-37db-4ebb-b003-7afd7a3c6389",
                    "name": "Get accounts",
                    "request": {
                        "name": "Get accounts",
                        "description": {
                            "content": "Gets an array of accounts.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "accounts"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "description": "Select the number of entries to return.",
                                    "key": "pageSize",
                                    "value": "10"
                                },
                                {
                                    "description": "Filter by page number.",
                                    "key": "pageNumber",
                                    "value": "1"
                                },
                                {
                                    "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                    "key": "offset",
                                    "value": "<string>"
                                },
                                {
                                    "description": "Sort responses in ascending or descending order based on the collection property set on the param ``orderBy``.\nIf the request does not specify ``orderBy``, REST returns the collection ordered by id.\n",
                                    "key": "order",
                                    "value": "desc"
                                },
                                {
                                    "description": "Sort responses by the property set.\nIf ``balance`` option is selected, the request must define the ``mosaicId`` filter.\n",
                                    "key": "orderBy",
                                    "value": "<string>"
                                },
                                {
                                    "description": "Filter by mosaic identifier.",
                                    "key": "mosaicId",
                                    "value": "<hex>"
                                }
                            ],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "628ea7c7-657d-46f7-8067-48b77e6694d9",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "key": "pageNumber",
                                            "value": "1"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "order",
                                            "value": "desc"
                                        },
                                        {
                                            "key": "orderBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "mosaicId",
                                            "value": "0DC67FBE1CAD29E3"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"account\": {\n    \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"addressHeight\": 1,\n    \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"publicKeyHeight\": 1,\n    \"accountType\": \"<integer>\",\n    \"supplementalPublicKeys\": {\n     \"linked\": {\n      \"publicKey\": \"<string>\"\n     },\n     \"node\": {\n      \"publicKey\": \"<string>\"\n     },\n     \"vrf\": {\n      \"publicKey\": \"<string>\"\n     },\n     \"voting\": {\n      \"publicKeys\": [\n       {\n        \"publicKey\": \"<string>\",\n        \"startPoint\": \"<string>\",\n        \"endPoint\": \"<string>\"\n       },\n       {\n        \"publicKey\": \"<string>\",\n        \"startPoint\": \"<string>\",\n        \"endPoint\": \"<string>\"\n       }\n      ]\n     }\n    },\n    \"activityBuckets\": [\n     {\n      \"startHeight\": 1,\n      \"totalFeesPaid\": \"123456\",\n      \"beneficiaryCount\": 2222212828,\n      \"rawScore\": 0\n     },\n     {\n      \"startHeight\": 1,\n      \"totalFeesPaid\": \"123456\",\n      \"beneficiaryCount\": 2222212828,\n      \"rawScore\": 0\n     }\n    ],\n    \"mosaics\": [\n     {\n      \"id\": \"0DC67FBE1CAD29E3\",\n      \"amount\": \"123456\"\n     },\n     {\n      \"id\": \"0DC67FBE1CAD29E3\",\n      \"amount\": \"123456\"\n     }\n    ],\n    \"importance\": 0,\n    \"importanceHeight\": 1\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"account\": {\n    \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"addressHeight\": 1,\n    \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"publicKeyHeight\": 1,\n    \"accountType\": \"<integer>\",\n    \"supplementalPublicKeys\": {\n     \"linked\": {\n      \"publicKey\": \"<string>\"\n     },\n     \"node\": {\n      \"publicKey\": \"<string>\"\n     },\n     \"vrf\": {\n      \"publicKey\": \"<string>\"\n     },\n     \"voting\": {\n      \"publicKeys\": [\n       {\n        \"publicKey\": \"<string>\",\n        \"startPoint\": \"<string>\",\n        \"endPoint\": \"<string>\"\n       },\n       {\n        \"publicKey\": \"<string>\",\n        \"startPoint\": \"<string>\",\n        \"endPoint\": \"<string>\"\n       }\n      ]\n     }\n    },\n    \"activityBuckets\": [\n     {\n      \"startHeight\": 1,\n      \"totalFeesPaid\": \"123456\",\n      \"beneficiaryCount\": 2222212828,\n      \"rawScore\": 0\n     },\n     {\n      \"startHeight\": 1,\n      \"totalFeesPaid\": \"123456\",\n      \"beneficiaryCount\": 2222212828,\n      \"rawScore\": 0\n     }\n    ],\n    \"mosaics\": [\n     {\n      \"id\": \"0DC67FBE1CAD29E3\",\n      \"amount\": \"123456\"\n     },\n     {\n      \"id\": \"0DC67FBE1CAD29E3\",\n      \"amount\": \"123456\"\n     }\n    ],\n    \"importance\": 0,\n    \"importanceHeight\": 1\n   }\n  }\n ],\n \"pagination\": {\n  \"pageNumber\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"totalEntries\": \"<integer>\",\n  \"totalPages\": \"<integer>\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d8736b96-1040-493c-9932-3d17f1d43fa9",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "key": "pageNumber",
                                            "value": "1"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "order",
                                            "value": "desc"
                                        },
                                        {
                                            "key": "orderBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "mosaicId",
                                            "value": "0DC67FBE1CAD29E3"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "9df325c4-1a5b-4950-8f38-005aebd85ef5",
                    "name": "Get accounts information",
                    "request": {
                        "name": "Get accounts information",
                        "description": {
                            "content": "Returns the account information for an array of accounts.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "accounts"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"publicKeys\": [\n        \"<hex>\",\n        \"<hex>\"\n    ],\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "2debc533-7e42-4519-a156-e0d031695b70",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"id\": \"<string>\",\n  \"account\": {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n   \"addressHeight\": 1,\n   \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"publicKeyHeight\": 1,\n   \"accountType\": \"<integer>\",\n   \"supplementalPublicKeys\": {\n    \"linked\": {\n     \"publicKey\": \"<string>\"\n    },\n    \"node\": {\n     \"publicKey\": \"<string>\"\n    },\n    \"vrf\": {\n     \"publicKey\": \"<string>\"\n    },\n    \"voting\": {\n     \"publicKeys\": [\n      {\n       \"publicKey\": \"<string>\",\n       \"startPoint\": \"<string>\",\n       \"endPoint\": \"<string>\"\n      },\n      {\n       \"publicKey\": \"<string>\",\n       \"startPoint\": \"<string>\",\n       \"endPoint\": \"<string>\"\n      }\n     ]\n    }\n   },\n   \"activityBuckets\": [\n    {\n     \"startHeight\": 1,\n     \"totalFeesPaid\": \"123456\",\n     \"beneficiaryCount\": 2222212828,\n     \"rawScore\": 0\n    },\n    {\n     \"startHeight\": 1,\n     \"totalFeesPaid\": \"123456\",\n     \"beneficiaryCount\": 2222212828,\n     \"rawScore\": 0\n    }\n   ],\n   \"mosaics\": [\n    {\n     \"id\": \"0DC67FBE1CAD29E3\",\n     \"amount\": \"123456\"\n    },\n    {\n     \"id\": \"0DC67FBE1CAD29E3\",\n     \"amount\": \"123456\"\n    }\n   ],\n   \"importance\": 0,\n   \"importanceHeight\": 1\n  }\n },\n {\n  \"id\": \"<string>\",\n  \"account\": {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n   \"addressHeight\": 1,\n   \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"publicKeyHeight\": 1,\n   \"accountType\": \"<integer>\",\n   \"supplementalPublicKeys\": {\n    \"linked\": {\n     \"publicKey\": \"<string>\"\n    },\n    \"node\": {\n     \"publicKey\": \"<string>\"\n    },\n    \"vrf\": {\n     \"publicKey\": \"<string>\"\n    },\n    \"voting\": {\n     \"publicKeys\": [\n      {\n       \"publicKey\": \"<string>\",\n       \"startPoint\": \"<string>\",\n       \"endPoint\": \"<string>\"\n      },\n      {\n       \"publicKey\": \"<string>\",\n       \"startPoint\": \"<string>\",\n       \"endPoint\": \"<string>\"\n      }\n     ]\n    }\n   },\n   \"activityBuckets\": [\n    {\n     \"startHeight\": 1,\n     \"totalFeesPaid\": \"123456\",\n     \"beneficiaryCount\": 2222212828,\n     \"rawScore\": 0\n    },\n    {\n     \"startHeight\": 1,\n     \"totalFeesPaid\": \"123456\",\n     \"beneficiaryCount\": 2222212828,\n     \"rawScore\": 0\n    }\n   ],\n   \"mosaics\": [\n    {\n     \"id\": \"0DC67FBE1CAD29E3\",\n     \"amount\": \"123456\"\n    },\n    {\n     \"id\": \"0DC67FBE1CAD29E3\",\n     \"amount\": \"123456\"\n    }\n   ],\n   \"importance\": 0,\n   \"importanceHeight\": 1\n  }\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "780c7c0e-2066-4ae6-b7ac-5fe2e75e3b92",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "710e80b5-f38f-4d0d-bf1f-b361d127fae9",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "477461d9-7004-427f-8394-0b582bfe9beb",
                    "name": "Get account information",
                    "request": {
                        "name": "Get account information",
                        "description": {
                            "content": "Returns the account information.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "accounts",
                                ":accountId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Account public key or address enconded using a 32-character set.",
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "accountId"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "3f78e055-e5c7-4c03-9c6a-ad9d5c0fe4b6",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "accounts",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "accountId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"id\": \"<string>\",\n \"account\": {\n  \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n  \"addressHeight\": 1,\n  \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"publicKeyHeight\": 1,\n  \"accountType\": \"<integer>\",\n  \"supplementalPublicKeys\": {\n   \"linked\": {\n    \"publicKey\": \"<string>\"\n   },\n   \"node\": {\n    \"publicKey\": \"<string>\"\n   },\n   \"vrf\": {\n    \"publicKey\": \"<string>\"\n   },\n   \"voting\": {\n    \"publicKeys\": [\n     {\n      \"publicKey\": \"<string>\",\n      \"startPoint\": \"<string>\",\n      \"endPoint\": \"<string>\"\n     },\n     {\n      \"publicKey\": \"<string>\",\n      \"startPoint\": \"<string>\",\n      \"endPoint\": \"<string>\"\n     }\n    ]\n   }\n  },\n  \"activityBuckets\": [\n   {\n    \"startHeight\": 1,\n    \"totalFeesPaid\": \"123456\",\n    \"beneficiaryCount\": 2222212828,\n    \"rawScore\": 0\n   },\n   {\n    \"startHeight\": 1,\n    \"totalFeesPaid\": \"123456\",\n    \"beneficiaryCount\": 2222212828,\n    \"rawScore\": 0\n   }\n  ],\n  \"mosaics\": [\n   {\n    \"id\": \"0DC67FBE1CAD29E3\",\n    \"amount\": \"123456\"\n   },\n   {\n    \"id\": \"0DC67FBE1CAD29E3\",\n    \"amount\": \"123456\"\n   }\n  ],\n  \"importance\": 0,\n  \"importanceHeight\": 1\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0ae20bf1-9e6b-46b8-8e0e-f11f99356b81",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "accounts",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "accountId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "236a0231-daa4-4ec4-9058-a5e15661ca01",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "accounts",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "accountId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "ad065b52-38c4-4d8b-aa6f-5f43b62d678b",
            "name": "blocks",
            "item": [
                {
                    "id": "1b5489fc-8625-4979-a0fa-49a2b9feed80",
                    "name": "Get blocks",
                    "request": {
                        "name": "Get blocks",
                        "description": {
                            "content": "Gets an array of bocks.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "blocks"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "description": "Filter by public key of the account signing the entity.",
                                    "key": "signerPublicKey",
                                    "value": "<hex>"
                                },
                                {
                                    "description": "Filter by beneficiary address.",
                                    "key": "beneficiaryAddress",
                                    "value": "<string>"
                                },
                                {
                                    "description": "Select the number of entries to return.",
                                    "key": "pageSize",
                                    "value": "10"
                                },
                                {
                                    "description": "Filter by page number.",
                                    "key": "pageNumber",
                                    "value": "1"
                                },
                                {
                                    "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                    "key": "offset",
                                    "value": "<string>"
                                },
                                {
                                    "description": "Sort responses in ascending or descending order based on the collection property set on the param ``orderBy``.\nIf the request does not specify ``orderBy``, REST returns the collection ordered by id.\n",
                                    "key": "order",
                                    "value": "desc"
                                },
                                {
                                    "description": "Sort responses by the property set.\n",
                                    "key": "orderBy",
                                    "value": "<string>"
                                }
                            ],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "5bdad3af-3d92-4122-98d0-e2492dab8c10",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "blocks"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "signerPublicKey",
                                            "value": "AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26"
                                        },
                                        {
                                            "key": "beneficiaryAddress",
                                            "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "key": "pageNumber",
                                            "value": "1"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "order",
                                            "value": "desc"
                                        },
                                        {
                                            "key": "orderBy",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"meta\": {\n    \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"totalFee\": \"123456\",\n    \"generationHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"stateHashSubCacheMerkleRoots\": [\n     \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n     \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n    ],\n    \"numTransactions\": 0,\n    \"numStatements\": 1\n   },\n   \"block\": {\n    \"size\": 2222212828,\n    \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n    \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"version\": \"<integer>\",\n    \"network\": 144,\n    \"type\": \"<integer>\",\n    \"height\": 1,\n    \"timestamp\": 108303181802,\n    \"difficulty\": 100000000000000,\n    \"proofGamma\": \"8D49594A96C31EC6C64305FB2CCB47AA7A4AC0A4F614442BB3684D2BF41F274E\",\n    \"proofVerificationHash\": \"82FB583BFE3EE78805784D078F2547AE\",\n    \"proofScalar\": \"480175C83739B22C53EAECAA7E7F3B245F1DFAFA6B3AE5C1D0129502FCBAAD0C\",\n    \"previousBlockHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"transactionsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"receiptsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"stateHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"beneficiaryAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"feeMultiplier\": 0\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"meta\": {\n    \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"totalFee\": \"123456\",\n    \"generationHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"stateHashSubCacheMerkleRoots\": [\n     \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n     \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n    ],\n    \"numTransactions\": 0,\n    \"numStatements\": 1\n   },\n   \"block\": {\n    \"size\": 2222212828,\n    \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n    \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"version\": \"<integer>\",\n    \"network\": 144,\n    \"type\": \"<integer>\",\n    \"height\": 1,\n    \"timestamp\": 108303181802,\n    \"difficulty\": 100000000000000,\n    \"proofGamma\": \"8D49594A96C31EC6C64305FB2CCB47AA7A4AC0A4F614442BB3684D2BF41F274E\",\n    \"proofVerificationHash\": \"82FB583BFE3EE78805784D078F2547AE\",\n    \"proofScalar\": \"480175C83739B22C53EAECAA7E7F3B245F1DFAFA6B3AE5C1D0129502FCBAAD0C\",\n    \"previousBlockHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"transactionsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"receiptsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"stateHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"beneficiaryAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"feeMultiplier\": 0\n   }\n  }\n ],\n \"pagination\": {\n  \"pageNumber\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"totalEntries\": \"<integer>\",\n  \"totalPages\": \"<integer>\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b06d1e17-fd88-4e65-a961-d7f7aa3d5d2c",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "blocks"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "signerPublicKey",
                                            "value": "AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26"
                                        },
                                        {
                                            "key": "beneficiaryAddress",
                                            "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "key": "pageNumber",
                                            "value": "1"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "order",
                                            "value": "desc"
                                        },
                                        {
                                            "key": "orderBy",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "4bf7e686-3026-4a0b-ab86-f355d8e02eda",
                    "name": "{height}",
                    "item": [
                        {
                            "id": "d024bc4e-9501-41a8-822c-a513f0fe3241",
                            "name": "Get block information",
                            "request": {
                                "name": "Get block information",
                                "description": {
                                    "content": "Gets a block from the chain that has the given height.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "blocks",
                                        ":height"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "description": "Block height.",
                                            "type": "any",
                                            "value": {
                                                "value": "reference #/components/schemas/Height not found in the OpenAPI spec"
                                            },
                                            "key": "height"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "a2914606-645e-4b37-91ec-684e163ef66a",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "blocks",
                                                ":height"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "height"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"id\": \"<string>\",\n \"meta\": {\n  \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"totalFee\": \"123456\",\n  \"generationHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"stateHashSubCacheMerkleRoots\": [\n   \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n  ],\n  \"numTransactions\": 0,\n  \"numStatements\": 1\n },\n \"block\": {\n  \"size\": 2222212828,\n  \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n  \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"version\": \"<integer>\",\n  \"network\": 144,\n  \"type\": \"<integer>\",\n  \"height\": 1,\n  \"timestamp\": 108303181802,\n  \"difficulty\": 100000000000000,\n  \"proofGamma\": \"8D49594A96C31EC6C64305FB2CCB47AA7A4AC0A4F614442BB3684D2BF41F274E\",\n  \"proofVerificationHash\": \"82FB583BFE3EE78805784D078F2547AE\",\n  \"proofScalar\": \"480175C83739B22C53EAECAA7E7F3B245F1DFAFA6B3AE5C1D0129502FCBAAD0C\",\n  \"previousBlockHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"transactionsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"receiptsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"stateHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"beneficiaryAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n  \"feeMultiplier\": 0\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "125885d4-6854-40c7-9162-d453f3dd4837",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "blocks",
                                                ":height"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "height"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "7ea78115-1def-4ef3-bd6b-0f649411924c",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "blocks",
                                                ":height"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "height"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "9b00c3b6-3811-4484-a543-215bbd2b8393",
                            "name": "Get the merkle path for a given a transaction and block",
                            "request": {
                                "name": "Get the merkle path for a given a transaction and block",
                                "description": {
                                    "content": "Returns the merkle path for a transaction included in a block.\nThe merkle path is the minimum number of nodes needed to calculate the merkle root.\n\nSteps to calculate the merkle root:\n1. proofHash = hash (leaf).\n2. Concatenate proofHash with the first unprocessed item from the merklePath list as follows:\n* a) If item.position == left -> proofHash = sha_256(item.hash + proofHash).\n* b) If item.position == right -> proofHash = sha_256(proofHash+ item.hash).\n3. Repeat 2. for every item in the merklePath list.\n4. Compare if the calculated proofHash equals the one recorded in the\nblock header (block.transactionsHash) to verify if the transaction was included in the block.\n",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "blocks",
                                        ":height",
                                        "transactions",
                                        ":hash",
                                        "merkle"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "description": "Block height.",
                                            "type": "any",
                                            "value": {
                                                "value": "reference #/components/schemas/Height not found in the OpenAPI spec"
                                            },
                                            "key": "height"
                                        },
                                        {
                                            "description": "Transaction hash.",
                                            "type": "any",
                                            "value": {
                                                "value": "reference #/components/schemas/Hash256 not found in the OpenAPI spec"
                                            },
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "98beb08f-f236-47b7-b9c2-301958030a35",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "blocks",
                                                ":height",
                                                "transactions",
                                                ":hash",
                                                "merkle"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "height"
                                                },
                                                {
                                                    "type": "any",
                                                    "key": "hash"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"merklePath\": [\n  {\n   \"position\": \"<string>\",\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n  },\n  {\n   \"position\": \"<string>\",\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n  }\n ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "5f036fe4-b96c-4f5e-8813-623f3abe5085",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "blocks",
                                                ":height",
                                                "transactions",
                                                ":hash",
                                                "merkle"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "height"
                                                },
                                                {
                                                    "type": "any",
                                                    "key": "hash"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "8507fce5-8197-41a8-8c41-8adc937b60ac",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "blocks",
                                                ":height",
                                                "transactions",
                                                ":hash",
                                                "merkle"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "height"
                                                },
                                                {
                                                    "type": "any",
                                                    "key": "hash"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "55a18423-fd5c-4c09-bf58-eaa44906ecdf",
                            "name": "Get the merkle path for a given a receipt statement hash and block",
                            "request": {
                                "name": "Get the merkle path for a given a receipt statement hash and block",
                                "description": {
                                    "content": "Returns the merkle path for a receipt statement or resolution linked to a block.\nThe merkle path is the minimum number of nodes needed to calculate the merkle root.\n\nSteps to calculate the merkle root:\n1. proofHash = hash (leaf).\n2. Concatenate proofHash with the first unprocessed item from the merklePath list as follows:\n* a) If item.position == left -> proofHash = sha_256(item.hash + proofHash).\n* b) If item.position == right -> proofHash = sha_256(proofHash+ item.hash).\n3. Repeat 2. for every item in the merklePath list.\n4. Compare if the calculated proofHash equals the one recorded in the\nblock header (block.receiptsHash) to verify if the statement was linked with the block.\n",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "blocks",
                                        ":height",
                                        "statements",
                                        ":hash",
                                        "merkle"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "description": "Block height.",
                                            "type": "any",
                                            "value": {
                                                "value": "reference #/components/schemas/Height not found in the OpenAPI spec"
                                            },
                                            "key": "height"
                                        },
                                        {
                                            "description": "Receipt hash.",
                                            "type": "any",
                                            "value": {
                                                "value": "reference #/components/schemas/Hash256 not found in the OpenAPI spec"
                                            },
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "973a01b4-ae35-434e-8619-801485c2a94e",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "blocks",
                                                ":height",
                                                "statements",
                                                ":hash",
                                                "merkle"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "height"
                                                },
                                                {
                                                    "type": "any",
                                                    "key": "hash"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"merklePath\": [\n  {\n   \"position\": \"<string>\",\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n  },\n  {\n   \"position\": \"<string>\",\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n  }\n ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "9e69c00f-0d76-4802-a03e-8e03eaa0f78d",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "blocks",
                                                ":height",
                                                "statements",
                                                ":hash",
                                                "merkle"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "height"
                                                },
                                                {
                                                    "type": "any",
                                                    "key": "hash"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "e0e13433-e370-4573-83da-fc0237602c78",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "blocks",
                                                ":height",
                                                "statements",
                                                ":hash",
                                                "merkle"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "height"
                                                },
                                                {
                                                    "type": "any",
                                                    "key": "hash"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "be0cb780-0dca-4bb3-818b-2541e7533abc",
            "name": "chain",
            "item": [
                {
                    "id": "e1bc2a08-0842-4cc6-8548-b176ac245316",
                    "name": "Get the current height of the chain",
                    "request": {
                        "name": "Get the current height of the chain",
                        "description": {
                            "content": "Returns the current height of the blockchain.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "chain",
                                "height"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "c1ac1551-2fa1-485f-9cc6-7ab5a50de5c0",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "chain",
                                        "height"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"height\": 1\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "0002226f-23e6-43c6-994a-95cc0c65872f",
                    "name": "Get the current score of the chain",
                    "request": {
                        "name": "Get the current score of the chain",
                        "description": {
                            "content": "Gets the current score of the blockchain. The higher the score, the better the chain.\nDuring synchronization, nodes try to get the best blockchain in the network.\n\nThe score for a block is derived from its difficulty and the time (in seconds) that has elapsed since the last block:\n\n    block score = difficulty − time elapsed since last block\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "chain",
                                "score"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "a6683bfa-cb2c-4bf6-856a-414cd30ffdaf",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "chain",
                                        "score"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"scoreHigh\": 1683298087010368300,\n \"scoreLow\": 1683298087010368300\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "99f82810-05a4-4740-b602-d26bd9313734",
            "name": "network",
            "item": [
                {
                    "id": "c0dce6c4-5565-4381-9157-8b6bd17b987c",
                    "name": "Get the current network type of the chain",
                    "request": {
                        "name": "Get the current network type of the chain",
                        "description": {
                            "content": "Returns the current network type.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "network"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "39d847e6-7496-4c17-95a3-7424cf0c7d42",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "network"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"name\": \"mijinTest\",\n \"description\": \"catapult development network\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "32013b9b-323b-46e4-8c08-6042221df8eb",
                    "name": "fees",
                    "item": [
                        {
                            "id": "9e7739a1-4eab-48c7-86d9-b74a625d2915",
                            "name": "Get rental fees information",
                            "request": {
                                "name": "Get rental fees information",
                                "description": {
                                    "content": "Returns the estimated effective rental fees for namespaces and mosaics.\nThis endpoint is only available if the REST instance has access to catapult-server ``resources/config-network.properties`` file.\nTo activate this feature, add the setting \"network.propertiesFilePath\" in the configuration file (rest/resources/rest.json).\n",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "network",
                                        "fees",
                                        "rental"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "8b1686db-fc5a-4ed5-9169-ed5cb7487dda",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "network",
                                                "fees",
                                                "rental"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"effectiveRootNamespaceRentalFeePerBlock\": \"123456\",\n \"effectiveChildNamespaceRentalFee\": \"123456\",\n \"effectiveMosaicRentalFee\": \"123456\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "064b8afd-0024-4e3f-ae74-ce062a235d93",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "network",
                                                "fees",
                                                "rental"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "1abaa801-7528-4e19-81fc-d9352a82e1bb",
                            "name": "Get transaction fees information",
                            "request": {
                                "name": "Get transaction fees information",
                                "description": {
                                    "content": "Returns the average, median, highest and lower fee multiplier over the last \"numBlocksTransactionFeeStats\".\nThe setting \"numBlocksTransactionFeeStats\" is adjustable via the configuration file (rest/resources/rest.json) per REST instance.\n",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "network",
                                        "fees",
                                        "transaction"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "5d9fcda0-f395-42d1-913e-ffa4b3a745e9",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "network",
                                                "fees",
                                                "transaction"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"averageFeeMultiplier\": 0,\n \"medianFeeMultiplier\": 0,\n \"highestFeeMultiplier\": 0,\n \"lowestFeeMultiplier\": 0\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "74a6d9bc-4cae-4f98-bec2-d3a16bec93ce",
                    "name": "Get the network properties",
                    "request": {
                        "name": "Get the network properties",
                        "description": {
                            "content": "Returns the content from a catapult-server network configuration file (resources/config-network.properties).\nTo enable this feature, the REST setting \"network.propertiesFilePath\" must define where the file is located.\nThis is adjustable via the configuration file (rest/resources/rest.json) per REST instance.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "network",
                                "properties"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "f3d57087-c438-4ea9-9bf0-3e071ccecef9",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "network",
                                        "properties"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"network\": {\n  \"identifier\": \"mijin-test\",\n  \"nodeEqualityStrategy\": \"<string>\",\n  \"nemesisSignerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"generationHashSeed\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"epochAdjustment\": \"1573430400s\"\n },\n \"chain\": {\n  \"enableVerifiableState\": true,\n  \"enableVerifiableReceipts\": true,\n  \"currencyMosaicId\": \"0x24F4'26B8'D549'3D4B\",\n  \"harvestingMosaicId\": \"0x1D9C'DC7E'218C'A88D\",\n  \"blockGenerationTargetTime\": \"30s\",\n  \"blockTimeSmoothingFactor\": \"3000\",\n  \"blockFinalizationInterval\": 30,\n  \"importanceGrouping\": \"39\",\n  \"importanceActivityPercentage\": \"5\",\n  \"maxRollbackBlocks\": \"40\",\n  \"maxDifficultyBlocks\": \"60\",\n  \"defaultDynamicFeeMultiplier\": \"10'000\",\n  \"maxTransactionLifetime\": \"24h\",\n  \"maxBlockFutureTime\": \"500ms\",\n  \"initialCurrencyAtomicUnits\": \"8'998'999'998'000'000\",\n  \"maxMosaicAtomicUnits\": \"9'000'000'000'000'000\",\n  \"totalChainImportance\": \"15'000'000\",\n  \"minHarvesterBalance\": \"500\",\n  \"maxHarvesterBalance\": \"4'000'000\",\n  \"minVoterBalance\": \"50'000\",\n  \"maxVotingKeysPerAccount\": \"3\",\n  \"minVotingKeyLifetime\": \"72\",\n  \"maxVotingKeyLifetime\": \"26280\",\n  \"harvestBeneficiaryPercentage\": \"10\",\n  \"harvestNetworkPercentage\": \"5\",\n  \"harvestNetworkFeeSinkAddress\": \"SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ\",\n  \"blockPruneInterval\": \"360\",\n  \"maxTransactionsPerBlock\": \"200'000\"\n },\n \"plugins\": {\n  \"accountlink\": {\n   \"dummy\": \"<string>\"\n  },\n  \"aggregate\": {\n   \"maxTransactionsPerAggregate\": \"1'000\",\n   \"maxCosignaturesPerAggregate\": \"15\",\n   \"enableStrictCosignatureCheck\": false,\n   \"enableBondedAggregateSupport\": true,\n   \"maxBondedTransactionLifetime\": \"48h\"\n  },\n  \"lockhash\": {\n   \"lockedFundsPerAggregate\": \"10'000'000\",\n   \"maxHashLockDuration\": \"2d\"\n  },\n  \"locksecret\": {\n   \"maxSecretLockDuration\": \"30d\",\n   \"minProofSize\": \"1\",\n   \"maxProofSize\": \"1000\"\n  },\n  \"metadata\": {\n   \"maxValueSize\": \"1024\"\n  },\n  \"mosaic\": {\n   \"maxMosaicsPerAccount\": \"10'000\",\n   \"maxMosaicDuration\": \"3650d\",\n   \"maxMosaicDivisibility\": \"6\",\n   \"mosaicRentalFeeSinkAddress\": \"SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ\",\n   \"mosaicRentalFee\": \"500\"\n  },\n  \"multisig\": {\n   \"maxMultisigDepth\": \"3\",\n   \"maxCosignatoriesPerAccount\": \"10\",\n   \"maxCosignedAccountsPerAccount\": \"5\"\n  },\n  \"namespace\": {\n   \"maxNameSize\": \"64\",\n   \"maxChildNamespaces\": \"500\",\n   \"maxNamespaceDepth\": \"3\",\n   \"minNamespaceDuration\": \"1m\",\n   \"maxNamespaceDuration\": \"365d\",\n   \"namespaceGracePeriodDuration\": \"2m\",\n   \"reservedRootNamespaceNames\": \"xem, nem, user, account, org, com, biz, net, edu, mil, gov, info\",\n   \"namespaceRentalFeeSinkAddress\": \"SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ\",\n   \"rootNamespaceRentalFeePerBlock\": \"1\",\n   \"childNamespaceRentalFee\": \"100\"\n  },\n  \"restrictionaccount\": {\n   \"maxAccountRestrictionValues\": \"512\"\n  },\n  \"restrictionmosaic\": {\n   \"maxMosaicRestrictionValues\": \"20\"\n  },\n  \"transfer\": {\n   \"maxMessageSize\": \"1024\"\n  }\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bf303342-e9a6-44f3-97b2-2dbec217820a",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "network",
                                        "properties"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "fdbdf52d-518c-4064-81e2-21c108e51308",
            "name": "node",
            "item": [
                {
                    "id": "18c153d0-1a10-442d-82a8-677f44e71c4b",
                    "name": "Get the node health information",
                    "request": {
                        "name": "Get the node health information",
                        "description": {
                            "content": "Supplies information regarding the connection and services status.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "health"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "442c8463-cd2b-4c70-9ec4-a4b746104666",
                            "name": "Both API node and database services are reachable from REST server.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "health"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"status\": {\n  \"apiNode\": \"<string>\",\n  \"db\": \"<string>\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "364a5341-110d-45be-b3cc-4785bb05b35c",
                            "name": "Either API node or database service is unavailable or unreachable from REST server.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "health"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"status\": {\n  \"apiNode\": \"<string>\",\n  \"db\": \"<string>\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "e0f8fc83-dcb5-4330-8559-d4f6549ac05a",
                    "name": "Get the node information",
                    "request": {
                        "name": "Get the node information",
                        "description": {
                            "content": "Supplies additional information about the application running on a node.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "info"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "b509ce7d-58b9-4605-8c35-8d489703ebb9",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "info"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"version\": 0,\n \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n \"networkGenerationHashSeed\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n \"roles\": 2,\n \"port\": 7900,\n \"networkIdentifier\": 144,\n \"friendlyName\": \"api-node-0\",\n \"host\": \"127.0.0.1\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "42d6609b-10e7-4477-80ea-34344cd7ce8c",
                    "name": "Get peers information",
                    "request": {
                        "name": "Get peers information",
                        "description": {
                            "content": "Gets the list of peers visible by the node.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "peers"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "ebd6bad3-88bf-482b-8c31-f59448e8189b",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "peers"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"version\": 0,\n  \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"networkGenerationHashSeed\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"roles\": 2,\n  \"port\": 7900,\n  \"networkIdentifier\": 144,\n  \"friendlyName\": \"api-node-0\",\n  \"host\": \"127.0.0.1\"\n },\n {\n  \"version\": 0,\n  \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"networkGenerationHashSeed\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"roles\": 2,\n  \"port\": 7900,\n  \"networkIdentifier\": 144,\n  \"friendlyName\": \"api-node-0\",\n  \"host\": \"127.0.0.1\"\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "b7227678-5a34-4488-b20b-cf534b86ba9e",
                    "name": "Get the storage information of the node",
                    "request": {
                        "name": "Get the storage information of the node",
                        "description": {
                            "content": "Returns storage information about the node.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "storage"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "0b97f5ff-6463-493f-bc5c-4a7acd9c7cd8",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "storage"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"numBlocks\": 245053,\n \"numTransactions\": 58590,\n \"numAccounts\": 177\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "9f2fd8a2-9a7f-47fb-891e-44bb87dbe234",
                    "name": "Get the node time",
                    "request": {
                        "name": "Get the node time",
                        "description": {
                            "content": "Gets the node time at the moment the reply was sent and received.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "time"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "316c8b84-01d2-4ed0-8b80-cdec413423e5",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "time"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"communicationTimestamps\": {\n  \"sendTimestamp\": 108303181802,\n  \"receiveTimestamp\": 108303181802\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "271b8934-dfe1-473c-8cb0-c97a323ecad0",
                    "name": "Get the version of the running REST component",
                    "request": {
                        "name": "Get the version of the running REST component",
                        "description": {
                            "content": "Returns the version of the running catapult-rest component.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "server"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "a6a55c1c-0c87-49e5-82f3-e2a9529d56a4",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "server"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"serverInfo\": {\n  \"restVersion\": \"1.0.14\",\n  \"sdkVersion\": \"0.7.14\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "b70225ba-bb7b-4415-b0db-fe7d9b20ff9c",
            "name": "transactions",
            "item": [
                {
                    "id": "defb9be1-a549-4d33-b9b3-62734a7fec25",
                    "name": "Announce a new transaction",
                    "request": {
                        "name": "Announce a new transaction",
                        "description": {
                            "content": "Announces a transaction to the network.\nThe [catbuffer library](https://github.com/nemtech/catbuffer) defines the protocol to serialize and deserialize Symbol entities.\nCatbuffers are integrated into [Symbol SDKs](https://nemtech.github.io/sdk.html). \nIt's recommended to use SDKs instead of calling the API endpoint directly to announce transactions.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "transactions"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"payload\": \"<string>\"\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "f2054074-bc17-49de-927d-833065c5f1ac",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Accepted",
                            "code": 202,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e21207d9-ad9c-46cc-8c53-f021a3dade38",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8d72c60c-fba3-4653-a958-ac0eb014c388",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "30062f58-da31-4569-9102-8ff4cc1b70b1",
                    "name": "confirmed",
                    "item": [
                        {
                            "id": "51be90b9-d9f0-46e1-86b1-378b127399e8",
                            "name": "Get transactions",
                            "request": {
                                "name": "Get transactions",
                                "description": {
                                    "content": "Returns an array of confirmed transactions.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "transactions",
                                        "confirmed"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "description": "Filter by address involved in the transaction. \nAn account's address is consider to be involved in the transaction when the account is the sender, recipient, or it is required to cosign the transaction.\nThis filter cannot be combined with ``recipientAddress`` and ``signerPublicKey`` query params.\n",
                                            "key": "address",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Filter by address of the account receiving the transaction.",
                                            "key": "recipientAddress",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Filter by public key of the account signing the entity.",
                                            "key": "signerPublicKey",
                                            "value": "<hex>"
                                        },
                                        {
                                            "description": "Filter by block height.",
                                            "key": "height",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Filter by transaction type.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                            "key": "type",
                                            "value": "<integer>"
                                        },
                                        {
                                            "description": "Filter by transaction type.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                            "key": "type",
                                            "value": "<integer>"
                                        },
                                        {
                                            "description": "When true, the endpoint also returns all the embedded aggregate transactions.\nOtherwise, only top-level transactions used to calcualate the block transactionsHash are returned.\n",
                                            "key": "embedded",
                                            "value": "false"
                                        },
                                        {
                                            "description": "Select the number of entries to return.",
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "description": "Filter by page number.",
                                            "key": "pageNumber",
                                            "value": "1"
                                        },
                                        {
                                            "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                            "key": "offset",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Sort responses in ascending or descending order based on the collection property set on the param ``orderBy``.\nIf the request does not specify ``orderBy``, REST returns the collection ordered by id.\n",
                                            "key": "order",
                                            "value": "desc"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "4f4c112b-c00d-4973-87e4-27fd40cd0341",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "confirmed"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "address",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "recipientAddress",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "signerPublicKey",
                                                    "value": "AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26"
                                                },
                                                {
                                                    "key": "height",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "embedded",
                                                    "value": "false"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "pageNumber",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"meta\": {\n    \"height\": 1,\n    \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"index\": \"<integer>\"\n   },\n   \"transaction\": {\n    \"size\": 2222212828,\n    \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n    \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"version\": \"<integer>\",\n    \"network\": 144,\n    \"type\": \"<integer>\",\n    \"maxFee\": \"123456\",\n    \"deadline\": 200,\n    \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"linkAction\": \"<integer>\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"meta\": {\n    \"height\": 1,\n    \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"index\": \"<integer>\"\n   },\n   \"transaction\": {\n    \"size\": 2222212828,\n    \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n    \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"version\": \"<integer>\",\n    \"network\": 144,\n    \"type\": \"<integer>\",\n    \"maxFee\": \"123456\",\n    \"deadline\": 200,\n    \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"linkAction\": \"<integer>\"\n   }\n  }\n ],\n \"pagination\": {\n  \"pageNumber\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"totalEntries\": \"<integer>\",\n  \"totalPages\": \"<integer>\"\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "ed95eae6-115a-4c64-9096-2934f0c1c3ca",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "confirmed"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "address",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "recipientAddress",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "signerPublicKey",
                                                    "value": "AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26"
                                                },
                                                {
                                                    "key": "height",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "embedded",
                                                    "value": "false"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "pageNumber",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "150c03ac-087d-4519-a6f7-31d34836ff34",
                            "name": "Get transactions information",
                            "request": {
                                "name": "Get transactions information",
                                "description": {
                                    "content": "Returns confirmed transactions information for a given array of transactionIds.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "transactions",
                                        "confirmed"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "noauth"
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"transactionIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                }
                            },
                            "response": [
                                {
                                    "id": "57ab83b7-6e5f-48e7-8b0f-4ab27a1a5b13",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "confirmed"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "[\n {\n  \"id\": \"<string>\",\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\"\n  },\n  \"transaction\": {\n   \"size\": 2222212828,\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n },\n {\n  \"id\": \"<string>\",\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\"\n  },\n  \"transaction\": {\n   \"size\": 2222212828,\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "854ff646-eebd-4c2e-aa7d-c9a21ee5e952",
                                    "name": "InvalidContent",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "confirmed"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "b73cca80-5de2-4ac2-8903-07dba0951429",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "confirmed"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "9f27a87d-7e2b-4cc1-b693-8f29225ee1ab",
                            "name": "Get transaction information",
                            "request": {
                                "name": "Get transaction information",
                                "description": {
                                    "content": "Returns confirmed transaction information given a transactionId or hash.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "transactions",
                                        "confirmed",
                                        ":transactionId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "description": "Transaction id or hash.",
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "transactionId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "617e0218-02f9-4e24-b72d-1af8e6081145",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "confirmed",
                                                ":transactionId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "transactionId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"id\": \"<string>\",\n \"meta\": {\n  \"height\": 1,\n  \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"index\": \"<integer>\"\n },\n \"transaction\": {\n  \"size\": 2222212828,\n  \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n  \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"version\": \"<integer>\",\n  \"network\": 144,\n  \"type\": \"<integer>\",\n  \"maxFee\": \"123456\",\n  \"deadline\": 200,\n  \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"linkAction\": \"<integer>\"\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "4e20f081-fcb0-4d52-a5af-4948789b6de0",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "confirmed",
                                                ":transactionId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "transactionId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "3eecdfc6-d1b2-44fd-b9dc-592aa7e418ff",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "confirmed",
                                                ":transactionId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "transactionId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "16dcb6ff-7a90-40c4-a58c-04bb88cfd69e",
                    "name": "unconfirmed",
                    "item": [
                        {
                            "id": "159b27bc-bf95-46a9-be97-cef5f942f123",
                            "name": "Get transactions",
                            "request": {
                                "name": "Get transactions",
                                "description": {
                                    "content": "Returns an array of unconfirmed transactions.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "transactions",
                                        "unconfirmed"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "description": "Filter by address involved in the transaction. \nAn account's address is consider to be involved in the transaction when the account is the sender, recipient, or it is required to cosign the transaction.\nThis filter cannot be combined with ``recipientAddress`` and ``signerPublicKey`` query params.\n",
                                            "key": "address",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Filter by address of the account receiving the transaction.",
                                            "key": "recipientAddress",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Filter by public key of the account signing the entity.",
                                            "key": "signerPublicKey",
                                            "value": "<hex>"
                                        },
                                        {
                                            "description": "Filter by block height.",
                                            "key": "height",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Filter by transaction type.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                            "key": "type",
                                            "value": "<integer>"
                                        },
                                        {
                                            "description": "Filter by transaction type.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                            "key": "type",
                                            "value": "<integer>"
                                        },
                                        {
                                            "description": "When true, the endpoint also returns all the embedded aggregate transactions.\nOtherwise, only top-level transactions used to calcualate the block transactionsHash are returned.\n",
                                            "key": "embedded",
                                            "value": "false"
                                        },
                                        {
                                            "description": "Select the number of entries to return.",
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "description": "Filter by page number.",
                                            "key": "pageNumber",
                                            "value": "1"
                                        },
                                        {
                                            "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                            "key": "offset",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Sort responses in ascending or descending order based on the collection property set on the param ``orderBy``.\nIf the request does not specify ``orderBy``, REST returns the collection ordered by id.\n",
                                            "key": "order",
                                            "value": "desc"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "fd33a64a-069c-403e-b538-fd7067620a6d",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "unconfirmed"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "address",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "recipientAddress",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "signerPublicKey",
                                                    "value": "AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26"
                                                },
                                                {
                                                    "key": "height",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "embedded",
                                                    "value": "false"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "pageNumber",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"meta\": {\n    \"height\": 1,\n    \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"index\": \"<integer>\"\n   },\n   \"transaction\": {\n    \"size\": 2222212828,\n    \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n    \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"version\": \"<integer>\",\n    \"network\": 144,\n    \"type\": \"<integer>\",\n    \"maxFee\": \"123456\",\n    \"deadline\": 200,\n    \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"linkAction\": \"<integer>\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"meta\": {\n    \"height\": 1,\n    \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"index\": \"<integer>\"\n   },\n   \"transaction\": {\n    \"size\": 2222212828,\n    \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n    \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"version\": \"<integer>\",\n    \"network\": 144,\n    \"type\": \"<integer>\",\n    \"maxFee\": \"123456\",\n    \"deadline\": 200,\n    \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"linkAction\": \"<integer>\"\n   }\n  }\n ],\n \"pagination\": {\n  \"pageNumber\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"totalEntries\": \"<integer>\",\n  \"totalPages\": \"<integer>\"\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "d26060eb-1e50-43f0-a7bc-bb8c7a9ed99f",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "unconfirmed"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "address",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "recipientAddress",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "signerPublicKey",
                                                    "value": "AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26"
                                                },
                                                {
                                                    "key": "height",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "embedded",
                                                    "value": "false"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "pageNumber",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "d64d301e-644f-41c0-b454-7afb8a326665",
                            "name": "Get transactions information",
                            "request": {
                                "name": "Get transactions information",
                                "description": {
                                    "content": "Returns unconfirmed transactions information for a given array of transactionIds.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "transactions",
                                        "unconfirmed"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "noauth"
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"transactionIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                }
                            },
                            "response": [
                                {
                                    "id": "598480cd-0adb-4250-9ddc-bbad346733ba",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "unconfirmed"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "[\n {\n  \"id\": \"<string>\",\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\"\n  },\n  \"transaction\": {\n   \"size\": 2222212828,\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n },\n {\n  \"id\": \"<string>\",\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\"\n  },\n  \"transaction\": {\n   \"size\": 2222212828,\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "dc1aef7e-f4e8-4dc6-90a3-c1486c4ea9ad",
                                    "name": "InvalidContent",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "unconfirmed"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "dff55edb-221e-405c-9b98-6df2edcbc860",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "unconfirmed"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "4c9f0b13-d342-4480-8cfa-a2a976881ad1",
                            "name": "Get transaction information",
                            "request": {
                                "name": "Get transaction information",
                                "description": {
                                    "content": "Returns unconfirmed transaction information given a transactionId or hash.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "transactions",
                                        "unconfirmed",
                                        ":transactionId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "description": "Transaction id or hash.",
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "transactionId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "4f7b22ea-92c9-4343-a815-d62b0a03e8da",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "unconfirmed",
                                                ":transactionId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "transactionId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"id\": \"<string>\",\n \"meta\": {\n  \"height\": 1,\n  \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"index\": \"<integer>\"\n },\n \"transaction\": {\n  \"size\": 2222212828,\n  \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n  \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"version\": \"<integer>\",\n  \"network\": 144,\n  \"type\": \"<integer>\",\n  \"maxFee\": \"123456\",\n  \"deadline\": 200,\n  \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"linkAction\": \"<integer>\"\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "24335aef-2dfa-46ec-b93b-c53239df41b0",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "unconfirmed",
                                                ":transactionId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "transactionId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "179b03e8-219e-42db-83ae-fd8173d61fe7",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "unconfirmed",
                                                ":transactionId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "transactionId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "dcfa450a-71b6-4d40-bc44-4bcc81106b23",
                    "name": "partial",
                    "item": [
                        {
                            "id": "e3c50609-90e2-435b-8b02-248deacccf34",
                            "name": "Get transactions",
                            "request": {
                                "name": "Get transactions",
                                "description": {
                                    "content": "Returns an array of partial transactions.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "transactions",
                                        "partial"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "description": "Filter by address involved in the transaction. \nAn account's address is consider to be involved in the transaction when the account is the sender, recipient, or it is required to cosign the transaction.\nThis filter cannot be combined with ``recipientAddress`` and ``signerPublicKey`` query params.\n",
                                            "key": "address",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Filter by address of the account receiving the transaction.",
                                            "key": "recipientAddress",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Filter by public key of the account signing the entity.",
                                            "key": "signerPublicKey",
                                            "value": "<hex>"
                                        },
                                        {
                                            "description": "Filter by block height.",
                                            "key": "height",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Filter by transaction type.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                            "key": "type",
                                            "value": "<integer>"
                                        },
                                        {
                                            "description": "Filter by transaction type.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                            "key": "type",
                                            "value": "<integer>"
                                        },
                                        {
                                            "description": "When true, the endpoint also returns all the embedded aggregate transactions.\nOtherwise, only top-level transactions used to calcualate the block transactionsHash are returned.\n",
                                            "key": "embedded",
                                            "value": "false"
                                        },
                                        {
                                            "description": "Select the number of entries to return.",
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "description": "Filter by page number.",
                                            "key": "pageNumber",
                                            "value": "1"
                                        },
                                        {
                                            "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                            "key": "offset",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Sort responses in ascending or descending order based on the collection property set on the param ``orderBy``.\nIf the request does not specify ``orderBy``, REST returns the collection ordered by id.\n",
                                            "key": "order",
                                            "value": "desc"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "5d235252-f61e-420f-a28c-651399dd8263",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "partial"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "address",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "recipientAddress",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "signerPublicKey",
                                                    "value": "AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26"
                                                },
                                                {
                                                    "key": "height",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "embedded",
                                                    "value": "false"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "pageNumber",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"meta\": {\n    \"height\": 1,\n    \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"index\": \"<integer>\"\n   },\n   \"transaction\": {\n    \"size\": 2222212828,\n    \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n    \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"version\": \"<integer>\",\n    \"network\": 144,\n    \"type\": \"<integer>\",\n    \"maxFee\": \"123456\",\n    \"deadline\": 200,\n    \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"linkAction\": \"<integer>\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"meta\": {\n    \"height\": 1,\n    \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"index\": \"<integer>\"\n   },\n   \"transaction\": {\n    \"size\": 2222212828,\n    \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n    \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"version\": \"<integer>\",\n    \"network\": 144,\n    \"type\": \"<integer>\",\n    \"maxFee\": \"123456\",\n    \"deadline\": 200,\n    \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"linkAction\": \"<integer>\"\n   }\n  }\n ],\n \"pagination\": {\n  \"pageNumber\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"totalEntries\": \"<integer>\",\n  \"totalPages\": \"<integer>\"\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "f692221f-ab7a-4b0b-999e-1b2e4b74eb0c",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "partial"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "address",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "recipientAddress",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "signerPublicKey",
                                                    "value": "AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26"
                                                },
                                                {
                                                    "key": "height",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "embedded",
                                                    "value": "false"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "pageNumber",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "0628b2f2-5cf5-4dc3-b4b5-3bf3023de15b",
                            "name": "Announce an aggregate bonded transaction",
                            "request": {
                                "name": "Announce an aggregate bonded transaction",
                                "description": {
                                    "content": "Announces an aggregate bonded transaction to the network.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "transactions",
                                        "partial"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "noauth"
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"payload\": \"<string>\"\n}"
                                }
                            },
                            "response": [
                                {
                                    "id": "e4a8d25f-8616-4872-9f58-631ab94fb4dc",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "partial"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "PUT",
                                        "body": {}
                                    },
                                    "status": "Accepted",
                                    "code": 202,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "47ba0b62-c688-4950-abe6-c277b27fe546",
                                    "name": "InvalidContent",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "partial"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "PUT",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "f48bd76d-1180-48e2-ae36-98e0363f19f0",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "partial"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "PUT",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "2e992833-495b-4f3f-8c24-0359f20f29a8",
                            "name": "Get transactions information",
                            "request": {
                                "name": "Get transactions information",
                                "description": {
                                    "content": "Returns partial transactions information for a given array of transactionIds.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "transactions",
                                        "partial"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "noauth"
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"transactionIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                }
                            },
                            "response": [
                                {
                                    "id": "fe7d53af-8d9a-4aff-ba58-0aed5b7935dc",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "partial"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "[\n {\n  \"id\": \"<string>\",\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\"\n  },\n  \"transaction\": {\n   \"size\": 2222212828,\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n },\n {\n  \"id\": \"<string>\",\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\"\n  },\n  \"transaction\": {\n   \"size\": 2222212828,\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "cbbc3460-0ff9-4641-a4cc-1ef916c69710",
                                    "name": "InvalidContent",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "partial"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "1bc39b38-97c1-4311-a0f5-7f57fee0c976",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "partial"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "3bab23d4-29fe-447d-905b-b7428718205d",
                            "name": "Get transaction information",
                            "request": {
                                "name": "Get transaction information",
                                "description": {
                                    "content": "Returns partial transaction information given a transactionId or hash.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "transactions",
                                        "partial",
                                        ":transactionId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "description": "Transaction id or hash.",
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "transactionId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "bd62e8b6-973b-449f-b7c1-d6d6f3c42d7d",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "partial",
                                                ":transactionId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "transactionId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"id\": \"<string>\",\n \"meta\": {\n  \"height\": 1,\n  \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"index\": \"<integer>\"\n },\n \"transaction\": {\n  \"size\": 2222212828,\n  \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n  \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"version\": \"<integer>\",\n  \"network\": 144,\n  \"type\": \"<integer>\",\n  \"maxFee\": \"123456\",\n  \"deadline\": 200,\n  \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"linkAction\": \"<integer>\"\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "6e2b0ce5-8856-4a4a-89e3-a96fb7a8145b",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "partial",
                                                ":transactionId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "transactionId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "4967f1c2-a334-437e-8bf0-61009b720874",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "partial",
                                                ":transactionId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "transactionId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "8943ed53-1ae1-436d-af26-c7a286b58dc8",
                    "name": "Announce a cosignature transaction",
                    "request": {
                        "name": "Announce a cosignature transaction",
                        "description": {
                            "content": "Announces a cosignature transaction to the network.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "transactions",
                                "cosignature"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"parentHash\": \"<hex>\",\n    \"signature\": \"<string>\",\n    \"signerPublicKey\": \"<hex>\",\n    \"version\": \"<string>\"\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "a512afd7-7303-4f76-8e2e-745c8ed3f669",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactions",
                                        "cosignature"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Accepted",
                            "code": 202,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ff9228a8-f7f8-4aa7-8378-0140894e7f78",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactions",
                                        "cosignature"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "64a310e6-46d1-4d61-9b33-bbff00e5c1ea",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactions",
                                        "cosignature"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "10481710-4928-49d3-9661-394f702b4ede",
            "name": "transaction Status",
            "item": [
                {
                    "id": "a4123f86-2e59-4cbf-a889-90934461449f",
                    "name": "Get transaction statuses",
                    "request": {
                        "name": "Get transaction statuses",
                        "description": {
                            "content": "Returns an array of transaction statuses for a given array of transaction hashes.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "transactionStatus"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"hashes\": [\n        \"<hex>\",\n        \"<hex>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "19c33bfb-9b8f-4b10-8406-12e98fb3cefe",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactionStatus"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"group\": \"<string>\",\n  \"deadline\": 200,\n  \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"code\": \"<string>\",\n  \"height\": 1\n },\n {\n  \"group\": \"<string>\",\n  \"deadline\": 200,\n  \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"code\": \"<string>\",\n  \"height\": 1\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "708c3c67-871a-43e1-a1dc-fa5fb894dcad",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactionStatus"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7190d536-adf3-4deb-b4ff-cd2d3f4dfdde",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactionStatus"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "ab33c12d-7618-4881-99fe-d0ad821f9c3b",
                    "name": "Get transaction status",
                    "request": {
                        "name": "Get transaction status",
                        "description": {
                            "content": "Returns the transaction status for a given hash.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "transactionStatus",
                                ":hash"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Transaction hash.",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/Hash256 not found in the OpenAPI spec"
                                    },
                                    "key": "hash"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "886c2355-9636-4b43-90a6-72824b8b5359",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactionStatus",
                                        ":hash"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"group\": \"<string>\",\n \"deadline\": 200,\n \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n \"code\": \"<string>\",\n \"height\": 1\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2efbd9e6-5f0c-4adc-b1b2-9688eb082dc7",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactionStatus",
                                        ":hash"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a125ed12-40ac-4cec-ae60-a79d611dd4a1",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactionStatus",
                                        ":hash"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "457cb642-caab-4cea-b833-4478c51c8148",
            "name": "Get metadata entries",
            "request": {
                "name": "Get metadata entries",
                "description": {
                    "content": "Returns an array of metadata.",
                    "type": "text/plain"
                },
                "url": {
                    "path": [
                        "metadata"
                    ],
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "query": [
                        {
                            "description": "Filter by address sending the metadata entry.",
                            "key": "sourceAddress",
                            "value": "<string>"
                        },
                        {
                            "description": "Filter by target address.",
                            "key": "targetAddress",
                            "value": "<string>"
                        },
                        {
                            "description": "Filter by metadata key.",
                            "key": "scopedMetadataKey",
                            "value": "<hex>"
                        },
                        {
                            "description": "Filter by namespace or mosaic id.",
                            "key": "targetId",
                            "value": "<hex>"
                        },
                        {
                            "description": "Filter by metadata type.",
                            "key": "metadataType",
                            "value": "<integer>"
                        },
                        {
                            "description": "Select the number of entries to return.",
                            "key": "pageSize",
                            "value": "10"
                        },
                        {
                            "description": "Filter by page number.",
                            "key": "pageNumber",
                            "value": "1"
                        },
                        {
                            "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                            "key": "offset",
                            "value": "<string>"
                        },
                        {
                            "description": "Sort responses in ascending or descending order based on the collection property set on the param ``orderBy``.\nIf the request does not specify ``orderBy``, REST returns the collection ordered by id.\n",
                            "key": "order",
                            "value": "desc"
                        }
                    ],
                    "variable": []
                },
                "method": "GET",
                "auth": {
                    "type": "noauth"
                }
            },
            "response": [
                {
                    "id": "4cde55a7-ef77-4c84-af54-75d380a4d4bd",
                    "name": "success",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "metadata"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "key": "sourceAddress",
                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                },
                                {
                                    "key": "targetAddress",
                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                },
                                {
                                    "key": "scopedMetadataKey",
                                    "value": "0DC67FBE1CAD29E3"
                                },
                                {
                                    "key": "targetId",
                                    "value": "0DC67FBE1CAD29E3"
                                },
                                {
                                    "key": "metadataType",
                                    "value": "<integer>"
                                },
                                {
                                    "key": "pageSize",
                                    "value": "10"
                                },
                                {
                                    "key": "pageNumber",
                                    "value": "1"
                                },
                                {
                                    "key": "offset",
                                    "value": "<string>"
                                },
                                {
                                    "key": "order",
                                    "value": "desc"
                                }
                            ],
                            "variable": []
                        },
                        "method": "GET",
                        "body": {}
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"sourceAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"sourceAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  }\n ],\n \"pagination\": {\n  \"pageNumber\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"totalEntries\": \"<integer>\",\n  \"totalPages\": \"<integer>\"\n }\n}",
                    "cookie": [],
                    "_postman_previewlanguage": "json"
                },
                {
                    "id": "d6316f3d-2b4e-45ef-9076-4d2f7bd2817b",
                    "name": "InvalidArgument",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "metadata"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "key": "sourceAddress",
                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                },
                                {
                                    "key": "targetAddress",
                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                },
                                {
                                    "key": "scopedMetadataKey",
                                    "value": "0DC67FBE1CAD29E3"
                                },
                                {
                                    "key": "targetId",
                                    "value": "0DC67FBE1CAD29E3"
                                },
                                {
                                    "key": "metadataType",
                                    "value": "<integer>"
                                },
                                {
                                    "key": "pageSize",
                                    "value": "10"
                                },
                                {
                                    "key": "pageNumber",
                                    "value": "1"
                                },
                                {
                                    "key": "offset",
                                    "value": "<string>"
                                },
                                {
                                    "key": "order",
                                    "value": "desc"
                                }
                            ],
                            "variable": []
                        },
                        "method": "GET",
                        "body": {}
                    },
                    "status": "Conflict",
                    "code": 409,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                    "cookie": [],
                    "_postman_previewlanguage": "json"
                }
            ],
            "event": []
        },
        {
            "id": "5dd0bd28-cd63-41b4-bf1c-4e8f70b58926",
            "name": "mosaics",
            "item": [
                {
                    "id": "8de58ec3-58d9-407c-bf2c-11f30092a5dd",
                    "name": "Get mosaics",
                    "request": {
                        "name": "Get mosaics",
                        "description": {
                            "content": "Gets an array of mosaics.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "mosaics"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "description": "Filter by owner address.",
                                    "key": "ownerAddress",
                                    "value": "<string>"
                                },
                                {
                                    "description": "Select the number of entries to return.",
                                    "key": "pageSize",
                                    "value": "10"
                                },
                                {
                                    "description": "Filter by page number.",
                                    "key": "pageNumber",
                                    "value": "1"
                                },
                                {
                                    "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                    "key": "offset",
                                    "value": "<string>"
                                },
                                {
                                    "description": "Sort responses in ascending or descending order based on the collection property set on the param ``orderBy``.\nIf the request does not specify ``orderBy``, REST returns the collection ordered by id.\n",
                                    "key": "order",
                                    "value": "desc"
                                }
                            ],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "476481af-5a07-4bff-be20-58a15ab7a631",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "ownerAddress",
                                            "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "key": "pageNumber",
                                            "value": "1"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "order",
                                            "value": "desc"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"mosaic\": {\n    \"id\": \"0DC67FBE1CAD29E3\",\n    \"supply\": \"123456\",\n    \"startHeight\": 1,\n    \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"revision\": 2222212828,\n    \"flags\": \"<integer>\",\n    \"divisibility\": \"<integer>\",\n    \"duration\": 200\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"mosaic\": {\n    \"id\": \"0DC67FBE1CAD29E3\",\n    \"supply\": \"123456\",\n    \"startHeight\": 1,\n    \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"revision\": 2222212828,\n    \"flags\": \"<integer>\",\n    \"divisibility\": \"<integer>\",\n    \"duration\": 200\n   }\n  }\n ],\n \"pagination\": {\n  \"pageNumber\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"totalEntries\": \"<integer>\",\n  \"totalPages\": \"<integer>\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fd78bb0e-5fa9-4f44-bf5c-e995dbd560bd",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "ownerAddress",
                                            "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "key": "pageNumber",
                                            "value": "1"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "order",
                                            "value": "desc"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "0985ec59-15a5-425d-8861-a57d78838b34",
                    "name": "Get mosaics information for an array of mosaics",
                    "request": {
                        "name": "Get mosaics information for an array of mosaics",
                        "description": {
                            "content": "Gets an array of mosaic definition.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "mosaics"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"mosaicIds\": [\n        \"<hex>\",\n        \"<hex>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "d2182c39-cbe5-4b61-8bac-0783ddf04426",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"id\": \"<string>\",\n  \"mosaic\": {\n   \"id\": \"0DC67FBE1CAD29E3\",\n   \"supply\": \"123456\",\n   \"startHeight\": 1,\n   \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n   \"revision\": 2222212828,\n   \"flags\": \"<integer>\",\n   \"divisibility\": \"<integer>\",\n   \"duration\": 200\n  }\n },\n {\n  \"id\": \"<string>\",\n  \"mosaic\": {\n   \"id\": \"0DC67FBE1CAD29E3\",\n   \"supply\": \"123456\",\n   \"startHeight\": 1,\n   \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n   \"revision\": 2222212828,\n   \"flags\": \"<integer>\",\n   \"divisibility\": \"<integer>\",\n   \"duration\": 200\n  }\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "be4b6827-9f3d-4c71-b80c-69e577d3af55",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3c2ea1e7-7b30-4962-aae4-96955f9b210c",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "15ad82dd-b1a2-4c56-be3f-c5d88485ba1d",
                    "name": "Get mosaic information",
                    "request": {
                        "name": "Get mosaic information",
                        "description": {
                            "content": "Gets the mosaic definition for a given mosaic identifier.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "mosaics",
                                ":mosaicId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Mosaic identifier.",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                    },
                                    "key": "mosaicId"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "e98103a0-17b3-4b93-8137-025c88602a29",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaics",
                                        ":mosaicId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "mosaicId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"id\": \"<string>\",\n \"mosaic\": {\n  \"id\": \"0DC67FBE1CAD29E3\",\n  \"supply\": \"123456\",\n  \"startHeight\": 1,\n  \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n  \"revision\": 2222212828,\n  \"flags\": \"<integer>\",\n  \"divisibility\": \"<integer>\",\n  \"duration\": 200\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fb7b06bf-53e7-4a8c-9d3b-4ffc96cd42fc",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaics",
                                        ":mosaicId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "mosaicId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fa9298e5-42de-4ca0-920f-a46dd15837fa",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaics",
                                        ":mosaicId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "mosaicId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "bb277931-9eba-488e-84da-647b9fa6e8d1",
            "name": "account/{address}/multisig",
            "item": [
                {
                    "id": "f2d5160c-7533-4e34-b6fa-f7e11b62c691",
                    "name": "Get multisig account information",
                    "request": {
                        "name": "Get multisig account information",
                        "description": {
                            "content": "Returns the multisig account information.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "account",
                                ":address",
                                "multisig"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Account address.",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/AddressBase32 not found in the OpenAPI spec"
                                    },
                                    "key": "address"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "5c5d1970-6f89-44ba-b020-43899aefe7fc",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        ":address",
                                        "multisig"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "address"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"multisig\": {\n  \"accountAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n  \"minApproval\": 2222212828,\n  \"minRemoval\": 2222212828,\n  \"cosignatoryAddresses\": [\n   \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n   \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n  ],\n  \"multisigAddresses\": null\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5d43f8c2-83a3-45d4-bfa6-027cff0ba134",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        ":address",
                                        "multisig"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "address"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "00704e04-a4ec-4532-b6ee-e5417ddc9b6a",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        ":address",
                                        "multisig"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "address"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "6d1ca1d4-d125-4187-b05e-623da064571e",
                    "name": "Get multisig account graph information",
                    "request": {
                        "name": "Get multisig account graph information",
                        "description": {
                            "content": "Returns the multisig account graph.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "account",
                                ":address",
                                "multisig",
                                "graph"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Account address.",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/AddressBase32 not found in the OpenAPI spec"
                                    },
                                    "key": "address"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "286ae9b7-32e9-4bc2-9fe2-9bd72b8c0ce0",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        ":address",
                                        "multisig",
                                        "graph"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "address"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"level\": 0,\n  \"multisigEntries\": [\n   {\n    \"multisig\": {\n     \"accountAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n     \"minApproval\": 2222212828,\n     \"minRemoval\": 2222212828,\n     \"cosignatoryAddresses\": [\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     ],\n     \"multisigAddresses\": null\n    }\n   },\n   {\n    \"multisig\": {\n     \"accountAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n     \"minApproval\": 2222212828,\n     \"minRemoval\": 2222212828,\n     \"cosignatoryAddresses\": [\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     ],\n     \"multisigAddresses\": null\n    }\n   }\n  ]\n },\n {\n  \"level\": 0,\n  \"multisigEntries\": [\n   {\n    \"multisig\": {\n     \"accountAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n     \"minApproval\": 2222212828,\n     \"minRemoval\": 2222212828,\n     \"cosignatoryAddresses\": [\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     ],\n     \"multisigAddresses\": null\n    }\n   },\n   {\n    \"multisig\": {\n     \"accountAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n     \"minApproval\": 2222212828,\n     \"minRemoval\": 2222212828,\n     \"cosignatoryAddresses\": [\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     ],\n     \"multisigAddresses\": null\n    }\n   }\n  ]\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "cfe12e76-28e5-4aee-8ed1-710697c400c6",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        ":address",
                                        "multisig",
                                        "graph"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "address"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "09e015f2-573b-4b36-9b72-23c5a279e50e",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        ":address",
                                        "multisig",
                                        "graph"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "address"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "ad2485eb-642e-44e9-a9d6-e761b4c597b5",
            "name": "namespaces",
            "item": [
                {
                    "id": "fff01640-bc0a-40ad-a91d-cebb75f6fba7",
                    "name": "Get namespaces",
                    "request": {
                        "name": "Get namespaces",
                        "description": {
                            "content": "Gets an array of namespaces.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "namespaces"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "description": "Filter by owner address.",
                                    "key": "ownerAddress",
                                    "value": "<string>"
                                },
                                {
                                    "description": "Filter by registration type.",
                                    "key": "registrationType",
                                    "value": "<integer>"
                                },
                                {
                                    "description": "Filter by root namespace.",
                                    "key": "level0",
                                    "value": "<hex>"
                                },
                                {
                                    "description": "Filter by alias type.",
                                    "key": "aliasType",
                                    "value": "<integer>"
                                },
                                {
                                    "description": "Select the number of entries to return.",
                                    "key": "pageSize",
                                    "value": "10"
                                },
                                {
                                    "description": "Filter by page number.",
                                    "key": "pageNumber",
                                    "value": "1"
                                },
                                {
                                    "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                    "key": "offset",
                                    "value": "<string>"
                                },
                                {
                                    "description": "Sort responses in ascending or descending order based on the collection property set on the param ``orderBy``.\nIf the request does not specify ``orderBy``, REST returns the collection ordered by id.\n",
                                    "key": "order",
                                    "value": "desc"
                                }
                            ],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "3799b4cd-634b-4bab-8c83-d4f8de4ef362",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespaces"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "ownerAddress",
                                            "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                        },
                                        {
                                            "key": "registrationType",
                                            "value": "0"
                                        },
                                        {
                                            "key": "level0",
                                            "value": "85BBEA6CC462B244"
                                        },
                                        {
                                            "key": "aliasType",
                                            "value": "0"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "key": "pageNumber",
                                            "value": "1"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "order",
                                            "value": "desc"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"meta\": {\n    \"id\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"index\": \"<integer>\"\n   },\n   \"namespace\": {\n    \"registrationType\": 0,\n    \"depth\": 1,\n    \"level0\": \"85BBEA6CC462B244\",\n    \"alias\": {\n     \"type\": 0,\n     \"mosaicId\": \"0DC67FBE1CAD29E3\",\n     \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n    },\n    \"parentId\": \"85BBEA6CC462B244\",\n    \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"startHeight\": 1,\n    \"endHeight\": 1,\n    \"level1\": \"85BBEA6CC462B244\",\n    \"level2\": \"85BBEA6CC462B244\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"meta\": {\n    \"id\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"index\": \"<integer>\"\n   },\n   \"namespace\": {\n    \"registrationType\": 0,\n    \"depth\": 1,\n    \"level0\": \"85BBEA6CC462B244\",\n    \"alias\": {\n     \"type\": 0,\n     \"mosaicId\": \"0DC67FBE1CAD29E3\",\n     \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n    },\n    \"parentId\": \"85BBEA6CC462B244\",\n    \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"startHeight\": 1,\n    \"endHeight\": 1,\n    \"level1\": \"85BBEA6CC462B244\",\n    \"level2\": \"85BBEA6CC462B244\"\n   }\n  }\n ],\n \"pagination\": {\n  \"pageNumber\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"totalEntries\": \"<integer>\",\n  \"totalPages\": \"<integer>\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1af9a3c4-a7b8-4faa-b328-0302d9623904",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespaces"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "ownerAddress",
                                            "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                        },
                                        {
                                            "key": "registrationType",
                                            "value": "0"
                                        },
                                        {
                                            "key": "level0",
                                            "value": "85BBEA6CC462B244"
                                        },
                                        {
                                            "key": "aliasType",
                                            "value": "0"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "key": "pageNumber",
                                            "value": "1"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "order",
                                            "value": "desc"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "ab877110-fb21-4d6d-b0fa-36290daa05e7",
                    "name": "Get namespace information",
                    "request": {
                        "name": "Get namespace information",
                        "description": {
                            "content": "Gets the namespace for a given namespace identifier.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "namespaces",
                                ":namespaceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Namespace identifier.",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/NamespaceId not found in the OpenAPI spec"
                                    },
                                    "key": "namespaceId"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "58838052-6285-4d86-b3b2-3880212c3534",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespaces",
                                        ":namespaceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "namespaceId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"id\": \"<string>\",\n \"meta\": {\n  \"id\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"index\": \"<integer>\"\n },\n \"namespace\": {\n  \"registrationType\": 0,\n  \"depth\": 1,\n  \"level0\": \"85BBEA6CC462B244\",\n  \"alias\": {\n   \"type\": 0,\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n  },\n  \"parentId\": \"85BBEA6CC462B244\",\n  \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n  \"startHeight\": 1,\n  \"endHeight\": 1,\n  \"level1\": \"85BBEA6CC462B244\",\n  \"level2\": \"85BBEA6CC462B244\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "212893f6-d332-4031-9aca-67fe9fb3a5ff",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespaces",
                                        ":namespaceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "namespaceId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f0610523-013c-4b6a-ad75-d0b0e0bab72b",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespaces",
                                        ":namespaceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "namespaceId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "07fcabe9-ac25-41dc-bd48-4f33ff239fba",
                    "name": "Get readable names for a set of namespaces",
                    "request": {
                        "name": "Get readable names for a set of namespaces",
                        "description": {
                            "content": "Returns friendly names for namespaces.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "namespaces",
                                "names"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"namespaceIds\": [\n        \"<hex>\",\n        \"<hex>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "afc8d45a-d6ee-4fc8-bc21-00dc656972b2",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespaces",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"id\": \"85BBEA6CC462B244\",\n  \"name\": \"cat\",\n  \"parentId\": \"85BBEA6CC462B244\"\n },\n {\n  \"id\": \"85BBEA6CC462B244\",\n  \"name\": \"cat\",\n  \"parentId\": \"85BBEA6CC462B244\"\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ec8bacee-d9fc-497b-94f7-71bb8441538f",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespaces",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "aabaed4b-2e2c-4388-a4a6-10911f2ff42b",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespaces",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "1a488c9e-9f5e-4c04-901c-7ef74300635f",
                    "name": "Get readable names for a set of accountIds",
                    "request": {
                        "name": "Get readable names for a set of accountIds",
                        "description": {
                            "content": "Returns friendly names for accounts.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "namespaces",
                                "account",
                                "names"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "5b26f42f-05c0-4f09-9efd-76f573a8ab28",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespaces",
                                        "account",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"accountNames\": [\n  {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n   \"names\": [\n    \"alias1\",\n    \"alias2\"\n   ]\n  },\n  {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n   \"names\": [\n    \"alias1\",\n    \"alias2\"\n   ]\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e9f20103-beda-4e16-84be-dbe53268e0df",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespaces",
                                        "account",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8c32f432-2f83-4686-a5ad-eb43c3f2ebae",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespaces",
                                        "account",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "b4891ac0-7d45-4cd8-9027-a0f66da15fd8",
                    "name": "Get readable names for a set of mosaics",
                    "request": {
                        "name": "Get readable names for a set of mosaics",
                        "description": {
                            "content": "Returns friendly names for mosaics.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "namespaces",
                                "mosaic",
                                "names"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"mosaicIds\": [\n        \"<hex>\",\n        \"<hex>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "26cbbfd4-f179-41c4-8643-fa9be69a2fb7",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespaces",
                                        "mosaic",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"mosaicNames\": [\n  {\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"names\": [\n    \"symbol.xym\"\n   ]\n  },\n  {\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"names\": [\n    \"symbol.xym\"\n   ]\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5b572688-06ae-444f-9c63-94c7f90d0875",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespaces",
                                        "mosaic",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c7430466-b012-4193-af9f-0bd543d3e197",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespaces",
                                        "mosaic",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "86e34afd-e8e2-4eef-b469-33fc6c026d16",
            "name": "statements",
            "item": [
                {
                    "id": "0ee75879-deae-4b35-b036-380f314fc647",
                    "name": "Get receipts",
                    "request": {
                        "name": "Get receipts",
                        "description": {
                            "content": "Gets an array of transaction statements.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "statements",
                                "transaction"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "description": "Filter by block height.",
                                    "key": "height",
                                    "value": "<string>"
                                },
                                {
                                    "description": "",
                                    "key": "receiptType",
                                    "value": "<integer>"
                                },
                                {
                                    "description": "Filter by address of the account receiving the transaction.",
                                    "key": "recipientAddress",
                                    "value": "<string>"
                                },
                                {
                                    "description": "Filter by address sending mosaics.",
                                    "key": "senderAddress",
                                    "value": "<string>"
                                },
                                {
                                    "description": "Filter by target address.",
                                    "key": "targetAddress",
                                    "value": "<string>"
                                },
                                {
                                    "description": "Mosaic or namespace identifier",
                                    "key": "artifactId",
                                    "value": "<string>"
                                },
                                {
                                    "description": "Select the number of entries to return.",
                                    "key": "pageSize",
                                    "value": "10"
                                },
                                {
                                    "description": "Filter by page number.",
                                    "key": "pageNumber",
                                    "value": "1"
                                },
                                {
                                    "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                    "key": "offset",
                                    "value": "<string>"
                                },
                                {
                                    "description": "Sort responses in ascending or descending order based on the collection property set on the param ``orderBy``.\nIf the request does not specify ``orderBy``, REST returns the collection ordered by id.\n",
                                    "key": "order",
                                    "value": "desc"
                                }
                            ],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "28ab1db1-5999-4411-abd4-be277710d30f",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "statements",
                                        "transaction"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "height",
                                            "value": "1"
                                        },
                                        {
                                            "key": "receiptType",
                                            "value": "<integer>"
                                        },
                                        {
                                            "key": "recipientAddress",
                                            "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                        },
                                        {
                                            "key": "senderAddress",
                                            "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                        },
                                        {
                                            "key": "targetAddress",
                                            "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                        },
                                        {
                                            "key": "artifactId",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "key": "pageNumber",
                                            "value": "1"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "order",
                                            "value": "desc"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"statement\": {\n    \"height\": 1,\n    \"source\": {\n     \"primaryId\": 2222212828,\n     \"secondaryId\": 2222212828\n    },\n    \"receipts\": [\n     {\n      \"version\": \"<integer>\",\n      \"type\": \"<integer>\",\n      \"mosaicId\": \"0DC67FBE1CAD29E3\",\n      \"amount\": \"123456\",\n      \"senderAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n      \"recipientAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     },\n     {\n      \"version\": \"<integer>\",\n      \"type\": \"<integer>\",\n      \"mosaicId\": \"0DC67FBE1CAD29E3\",\n      \"amount\": \"123456\",\n      \"senderAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n      \"recipientAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     }\n    ]\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"statement\": {\n    \"height\": 1,\n    \"source\": {\n     \"primaryId\": 2222212828,\n     \"secondaryId\": 2222212828\n    },\n    \"receipts\": [\n     {\n      \"version\": \"<integer>\",\n      \"type\": \"<integer>\",\n      \"mosaicId\": \"0DC67FBE1CAD29E3\",\n      \"amount\": \"123456\",\n      \"senderAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n      \"recipientAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     },\n     {\n      \"version\": \"<integer>\",\n      \"type\": \"<integer>\",\n      \"mosaicId\": \"0DC67FBE1CAD29E3\",\n      \"amount\": \"123456\",\n      \"senderAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n      \"recipientAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     }\n    ]\n   }\n  }\n ],\n \"pagination\": {\n  \"pageNumber\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"totalEntries\": \"<integer>\",\n  \"totalPages\": \"<integer>\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8d981ece-0f4f-49af-8ff6-1f5262e6c29a",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "statements",
                                        "transaction"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "height",
                                            "value": "1"
                                        },
                                        {
                                            "key": "receiptType",
                                            "value": "<integer>"
                                        },
                                        {
                                            "key": "recipientAddress",
                                            "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                        },
                                        {
                                            "key": "senderAddress",
                                            "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                        },
                                        {
                                            "key": "targetAddress",
                                            "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                        },
                                        {
                                            "key": "artifactId",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "key": "pageNumber",
                                            "value": "1"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "order",
                                            "value": "desc"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "89555aff-f9ea-413b-b6dd-addf99039010",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "statements",
                                        "transaction"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "height",
                                            "value": "1"
                                        },
                                        {
                                            "key": "receiptType",
                                            "value": "<integer>"
                                        },
                                        {
                                            "key": "recipientAddress",
                                            "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                        },
                                        {
                                            "key": "senderAddress",
                                            "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                        },
                                        {
                                            "key": "targetAddress",
                                            "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                        },
                                        {
                                            "key": "artifactId",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "key": "pageNumber",
                                            "value": "1"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "order",
                                            "value": "desc"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "7587bd39-52c5-4374-97ce-3a928af795d3",
                    "name": "resolutions",
                    "item": [
                        {
                            "id": "f5ad0769-d322-4639-8bc2-ef3069a574c5",
                            "name": "Get receipts address resolution statements",
                            "request": {
                                "name": "Get receipts address resolution statements",
                                "description": {
                                    "content": "Gets an array of address resolution statements.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "statements",
                                        "resolutions",
                                        "address"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "description": "Filter by block height.",
                                            "key": "height",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Select the number of entries to return.",
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "description": "Filter by page number.",
                                            "key": "pageNumber",
                                            "value": "1"
                                        },
                                        {
                                            "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                            "key": "offset",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Sort responses in ascending or descending order based on the collection property set on the param ``orderBy``.\nIf the request does not specify ``orderBy``, REST returns the collection ordered by id.\n",
                                            "key": "order",
                                            "value": "desc"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "11064cb2-f656-4561-8333-cc39e28461d4",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "statements",
                                                "resolutions",
                                                "address"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "height",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "pageNumber",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"statement\": {\n    \"height\": 1,\n    \"unresolved\": \"85BBEA6CC462B244\",\n    \"resolutionEntries\": [\n     {\n      \"source\": {\n       \"primaryId\": 2222212828,\n       \"secondaryId\": 2222212828\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     },\n     {\n      \"source\": {\n       \"primaryId\": 2222212828,\n       \"secondaryId\": 2222212828\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     }\n    ]\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"statement\": {\n    \"height\": 1,\n    \"unresolved\": \"85BBEA6CC462B244\",\n    \"resolutionEntries\": [\n     {\n      \"source\": {\n       \"primaryId\": 2222212828,\n       \"secondaryId\": 2222212828\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     },\n     {\n      \"source\": {\n       \"primaryId\": 2222212828,\n       \"secondaryId\": 2222212828\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     }\n    ]\n   }\n  }\n ],\n \"pagination\": {\n  \"pageNumber\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"totalEntries\": \"<integer>\",\n  \"totalPages\": \"<integer>\"\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "0ec5006c-273e-4169-a5ac-bf9bedf67767",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "statements",
                                                "resolutions",
                                                "address"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "height",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "pageNumber",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "c8f06c41-e313-409a-94c9-89fa0c81edcc",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "statements",
                                                "resolutions",
                                                "address"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "height",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "pageNumber",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "bfeccf1d-e8d1-4acb-a69d-06f6feb5c7d8",
                            "name": "Get receipts mosaic resolution statements",
                            "request": {
                                "name": "Get receipts mosaic resolution statements",
                                "description": {
                                    "content": "Gets an array of mosaic resolution statements.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "statements",
                                        "resolutions",
                                        "mosaic"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "description": "Filter by block height.",
                                            "key": "height",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Select the number of entries to return.",
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "description": "Filter by page number.",
                                            "key": "pageNumber",
                                            "value": "1"
                                        },
                                        {
                                            "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                            "key": "offset",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Sort responses in ascending or descending order based on the collection property set on the param ``orderBy``.\nIf the request does not specify ``orderBy``, REST returns the collection ordered by id.\n",
                                            "key": "order",
                                            "value": "desc"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "787bbefb-6da1-4cf8-a5f4-9673d7d866e9",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "statements",
                                                "resolutions",
                                                "mosaic"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "height",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "pageNumber",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"statement\": {\n    \"height\": 1,\n    \"unresolved\": \"85BBEA6CC462B244\",\n    \"resolutionEntries\": [\n     {\n      \"source\": {\n       \"primaryId\": 2222212828,\n       \"secondaryId\": 2222212828\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     },\n     {\n      \"source\": {\n       \"primaryId\": 2222212828,\n       \"secondaryId\": 2222212828\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     }\n    ]\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"statement\": {\n    \"height\": 1,\n    \"unresolved\": \"85BBEA6CC462B244\",\n    \"resolutionEntries\": [\n     {\n      \"source\": {\n       \"primaryId\": 2222212828,\n       \"secondaryId\": 2222212828\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     },\n     {\n      \"source\": {\n       \"primaryId\": 2222212828,\n       \"secondaryId\": 2222212828\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     }\n    ]\n   }\n  }\n ],\n \"pagination\": {\n  \"pageNumber\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"totalEntries\": \"<integer>\",\n  \"totalPages\": \"<integer>\"\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "00805a1d-5aa4-4008-94cc-8673e930526d",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "statements",
                                                "resolutions",
                                                "mosaic"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "height",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "pageNumber",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "0e81fbc9-8b71-46b2-9f9d-3825cb0ec409",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "statements",
                                                "resolutions",
                                                "mosaic"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "height",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "pageNumber",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "e968dac2-335c-498e-ad55-9c60df23c804",
            "name": "restrictions",
            "item": [
                {
                    "id": "4275c0b2-c03b-436f-ae17-9702a5bd7a9c",
                    "name": "account",
                    "item": [
                        {
                            "id": "bfff9a8d-952f-4a80-b383-3decffb9ff8c",
                            "name": "Get account restrictions for given array of addresses",
                            "request": {
                                "name": "Get account restrictions for given array of addresses",
                                "description": {
                                    "content": "Returns the account restrictions for a given array of addresses.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "restrictions",
                                        "account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "noauth"
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"publicKeys\": [\n        \"<hex>\",\n        \"<hex>\"\n    ],\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                }
                            },
                            "response": [
                                {
                                    "id": "5db5d146-354e-4684-89fb-1589c36466b7",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "[\n {\n  \"accountRestrictions\": {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n   \"restrictions\": [\n    {\n     \"restrictionFlags\": 1,\n     \"values\": [\n      \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\",\n      \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\"\n     ]\n    },\n    {\n     \"restrictionFlags\": 1,\n     \"values\": [\n      \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\",\n      \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\"\n     ]\n    }\n   ]\n  }\n },\n {\n  \"accountRestrictions\": {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n   \"restrictions\": [\n    {\n     \"restrictionFlags\": 1,\n     \"values\": [\n      \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\",\n      \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\"\n     ]\n    },\n    {\n     \"restrictionFlags\": 1,\n     \"values\": [\n      \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\",\n      \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\"\n     ]\n    }\n   ]\n  }\n }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "b9871b47-c7bd-43ef-8475-f3bc857e0175",
                                    "name": "InvalidContent",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "86ccc67f-353e-46b8-88c8-115c8134ed55",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "0c08f326-9bd7-40d1-b6cb-effe38bac897",
                            "name": "Get the account restrictions",
                            "request": {
                                "name": "Get the account restrictions",
                                "description": {
                                    "content": "Returns the account restrictions for a given account.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "restrictions",
                                        "account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "description": "Account public key or address enconded using a 32-character set.",
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "accountId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "402cc466-dcc7-4ad2-b9d7-a4663c060ef4",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"accountRestrictions\": {\n  \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n  \"restrictions\": [\n   {\n    \"restrictionFlags\": 1,\n    \"values\": [\n     \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\",\n     \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\"\n    ]\n   },\n   {\n    \"restrictionFlags\": 1,\n    \"values\": [\n     \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\",\n     \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\"\n    ]\n   }\n  ]\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "7c2cbe4c-8010-49d6-b139-e0aa7014e9a6",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "b55a96f8-6783-43ba-b4fe-0df64a935d94",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "12afd41e-d754-4cca-88c4-721b80ba23cc",
                    "name": "mosaic",
                    "item": [
                        {
                            "id": "735cfb94-141a-45d5-a177-9eb6623adc17",
                            "name": "Get mosaic global restrictions for an array of mosaics.",
                            "request": {
                                "name": "Get mosaic global restrictions for an array of mosaics.",
                                "description": {
                                    "content": "Get mosaic global restrictions.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "restrictions",
                                        "mosaic"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "noauth"
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"mosaicIds\": [\n        \"<hex>\",\n        \"<hex>\"\n    ]\n}"
                                }
                            },
                            "response": [
                                {
                                    "id": "99895ad8-0512-4057-862f-634a28844a8a",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "[\n {\n  \"mosaicRestrictionEntry\": {\n   \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"entryType\": \"<integer>\",\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"restrictions\": [\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"restriction\": {\n      \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n      \"restrictionValue\": 1000,\n      \"restrictionType\": \"<integer>\"\n     }\n    },\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"restriction\": {\n      \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n      \"restrictionValue\": 1000,\n      \"restrictionType\": \"<integer>\"\n     }\n    }\n   ]\n  }\n },\n {\n  \"mosaicRestrictionEntry\": {\n   \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"entryType\": \"<integer>\",\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"restrictions\": [\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"restriction\": {\n      \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n      \"restrictionValue\": 1000,\n      \"restrictionType\": \"<integer>\"\n     }\n    },\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"restriction\": {\n      \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n      \"restrictionValue\": 1000,\n      \"restrictionType\": \"<integer>\"\n     }\n    }\n   ]\n  }\n }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "416acb2d-0ed9-444c-9942-e349da9f349c",
                                    "name": "InvalidContent",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "102fbe3a-fda5-41eb-bcb5-6ff6b6c80bf4",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "dcfbbdc0-ac1c-4820-89d4-b63185375972",
                            "name": "{mosaic Id}",
                            "item": [
                                {
                                    "id": "dcbc8648-4055-4d1c-967c-25c668a3e7d9",
                                    "name": "Get mosaic global restriction for a given mosaic identifier.",
                                    "request": {
                                        "name": "Get mosaic global restriction for a given mosaic identifier.",
                                        "description": {
                                            "content": "Get mosaic global restriction.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic",
                                                ":mosaicId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Mosaic identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                                    },
                                                    "key": "mosaicId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "b5eaeaf0-76f9-4396-900f-bf283041b27d",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"mosaicRestrictionEntry\": {\n  \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"entryType\": \"<integer>\",\n  \"mosaicId\": \"0DC67FBE1CAD29E3\",\n  \"restrictions\": [\n   {\n    \"key\": \"0DC67FBE1CAD29E3\",\n    \"restriction\": {\n     \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n     \"restrictionValue\": 1000,\n     \"restrictionType\": \"<integer>\"\n    }\n   },\n   {\n    \"key\": \"0DC67FBE1CAD29E3\",\n    \"restriction\": {\n     \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n     \"restrictionValue\": 1000,\n     \"restrictionType\": \"<integer>\"\n    }\n   }\n  ]\n }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "6545739b-af3f-4283-b274-5a40d2f00fb0",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "bde51f60-67c1-4204-97db-4b01a3e49726",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "0ffecef3-250d-4136-85be-c6fd48543c80",
                                    "name": "Get mosaic address restrictions for a given mosaic and account identifiers array.",
                                    "request": {
                                        "name": "Get mosaic address restrictions for a given mosaic and account identifiers array.",
                                        "description": {
                                            "content": "Get mosaic address restrictions.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic",
                                                ":mosaicId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Mosaic identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                                    },
                                                    "key": "mosaicId"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "noauth"
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"publicKeys\": [\n        \"<hex>\",\n        \"<hex>\"\n    ],\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "f1f509f6-84d1-4f56-94e9-417bdc6cb4c1",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "POST",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "[\n {\n  \"mosaicRestrictionEntry\": {\n   \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"entryType\": \"<integer>\",\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n   \"restrictions\": [\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"value\": \"<string>\"\n    },\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"value\": \"<string>\"\n    }\n   ]\n  }\n },\n {\n  \"mosaicRestrictionEntry\": {\n   \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"entryType\": \"<integer>\",\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n   \"restrictions\": [\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"value\": \"<string>\"\n    },\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"value\": \"<string>\"\n    }\n   ]\n  }\n }\n]",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "d70082d3-1ae7-4965-aef6-dc849220a3fd",
                                            "name": "InvalidContent",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "POST",
                                                "body": {}
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "5893f297-de28-4ab2-8bb3-05e7a16c7de3",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "POST",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "c29984a2-252f-46f7-af3a-3d31055f46fd",
                                    "name": "Get mosaic address restrictions for a given mosaic and account address.",
                                    "request": {
                                        "name": "Get mosaic address restrictions for a given mosaic and account address.",
                                        "description": {
                                            "content": "Get mosaic address restriction.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic",
                                                ":mosaicId",
                                                "address",
                                                ":address"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Mosaic identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                                    },
                                                    "key": "mosaicId"
                                                },
                                                {
                                                    "description": "Account address.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/AddressBase32 not found in the OpenAPI spec"
                                                    },
                                                    "key": "address"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "95f98bbc-a8a9-4c32-81b7-8a7f01d28020",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "address",
                                                        ":address"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "address"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"mosaicRestrictionEntry\": {\n  \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"entryType\": \"<integer>\",\n  \"mosaicId\": \"0DC67FBE1CAD29E3\",\n  \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n  \"restrictions\": [\n   {\n    \"key\": \"0DC67FBE1CAD29E3\",\n    \"value\": \"<string>\"\n   },\n   {\n    \"key\": \"0DC67FBE1CAD29E3\",\n    \"value\": \"<string>\"\n   }\n  ]\n }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "4a52cb5b-750b-4906-9852-b4b3fe5effc2",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "address",
                                                        ":address"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "address"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "9d66dd0f-d7a5-482b-b13e-f7a7b0c29421",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "address",
                                                        ":address"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "address"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        }
    ],
    "event": [],
    "variable": [
        {
            "id": "baseUrl",
            "type": "string",
            "value": "http://localhost:3000"
        }
    ],
    "info": {
        "_postman_id": "fa3bc649-ede2-446b-b4ee-78efef8e17d6",
        "name": "Catapult REST Endpoints",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "description": {
            "content": "OpenAPI Specification of catapult-rest 1.1.2",
            "type": "text/plain"
        }
    }
}