{
    "item": [
        {
            "id": "b20abf54-917b-4d9d-81ae-947f9d6a176e",
            "name": "account",
            "item": [
                {
                    "id": "19f97f0c-f4ea-4723-8358-dbca92f299a8",
                    "name": "Get accounts information",
                    "request": {
                        "name": "Get accounts information",
                        "description": {
                            "content": "Returns the account information for an array of accounts.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "account"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"publicKeys\": [\n        \"<hex>\",\n        \"<hex>\"\n    ],\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "4176b33e-1c9e-44d5-a752-b0a64322a568",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"account\": {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n   \"addressHeight\": 1,\n   \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"publicKeyHeight\": 1,\n   \"accountType\": \"<integer>\",\n   \"supplementalPublicKeys\": [\n    {\n     \"keyType\": \"<integer>\",\n     \"key\": \"<string>\"\n    },\n    {\n     \"keyType\": \"<integer>\",\n     \"key\": \"<string>\"\n    }\n   ],\n   \"activityBuckets\": [\n    {\n     \"startHeight\": 1,\n     \"totalFeesPaid\": \"123456\",\n     \"beneficiaryCount\": 2222212828,\n     \"rawScore\": 0\n    },\n    {\n     \"startHeight\": 1,\n     \"totalFeesPaid\": \"123456\",\n     \"beneficiaryCount\": 2222212828,\n     \"rawScore\": 0\n    }\n   ],\n   \"mosaics\": [\n    {\n     \"id\": \"0DC67FBE1CAD29E3\",\n     \"amount\": \"123456\"\n    },\n    {\n     \"id\": \"0DC67FBE1CAD29E3\",\n     \"amount\": \"123456\"\n    }\n   ],\n   \"importance\": 0,\n   \"importanceHeight\": 1\n  }\n },\n {\n  \"account\": {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n   \"addressHeight\": 1,\n   \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"publicKeyHeight\": 1,\n   \"accountType\": \"<integer>\",\n   \"supplementalPublicKeys\": [\n    {\n     \"keyType\": \"<integer>\",\n     \"key\": \"<string>\"\n    },\n    {\n     \"keyType\": \"<integer>\",\n     \"key\": \"<string>\"\n    }\n   ],\n   \"activityBuckets\": [\n    {\n     \"startHeight\": 1,\n     \"totalFeesPaid\": \"123456\",\n     \"beneficiaryCount\": 2222212828,\n     \"rawScore\": 0\n    },\n    {\n     \"startHeight\": 1,\n     \"totalFeesPaid\": \"123456\",\n     \"beneficiaryCount\": 2222212828,\n     \"rawScore\": 0\n    }\n   ],\n   \"mosaics\": [\n    {\n     \"id\": \"0DC67FBE1CAD29E3\",\n     \"amount\": \"123456\"\n    },\n    {\n     \"id\": \"0DC67FBE1CAD29E3\",\n     \"amount\": \"123456\"\n    }\n   ],\n   \"importance\": 0,\n   \"importanceHeight\": 1\n  }\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f705025b-b77d-43ae-a93c-bd7593d8c99f",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e300fe47-4ad0-4c6a-baba-bba56e66646e",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "1b5911dd-903e-4409-99e7-00dd93a0d080",
                    "name": "{account Id}",
                    "item": [
                        {
                            "id": "b9862086-79f2-42c1-8aca-138f94a9f62e",
                            "name": "Get account information",
                            "request": {
                                "name": "Get account information",
                                "description": {
                                    "content": "Returns the account information.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "description": "Account public key or address enconded using a 32-character set.",
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "accountId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "479862d6-301e-4c37-a3c9-16c770e1cc96",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"account\": {\n  \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n  \"addressHeight\": 1,\n  \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"publicKeyHeight\": 1,\n  \"accountType\": \"<integer>\",\n  \"supplementalPublicKeys\": [\n   {\n    \"keyType\": \"<integer>\",\n    \"key\": \"<string>\"\n   },\n   {\n    \"keyType\": \"<integer>\",\n    \"key\": \"<string>\"\n   }\n  ],\n  \"activityBuckets\": [\n   {\n    \"startHeight\": 1,\n    \"totalFeesPaid\": \"123456\",\n    \"beneficiaryCount\": 2222212828,\n    \"rawScore\": 0\n   },\n   {\n    \"startHeight\": 1,\n    \"totalFeesPaid\": \"123456\",\n    \"beneficiaryCount\": 2222212828,\n    \"rawScore\": 0\n   }\n  ],\n  \"mosaics\": [\n   {\n    \"id\": \"0DC67FBE1CAD29E3\",\n    \"amount\": \"123456\"\n   },\n   {\n    \"id\": \"0DC67FBE1CAD29E3\",\n    \"amount\": \"123456\"\n   }\n  ],\n  \"importance\": 0,\n  \"importanceHeight\": 1\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "64bcd80b-f349-4f30-b484-2b1cf3260635",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "b791dff2-45c2-4082-9a09-2e93dc165e4a",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "22dc553e-5a6c-41f1-96d6-4eadfa3e9ce2",
                            "name": "Get namespaces created by an account",
                            "request": {
                                "name": "Get namespaces created by an account",
                                "description": {
                                    "content": "Gets an array of namespaces for a given account address.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "account",
                                        ":accountId",
                                        "namespaces"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "description": "Select the number of entries to return.",
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                            "key": "id",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "description": "Account public key or address enconded using a 32-character set.",
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "accountId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "43057eea-ed5c-4e35-ac12-c4b7e8f5b99e",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "namespaces"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"namespaces\": [\n  {\n   \"meta\": {\n    \"id\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"index\": \"<integer>\"\n   },\n   \"namespace\": {\n    \"registrationType\": 0,\n    \"depth\": 1,\n    \"level0\": \"85BBEA6CC462B244\",\n    \"alias\": {\n     \"type\": 0,\n     \"mosaicId\": \"0DC67FBE1CAD29E3\",\n     \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n    },\n    \"parentId\": \"85BBEA6CC462B244\",\n    \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"startHeight\": 1,\n    \"endHeight\": 1,\n    \"level1\": \"85BBEA6CC462B244\",\n    \"level2\": \"85BBEA6CC462B244\"\n   }\n  },\n  {\n   \"meta\": {\n    \"id\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"index\": \"<integer>\"\n   },\n   \"namespace\": {\n    \"registrationType\": 0,\n    \"depth\": 1,\n    \"level0\": \"85BBEA6CC462B244\",\n    \"alias\": {\n     \"type\": 0,\n     \"mosaicId\": \"0DC67FBE1CAD29E3\",\n     \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n    },\n    \"parentId\": \"85BBEA6CC462B244\",\n    \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"startHeight\": 1,\n    \"endHeight\": 1,\n    \"level1\": \"85BBEA6CC462B244\",\n    \"level2\": \"85BBEA6CC462B244\"\n   }\n  }\n ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "b7e800f7-62b4-4269-90d5-af6de1372a0d",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "namespaces"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "ec856cca-8cb5-494e-a271-3cb6de8d0d4e",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "namespaces"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "2dd4f6c4-341e-40f5-a57a-945661cbe321",
                    "name": "{address}/multisig",
                    "item": [
                        {
                            "id": "02a9abca-06a9-49d4-84ad-0d3da033da0b",
                            "name": "Get multisig account information",
                            "request": {
                                "name": "Get multisig account information",
                                "description": {
                                    "content": "Returns the multisig account information.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "account",
                                        ":address",
                                        "multisig"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "description": "Account address.",
                                            "type": "any",
                                            "value": {
                                                "value": "reference #/components/schemas/AddressBase32 not found in the OpenAPI spec"
                                            },
                                            "key": "address"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "af86edf6-ef1a-4b43-bbd9-e6764670e57d",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":address",
                                                "multisig"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "address"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"multisig\": {\n  \"accountAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n  \"minApproval\": 2222212828,\n  \"minRemoval\": 2222212828,\n  \"cosignatoryAddresses\": [\n   \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n   \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n  ],\n  \"multisigAddresses\": null\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "b4ed1b2f-aa4e-4985-940a-ae44bd637038",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":address",
                                                "multisig"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "address"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "ad4b718b-59a8-49ac-ab0a-d9317fd9d396",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":address",
                                                "multisig"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "address"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "7f19708e-7460-4290-ae02-ea1fa18d8bea",
                            "name": "Get multisig account graph information",
                            "request": {
                                "name": "Get multisig account graph information",
                                "description": {
                                    "content": "Returns the multisig account graph.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "account",
                                        ":address",
                                        "multisig",
                                        "graph"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "description": "Account address.",
                                            "type": "any",
                                            "value": {
                                                "value": "reference #/components/schemas/AddressBase32 not found in the OpenAPI spec"
                                            },
                                            "key": "address"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "2ec51ae0-b740-4306-bed6-1065661bd7ba",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":address",
                                                "multisig",
                                                "graph"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "address"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "[\n {\n  \"level\": 0,\n  \"multisigEntries\": [\n   {\n    \"multisig\": {\n     \"accountAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n     \"minApproval\": 2222212828,\n     \"minRemoval\": 2222212828,\n     \"cosignatoryAddresses\": [\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     ],\n     \"multisigAddresses\": null\n    }\n   },\n   {\n    \"multisig\": {\n     \"accountAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n     \"minApproval\": 2222212828,\n     \"minRemoval\": 2222212828,\n     \"cosignatoryAddresses\": [\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     ],\n     \"multisigAddresses\": null\n    }\n   }\n  ]\n },\n {\n  \"level\": 0,\n  \"multisigEntries\": [\n   {\n    \"multisig\": {\n     \"accountAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n     \"minApproval\": 2222212828,\n     \"minRemoval\": 2222212828,\n     \"cosignatoryAddresses\": [\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     ],\n     \"multisigAddresses\": null\n    }\n   },\n   {\n    \"multisig\": {\n     \"accountAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n     \"minApproval\": 2222212828,\n     \"minRemoval\": 2222212828,\n     \"cosignatoryAddresses\": [\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     ],\n     \"multisigAddresses\": null\n    }\n   }\n  ]\n }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "6d0b2741-070d-45e4-8727-6dc420929568",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":address",
                                                "multisig",
                                                "graph"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "address"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "5a49fe5f-27f2-48ae-9f43-0a5b60472ac4",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":address",
                                                "multisig",
                                                "graph"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "address"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "00d7e268-8f14-4384-a1f4-9f69d6a0da86",
                    "name": "Get namespaces for given array of addresses",
                    "request": {
                        "name": "Get namespaces for given array of addresses",
                        "description": {
                            "content": "Gets namespaces for a given array of addresses.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "account",
                                "namespaces"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"publicKeys\": [\n        \"<hex>\",\n        \"<hex>\"\n    ],\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "8f77d05d-a00d-482c-b5da-2b228a1b0b55",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "namespaces"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"namespaces\": [\n  {\n   \"meta\": {\n    \"id\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"index\": \"<integer>\"\n   },\n   \"namespace\": {\n    \"registrationType\": 0,\n    \"depth\": 1,\n    \"level0\": \"85BBEA6CC462B244\",\n    \"alias\": {\n     \"type\": 0,\n     \"mosaicId\": \"0DC67FBE1CAD29E3\",\n     \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n    },\n    \"parentId\": \"85BBEA6CC462B244\",\n    \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"startHeight\": 1,\n    \"endHeight\": 1,\n    \"level1\": \"85BBEA6CC462B244\",\n    \"level2\": \"85BBEA6CC462B244\"\n   }\n  },\n  {\n   \"meta\": {\n    \"id\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"index\": \"<integer>\"\n   },\n   \"namespace\": {\n    \"registrationType\": 0,\n    \"depth\": 1,\n    \"level0\": \"85BBEA6CC462B244\",\n    \"alias\": {\n     \"type\": 0,\n     \"mosaicId\": \"0DC67FBE1CAD29E3\",\n     \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n    },\n    \"parentId\": \"85BBEA6CC462B244\",\n    \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"startHeight\": 1,\n    \"endHeight\": 1,\n    \"level1\": \"85BBEA6CC462B244\",\n    \"level2\": \"85BBEA6CC462B244\"\n   }\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8255520a-d324-483e-9adb-e19c435c84de",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "namespaces"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "522a8d1e-0d8b-4002-9a1d-75df9b0b5e75",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "namespaces"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "c1a41a99-2be7-4160-915e-695a0858ac74",
                    "name": "Get readable names for a set of accountIds",
                    "request": {
                        "name": "Get readable names for a set of accountIds",
                        "description": {
                            "content": "Returns friendly names for accounts.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "account",
                                "names"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"publicKeys\": [\n        \"<hex>\",\n        \"<hex>\"\n    ],\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "dd16d9bf-7e2c-4835-aabb-edae02ff90ab",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"accountNames\": [\n  {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n   \"names\": [\n    \"alias1\",\n    \"alias2\"\n   ]\n  },\n  {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n   \"names\": [\n    \"alias1\",\n    \"alias2\"\n   ]\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5b4ca8b7-c0c3-4806-94e0-40926b533959",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1360e511-a4f5-42b7-a24c-f0822cf10c19",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "b98f1e34-bb36-4ae7-bd3a-fbffb35699a0",
            "name": "blocks",
            "item": [
                {
                    "id": "0f07b1f6-344f-4010-9279-3167552fdf5c",
                    "name": "Get blocks",
                    "request": {
                        "name": "Get blocks",
                        "description": {
                            "content": "Gets an array of bocks.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "blocks"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "description": "Public key of the account signing the entity.",
                                    "key": "signerPublicKey",
                                    "value": "<hex>"
                                },
                                {
                                    "description": "Filter by beneficiary address.",
                                    "key": "beneficiaryAddress",
                                    "value": "<string>"
                                },
                                {
                                    "description": "Select the number of entries to return.",
                                    "key": "pageSize",
                                    "value": "10"
                                },
                                {
                                    "description": "Filter by page number.",
                                    "key": "pageNumber",
                                    "value": "1"
                                },
                                {
                                    "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                    "key": "offset",
                                    "value": "<string>"
                                },
                                {
                                    "description": "Sort responses in ascending or descending order based on the collection property set on the param ``orderBy``.\nIf the request does not specify ``orderBy``, REST returns the collection ordered by id.\n",
                                    "key": "order",
                                    "value": "desc"
                                },
                                {
                                    "description": "",
                                    "key": "orderBy",
                                    "value": "<string>"
                                }
                            ],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "74909d17-0bad-4020-8231-72d01787cf67",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "blocks"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "signerPublicKey",
                                            "value": "AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26"
                                        },
                                        {
                                            "key": "beneficiaryAddress",
                                            "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "key": "pageNumber",
                                            "value": "1"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "order",
                                            "value": "desc"
                                        },
                                        {
                                            "key": "orderBy",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"meta\": {\n    \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"totalFee\": \"123456\",\n    \"generationHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"stateHashSubCacheMerkleRoots\": [\n     \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n     \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n    ],\n    \"numTransactions\": 0,\n    \"numStatements\": 1\n   },\n   \"block\": {\n    \"size\": 2222212828,\n    \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n    \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"version\": \"<integer>\",\n    \"network\": 144,\n    \"type\": \"<integer>\",\n    \"height\": 1,\n    \"timestamp\": 108303181802,\n    \"difficulty\": 100000000000000,\n    \"proofGamma\": \"8D49594A96C31EC6C64305FB2CCB47AA7A4AC0A4F614442BB3684D2BF41F274E\",\n    \"proofVerificationHash\": \"82FB583BFE3EE78805784D078F2547AE\",\n    \"proofScalar\": \"480175C83739B22C53EAECAA7E7F3B245F1DFAFA6B3AE5C1D0129502FCBAAD0C\",\n    \"previousBlockHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"transactionsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"receiptsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"stateHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"beneficiaryAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"feeMultiplier\": 0\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"meta\": {\n    \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"totalFee\": \"123456\",\n    \"generationHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"stateHashSubCacheMerkleRoots\": [\n     \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n     \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n    ],\n    \"numTransactions\": 0,\n    \"numStatements\": 1\n   },\n   \"block\": {\n    \"size\": 2222212828,\n    \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n    \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"version\": \"<integer>\",\n    \"network\": 144,\n    \"type\": \"<integer>\",\n    \"height\": 1,\n    \"timestamp\": 108303181802,\n    \"difficulty\": 100000000000000,\n    \"proofGamma\": \"8D49594A96C31EC6C64305FB2CCB47AA7A4AC0A4F614442BB3684D2BF41F274E\",\n    \"proofVerificationHash\": \"82FB583BFE3EE78805784D078F2547AE\",\n    \"proofScalar\": \"480175C83739B22C53EAECAA7E7F3B245F1DFAFA6B3AE5C1D0129502FCBAAD0C\",\n    \"previousBlockHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"transactionsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"receiptsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"stateHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"beneficiaryAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"feeMultiplier\": 0\n   }\n  }\n ],\n \"pagination\": {\n  \"pageNumber\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"totalEntries\": \"<integer>\",\n  \"totalPages\": \"<integer>\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a0e42c70-e315-491a-a088-4173ac0163d2",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "blocks"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "signerPublicKey",
                                            "value": "AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26"
                                        },
                                        {
                                            "key": "beneficiaryAddress",
                                            "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "key": "pageNumber",
                                            "value": "1"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "order",
                                            "value": "desc"
                                        },
                                        {
                                            "key": "orderBy",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "390fbd64-c0e4-45ce-bdcc-af018c2dc006",
                    "name": "{height}",
                    "item": [
                        {
                            "id": "24ce8324-686c-4903-9165-a3fb0c8c4311",
                            "name": "Get block information",
                            "request": {
                                "name": "Get block information",
                                "description": {
                                    "content": "Gets a block from the chain that has the given height.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "blocks",
                                        ":height"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "description": "Block height.",
                                            "type": "any",
                                            "value": {
                                                "value": "reference #/components/schemas/Height not found in the OpenAPI spec"
                                            },
                                            "key": "height"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "d6b5fbbf-1389-46c4-a3c1-2e2c0d655db9",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "blocks",
                                                ":height"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "height"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"id\": \"<string>\",\n \"meta\": {\n  \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"totalFee\": \"123456\",\n  \"generationHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"stateHashSubCacheMerkleRoots\": [\n   \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n  ],\n  \"numTransactions\": 0,\n  \"numStatements\": 1\n },\n \"block\": {\n  \"size\": 2222212828,\n  \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n  \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"version\": \"<integer>\",\n  \"network\": 144,\n  \"type\": \"<integer>\",\n  \"height\": 1,\n  \"timestamp\": 108303181802,\n  \"difficulty\": 100000000000000,\n  \"proofGamma\": \"8D49594A96C31EC6C64305FB2CCB47AA7A4AC0A4F614442BB3684D2BF41F274E\",\n  \"proofVerificationHash\": \"82FB583BFE3EE78805784D078F2547AE\",\n  \"proofScalar\": \"480175C83739B22C53EAECAA7E7F3B245F1DFAFA6B3AE5C1D0129502FCBAAD0C\",\n  \"previousBlockHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"transactionsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"receiptsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"stateHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"beneficiaryAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n  \"feeMultiplier\": 0\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "2ca3304a-90ba-405b-b0f0-6541cdd6112c",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "blocks",
                                                ":height"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "height"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "e6e3d701-a329-4127-9608-e6dddd6596f8",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "blocks",
                                                ":height"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "height"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "256656a9-c0cd-479b-8708-f866d81697bd",
                            "name": "Get the merkle path for a given a transaction and block",
                            "request": {
                                "name": "Get the merkle path for a given a transaction and block",
                                "description": {
                                    "content": "Returns the merkle path for a transaction included in a block.\nThe merkle path is the minimum number of nodes needed to calculate the merkle root.\n\nSteps to calculate the merkle root:\n1. proofHash = hash (leaf).\n2. Concatenate proofHash with the first unprocessed item from the merklePath list as follows:\n* a) If item.position == left -> proofHash = sha_256(item.hash + proofHash).\n* b) If item.position == right -> proofHash = sha_256(proofHash+ item.hash).\n3. Repeat 2. for every item in the merklePath list.\n4. Compare if the calculated proofHash equals the one recorded in the\nblock header (block.transactionsHash) to verify if the transaction was included in the block.\n",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "blocks",
                                        ":height",
                                        "transactions",
                                        ":hash",
                                        "merkle"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "description": "Block height.",
                                            "type": "any",
                                            "value": {
                                                "value": "reference #/components/schemas/Height not found in the OpenAPI spec"
                                            },
                                            "key": "height"
                                        },
                                        {
                                            "description": "Transaction hash.",
                                            "type": "any",
                                            "value": {
                                                "value": "reference #/components/schemas/Hash256 not found in the OpenAPI spec"
                                            },
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "3180fb65-1a55-4d3b-ae00-9180fd989d55",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "blocks",
                                                ":height",
                                                "transactions",
                                                ":hash",
                                                "merkle"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "height"
                                                },
                                                {
                                                    "type": "any",
                                                    "key": "hash"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"merklePath\": [\n  {\n   \"position\": \"<string>\",\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n  },\n  {\n   \"position\": \"<string>\",\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n  }\n ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "d4084a44-7998-43b7-aa07-38ea084aad4d",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "blocks",
                                                ":height",
                                                "transactions",
                                                ":hash",
                                                "merkle"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "height"
                                                },
                                                {
                                                    "type": "any",
                                                    "key": "hash"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "2bd7a4fe-1c7f-4860-83ec-84f1907d6ed7",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "blocks",
                                                ":height",
                                                "transactions",
                                                ":hash",
                                                "merkle"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "height"
                                                },
                                                {
                                                    "type": "any",
                                                    "key": "hash"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "35f1244f-e422-4492-9070-ee6bea4c0e65",
            "name": "chain",
            "item": [
                {
                    "id": "6b58db67-1b6b-4def-b6e1-f54414525515",
                    "name": "Get the current height of the chain",
                    "request": {
                        "name": "Get the current height of the chain",
                        "description": {
                            "content": "Returns the current height of the blockchain.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "chain",
                                "height"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "294b79ce-113e-44d9-9120-8ee3542c9478",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "chain",
                                        "height"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"height\": 1\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "709682bf-d47d-4d67-a32f-d831131fc206",
                    "name": "Get the current score of the chain",
                    "request": {
                        "name": "Get the current score of the chain",
                        "description": {
                            "content": "Gets the current score of the blockchain. The higher the score, the better the chain.\nDuring synchronization, nodes try to get the best blockchain in the network.\n\nThe score for a block is derived from its difficulty and the time (in seconds) that has elapsed since the last block:\n\n    block score = difficulty − time elapsed since last block\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "chain",
                                "score"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "7bcf2191-08db-4392-b73d-91388534a05c",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "chain",
                                        "score"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"scoreHigh\": 1683298087010368300,\n \"scoreLow\": 1683298087010368300\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "623eac16-7f17-42ad-9567-dca5ed8fb11c",
            "name": "network",
            "item": [
                {
                    "id": "64352d58-1590-47ed-a8e3-e3ae9d0a406f",
                    "name": "Get the current network type of the chain",
                    "request": {
                        "name": "Get the current network type of the chain",
                        "description": {
                            "content": "Returns the current network type.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "network"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "b037fb66-8b51-4dc5-a6b8-78080ec0a743",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "network"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"name\": \"mijinTest\",\n \"description\": \"catapult development network\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "152f13b6-7364-4f48-b783-dd60c98b346b",
                    "name": "fees",
                    "item": [
                        {
                            "id": "e6854792-8fd2-4b19-9699-8041ea5e0206",
                            "name": "Get rental fees information",
                            "request": {
                                "name": "Get rental fees information",
                                "description": {
                                    "content": "Returns the estimated effective rental fees for namespaces and mosaics.\nThis endpoint is only available if the REST instance has access to catapult-server ``resources/config-network.properties`` file.\nTo activate this feature, add the setting \"network.propertiesFilePath\" in the configuration file (rest/resources/rest.json).\n",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "network",
                                        "fees",
                                        "rental"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "900a212e-29cf-43d7-8418-e56c05c6aa9b",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "network",
                                                "fees",
                                                "rental"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"effectiveRootNamespaceRentalFeePerBlock\": \"123456\",\n \"effectiveChildNamespaceRentalFee\": \"123456\",\n \"effectiveMosaicRentalFee\": \"123456\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "93734350-dc58-4b9f-8be1-bed71d89e5cd",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "network",
                                                "fees",
                                                "rental"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "f4ba0c28-74e3-4bbb-aac8-234f3fbc12d2",
                            "name": "Get transaction fees information",
                            "request": {
                                "name": "Get transaction fees information",
                                "description": {
                                    "content": "Returns the average, median, highest and lower fee multiplier over the last \"numBlocksTransactionFeeStats\".\nThe setting \"numBlocksTransactionFeeStats\" is adjustable via the configuration file (rest/resources/rest.json) per REST instance.\n",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "network",
                                        "fees",
                                        "transaction"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "936b30fb-3e7f-4797-a7b8-d5fda8c95d33",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "network",
                                                "fees",
                                                "transaction"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"averageFeeMultiplier\": 0,\n \"medianFeeMultiplier\": 0,\n \"highestFeeMultiplier\": 0,\n \"lowestFeeMultiplier\": 0\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "14dad2eb-866c-4bbc-a9c5-b12907f96046",
                    "name": "Get the network properties",
                    "request": {
                        "name": "Get the network properties",
                        "description": {
                            "content": "Returns the content from a catapult-server network configuration file (resources/config-network.properties).\nTo enable this feature, the REST setting \"network.propertiesFilePath\" must define where the file is located.\nThis is adjustable via the configuration file (rest/resources/rest.json) per REST instance.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "network",
                                "properties"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "3f6b1411-6b96-4182-825f-adf29045d238",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "network",
                                        "properties"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"network\": {\n  \"identifier\": \"mijin-test\",\n  \"nodeEqualityStrategy\": \"<string>\",\n  \"nemesisSignerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"generationHashSeed\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"epochAdjustment\": \"1573430400s\"\n },\n \"chain\": {\n  \"enableVerifiableState\": true,\n  \"enableVerifiableReceipts\": true,\n  \"currencyMosaicId\": \"0x24F4'26B8'D549'3D4B\",\n  \"harvestingMosaicId\": \"0x1D9C'DC7E'218C'A88D\",\n  \"blockGenerationTargetTime\": \"30s\",\n  \"blockTimeSmoothingFactor\": \"3000\",\n  \"blockFinalizationInterval\": 30,\n  \"importanceGrouping\": \"39\",\n  \"importanceActivityPercentage\": \"5\",\n  \"maxRollbackBlocks\": \"40\",\n  \"maxDifficultyBlocks\": \"60\",\n  \"defaultDynamicFeeMultiplier\": \"10'000\",\n  \"maxTransactionLifetime\": \"24h\",\n  \"maxBlockFutureTime\": \"500ms\",\n  \"initialCurrencyAtomicUnits\": \"8'998'999'998'000'000\",\n  \"maxMosaicAtomicUnits\": \"9'000'000'000'000'000\",\n  \"totalChainImportance\": \"15'000'000\",\n  \"minHarvesterBalance\": \"500\",\n  \"maxHarvesterBalance\": \"4'000'000\",\n  \"minVoterBalance\": \"50'000\",\n  \"harvestBeneficiaryPercentage\": \"10\",\n  \"harvestNetworkPercentage\": \"5\",\n  \"harvestNetworkFeeSinkAddress\": \"SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ\",\n  \"blockPruneInterval\": \"360\",\n  \"maxTransactionsPerBlock\": \"200'000\"\n },\n \"plugins\": {\n  \"accountlink\": {\n   \"dummy\": \"<string>\"\n  },\n  \"aggregate\": {\n   \"maxTransactionsPerAggregate\": \"1'000\",\n   \"maxCosignaturesPerAggregate\": \"15\",\n   \"enableStrictCosignatureCheck\": false,\n   \"enableBondedAggregateSupport\": true,\n   \"maxBondedTransactionLifetime\": \"48h\"\n  },\n  \"lockhash\": {\n   \"lockedFundsPerAggregate\": \"10'000'000\",\n   \"maxHashLockDuration\": \"2d\"\n  },\n  \"locksecret\": {\n   \"maxSecretLockDuration\": \"30d\",\n   \"minProofSize\": \"1\",\n   \"maxProofSize\": \"1000\"\n  },\n  \"metadata\": {\n   \"maxValueSize\": \"1024\"\n  },\n  \"mosaic\": {\n   \"maxMosaicsPerAccount\": \"10'000\",\n   \"maxMosaicDuration\": \"3650d\",\n   \"maxMosaicDivisibility\": \"6\",\n   \"mosaicRentalFeeSinkAddress\": \"SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ\",\n   \"mosaicRentalFee\": \"500\"\n  },\n  \"multisig\": {\n   \"maxMultisigDepth\": \"3\",\n   \"maxCosignatoriesPerAccount\": \"10\",\n   \"maxCosignedAccountsPerAccount\": \"5\"\n  },\n  \"namespace\": {\n   \"maxNameSize\": \"64\",\n   \"maxChildNamespaces\": \"500\",\n   \"maxNamespaceDepth\": \"3\",\n   \"minNamespaceDuration\": \"1m\",\n   \"maxNamespaceDuration\": \"365d\",\n   \"namespaceGracePeriodDuration\": \"2m\",\n   \"reservedRootNamespaceNames\": \"xem, nem, user, account, org, com, biz, net, edu, mil, gov, info\",\n   \"namespaceRentalFeeSinkAddress\": \"SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ\",\n   \"rootNamespaceRentalFeePerBlock\": \"1\",\n   \"childNamespaceRentalFee\": \"100\"\n  },\n  \"restrictionaccount\": {\n   \"maxAccountRestrictionValues\": \"512\"\n  },\n  \"restrictionmosaic\": {\n   \"maxMosaicRestrictionValues\": \"20\"\n  },\n  \"transfer\": {\n   \"maxMessageSize\": \"1024\"\n  }\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1f36127e-a0ac-4460-b52e-c2b686c8b25e",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "network",
                                        "properties"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "30d8291d-9b0e-47b7-b9a0-869f1032cb88",
            "name": "node",
            "item": [
                {
                    "id": "d4f6b630-8ce0-49b0-935b-07b9497870b6",
                    "name": "Get the node health information",
                    "request": {
                        "name": "Get the node health information",
                        "description": {
                            "content": "Supplies information regarding the connection and services status.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "health"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "ad934797-a398-4808-8c50-b7500b6dc94a",
                            "name": "Both API node and database services are reachable from REST server.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "health"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"status\": {\n  \"apiNode\": \"<string>\",\n  \"db\": \"<string>\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8e9b3079-cc65-4fbc-8f10-5a40ef3c7b91",
                            "name": "Either API node or database service is unavailable or unreachable from REST server.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "health"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"status\": {\n  \"apiNode\": \"<string>\",\n  \"db\": \"<string>\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "8aa6b294-4226-4d88-abe0-bd9b6e42bc0f",
                    "name": "Get the node information",
                    "request": {
                        "name": "Get the node information",
                        "description": {
                            "content": "Supplies additional information about the application running on a node.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "info"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "97d2d806-4f0d-4418-a595-91253ea8bb2b",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "info"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"version\": 0,\n \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n \"networkGenerationHashSeed\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n \"roles\": 2,\n \"port\": 7900,\n \"networkIdentifier\": 144,\n \"friendlyName\": \"api-node-0\",\n \"host\": \"127.0.0.1\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "721bcde3-3e09-4f59-a4ae-4421f35edcb8",
                    "name": "Get peers information",
                    "request": {
                        "name": "Get peers information",
                        "description": {
                            "content": "Gets the list of peers visible by the node.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "peers"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "2ce3da36-4c7b-4a56-a257-02a76dca595e",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "peers"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"version\": 0,\n  \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"networkGenerationHashSeed\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"roles\": 2,\n  \"port\": 7900,\n  \"networkIdentifier\": 144,\n  \"friendlyName\": \"api-node-0\",\n  \"host\": \"127.0.0.1\"\n },\n {\n  \"version\": 0,\n  \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"networkGenerationHashSeed\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"roles\": 2,\n  \"port\": 7900,\n  \"networkIdentifier\": 144,\n  \"friendlyName\": \"api-node-0\",\n  \"host\": \"127.0.0.1\"\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "619dbf4e-a734-4660-afc2-9846fcb52952",
                    "name": "Get the storage information of the node",
                    "request": {
                        "name": "Get the storage information of the node",
                        "description": {
                            "content": "Returns storage information about the node.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "storage"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "2fdfb9a6-23b3-4c52-95f3-f0da3cc76b5d",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "storage"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"numBlocks\": 245053,\n \"numTransactions\": 58590,\n \"numAccounts\": 177\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "a0229d69-d702-4936-bd16-5b7f5cc82f5e",
                    "name": "Get the node time",
                    "request": {
                        "name": "Get the node time",
                        "description": {
                            "content": "Gets the node time at the moment the reply was sent and received.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "time"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "106c3b5c-07cc-44d2-854e-30a60a9433d1",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "time"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"communicationTimestamps\": {\n  \"sendTimestamp\": 108303181802,\n  \"receiveTimestamp\": 108303181802\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "d2abc84c-df27-4534-a686-3044d22a5a56",
                    "name": "Get the version of the running REST component",
                    "request": {
                        "name": "Get the version of the running REST component",
                        "description": {
                            "content": "Returns the version of the running catapult-rest component.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "server"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "ede5c37b-cab1-4818-8e9c-cf1df15b1cfd",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "server"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"serverInfo\": {\n  \"restVersion\": \"1.0.14\",\n  \"sdkVersion\": \"0.7.14\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "0a6a2664-9a6d-4ef8-8fe3-07e1f557141e",
            "name": "transactions",
            "item": [
                {
                    "id": "ca1f98ed-6dbf-4fef-971e-d4483bb5321b",
                    "name": "Announce a new transaction",
                    "request": {
                        "name": "Announce a new transaction",
                        "description": {
                            "content": "Announces a transaction to the network.\nThe [catbuffer library](https://github.com/nemtech/catbuffer) defines the protocol to serialize and deserialize Symbol entities.\nCatbuffers are integrated into [Symbol SDKs](https://nemtech.github.io/sdk.html). \nIt's recommended to use SDKs instead of calling the API endpoint directly to announce transactions.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "transactions"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"payload\": \"<string>\"\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "208210d5-f223-40f7-b971-50a7c8f115d6",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Accepted",
                            "code": 202,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "feca0d21-aaca-45bb-bf1e-f8e5c4548678",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3b127560-8d07-48f7-b47b-2792e7a57849",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "edd598a3-76a2-47d8-baf0-249d436f2ec3",
                    "name": "confirmed",
                    "item": [
                        {
                            "id": "b256a4da-0389-49fb-8e80-111030b9c172",
                            "name": "Get transactions",
                            "request": {
                                "name": "Get transactions",
                                "description": {
                                    "content": "Returns an array of confirmed transactions.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "transactions",
                                        "confirmed"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "description": "Filter by address involved in the transaction. \nAn account's address is consider to be involved in the transaction when the account is the sender, recipient, or it is required to cosign the transaction.\nThis filter cannot be combined with ``recipientAddress`` and ``signerPublicKey`` query params.\n",
                                            "key": "address",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Address of an account receiving the transaction.",
                                            "key": "recipientAddress",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Public key of the account signing the entity.",
                                            "key": "signerPublicKey",
                                            "value": "<hex>"
                                        },
                                        {
                                            "description": "Filter by block height.",
                                            "key": "height",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Filter by transaction type.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                            "key": "type",
                                            "value": "<integer>"
                                        },
                                        {
                                            "description": "Filter by transaction type.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                            "key": "type",
                                            "value": "<integer>"
                                        },
                                        {
                                            "description": "When true, the endpoint also returns all the embedded aggregate transactions.\nOtherwise, only top-level transactions used to calcualate the block transactionsHash are returned.\n",
                                            "key": "embedded",
                                            "value": "false"
                                        },
                                        {
                                            "description": "Select the number of entries to return.",
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "description": "Filter by page number.",
                                            "key": "pageNumber",
                                            "value": "1"
                                        },
                                        {
                                            "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                            "key": "offset",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Sort responses in ascending or descending order based on the collection property set on the param ``orderBy``.\nIf the request does not specify ``orderBy``, REST returns the collection ordered by id.\n",
                                            "key": "order",
                                            "value": "desc"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "656ec3cb-30ce-4030-a0a6-27db204c6f32",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "confirmed"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "address",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "recipientAddress",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "signerPublicKey",
                                                    "value": "AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26"
                                                },
                                                {
                                                    "key": "height",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "embedded",
                                                    "value": "false"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "pageNumber",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"meta\": {\n    \"height\": 1,\n    \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"index\": \"<integer>\"\n   },\n   \"transaction\": {\n    \"size\": 2222212828,\n    \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n    \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"version\": \"<integer>\",\n    \"network\": 144,\n    \"type\": \"<integer>\",\n    \"maxFee\": \"123456\",\n    \"deadline\": 200,\n    \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"linkAction\": \"<integer>\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"meta\": {\n    \"height\": 1,\n    \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"index\": \"<integer>\"\n   },\n   \"transaction\": {\n    \"size\": 2222212828,\n    \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n    \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"version\": \"<integer>\",\n    \"network\": 144,\n    \"type\": \"<integer>\",\n    \"maxFee\": \"123456\",\n    \"deadline\": 200,\n    \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"linkAction\": \"<integer>\"\n   }\n  }\n ],\n \"pagination\": {\n  \"pageNumber\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"totalEntries\": \"<integer>\",\n  \"totalPages\": \"<integer>\"\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "45f6bfca-575d-422b-98ea-4662ebbe0cbd",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "confirmed"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "address",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "recipientAddress",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "signerPublicKey",
                                                    "value": "AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26"
                                                },
                                                {
                                                    "key": "height",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "embedded",
                                                    "value": "false"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "pageNumber",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "0b9be014-7f36-4d88-878c-3095a90688f5",
                            "name": "Get transactions information",
                            "request": {
                                "name": "Get transactions information",
                                "description": {
                                    "content": "Returns confirmed transactions information for a given array of transactionIds.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "transactions",
                                        "confirmed"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "noauth"
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"transactionIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                }
                            },
                            "response": [
                                {
                                    "id": "67dea1d1-cbeb-4693-87dd-310669128a85",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "confirmed"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "[\n {\n  \"id\": \"<string>\",\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\"\n  },\n  \"transaction\": {\n   \"size\": 2222212828,\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n },\n {\n  \"id\": \"<string>\",\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\"\n  },\n  \"transaction\": {\n   \"size\": 2222212828,\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "f9512bb3-a290-459e-b37a-71d82af84d74",
                                    "name": "InvalidContent",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "confirmed"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "facd816f-7e93-49eb-acd4-fefd86c9917a",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "confirmed"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "a21f4b6b-437b-4dfc-9de5-510b6c648a70",
                            "name": "Get transaction information",
                            "request": {
                                "name": "Get transaction information",
                                "description": {
                                    "content": "Returns confirmed transaction information given a transactionId or hash.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "transactions",
                                        "confirmed",
                                        ":transactionId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "description": "Transaction id or hash.",
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "transactionId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "7d7728b6-221a-4612-a4e4-0821e4cb3b1a",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "confirmed",
                                                ":transactionId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "transactionId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"id\": \"<string>\",\n \"meta\": {\n  \"height\": 1,\n  \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"index\": \"<integer>\"\n },\n \"transaction\": {\n  \"size\": 2222212828,\n  \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n  \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"version\": \"<integer>\",\n  \"network\": 144,\n  \"type\": \"<integer>\",\n  \"maxFee\": \"123456\",\n  \"deadline\": 200,\n  \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"linkAction\": \"<integer>\"\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "2f7281fe-e531-4935-accb-f016c946e0fa",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "confirmed",
                                                ":transactionId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "transactionId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "51949e62-8aaf-4a15-84ed-8f49870af879",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "confirmed",
                                                ":transactionId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "transactionId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "727ffda1-6a32-477b-8d99-a0dae949f576",
                    "name": "unconfirmed",
                    "item": [
                        {
                            "id": "227af4c9-ac7c-441d-b668-f4621a2f9122",
                            "name": "Get transactions",
                            "request": {
                                "name": "Get transactions",
                                "description": {
                                    "content": "Returns an array of unconfirmed transactions.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "transactions",
                                        "unconfirmed"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "description": "Filter by address involved in the transaction. \nAn account's address is consider to be involved in the transaction when the account is the sender, recipient, or it is required to cosign the transaction.\nThis filter cannot be combined with ``recipientAddress`` and ``signerPublicKey`` query params.\n",
                                            "key": "address",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Address of an account receiving the transaction.",
                                            "key": "recipientAddress",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Public key of the account signing the entity.",
                                            "key": "signerPublicKey",
                                            "value": "<hex>"
                                        },
                                        {
                                            "description": "Filter by block height.",
                                            "key": "height",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Filter by transaction type.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                            "key": "type",
                                            "value": "<integer>"
                                        },
                                        {
                                            "description": "Filter by transaction type.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                            "key": "type",
                                            "value": "<integer>"
                                        },
                                        {
                                            "description": "When true, the endpoint also returns all the embedded aggregate transactions.\nOtherwise, only top-level transactions used to calcualate the block transactionsHash are returned.\n",
                                            "key": "embedded",
                                            "value": "false"
                                        },
                                        {
                                            "description": "Select the number of entries to return.",
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "description": "Filter by page number.",
                                            "key": "pageNumber",
                                            "value": "1"
                                        },
                                        {
                                            "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                            "key": "offset",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Sort responses in ascending or descending order based on the collection property set on the param ``orderBy``.\nIf the request does not specify ``orderBy``, REST returns the collection ordered by id.\n",
                                            "key": "order",
                                            "value": "desc"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "8328af4a-e5fc-4765-abca-5a556a9b3ac6",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "unconfirmed"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "address",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "recipientAddress",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "signerPublicKey",
                                                    "value": "AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26"
                                                },
                                                {
                                                    "key": "height",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "embedded",
                                                    "value": "false"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "pageNumber",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"meta\": {\n    \"height\": 1,\n    \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"index\": \"<integer>\"\n   },\n   \"transaction\": {\n    \"size\": 2222212828,\n    \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n    \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"version\": \"<integer>\",\n    \"network\": 144,\n    \"type\": \"<integer>\",\n    \"maxFee\": \"123456\",\n    \"deadline\": 200,\n    \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"linkAction\": \"<integer>\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"meta\": {\n    \"height\": 1,\n    \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"index\": \"<integer>\"\n   },\n   \"transaction\": {\n    \"size\": 2222212828,\n    \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n    \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"version\": \"<integer>\",\n    \"network\": 144,\n    \"type\": \"<integer>\",\n    \"maxFee\": \"123456\",\n    \"deadline\": 200,\n    \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"linkAction\": \"<integer>\"\n   }\n  }\n ],\n \"pagination\": {\n  \"pageNumber\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"totalEntries\": \"<integer>\",\n  \"totalPages\": \"<integer>\"\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "58d4cf1a-35d8-4cfd-bb1e-e4f9d8f3dc02",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "unconfirmed"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "address",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "recipientAddress",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "signerPublicKey",
                                                    "value": "AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26"
                                                },
                                                {
                                                    "key": "height",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "embedded",
                                                    "value": "false"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "pageNumber",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "34b3f94a-b0c6-4f17-beb1-4c7da36c2f56",
                            "name": "Get transactions information",
                            "request": {
                                "name": "Get transactions information",
                                "description": {
                                    "content": "Returns unconfirmed transactions information for a given array of transactionIds.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "transactions",
                                        "unconfirmed"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "noauth"
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"transactionIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                }
                            },
                            "response": [
                                {
                                    "id": "b0a156f2-026f-46db-823b-a4ff4009df52",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "unconfirmed"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "[\n {\n  \"id\": \"<string>\",\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\"\n  },\n  \"transaction\": {\n   \"size\": 2222212828,\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n },\n {\n  \"id\": \"<string>\",\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\"\n  },\n  \"transaction\": {\n   \"size\": 2222212828,\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "5cc676e1-a4cf-403e-b776-09488266516b",
                                    "name": "InvalidContent",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "unconfirmed"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "25df0954-21cf-466d-98e8-f2cd9bcce842",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "unconfirmed"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "cd4b0d9f-71d3-455a-bcb1-fd5dfe16b39f",
                            "name": "Get transaction information",
                            "request": {
                                "name": "Get transaction information",
                                "description": {
                                    "content": "Returns unconfirmed transaction information given a transactionId or hash.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "transactions",
                                        "unconfirmed",
                                        ":transactionId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "description": "Transaction id or hash.",
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "transactionId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "3889ddfe-0c17-4023-9be6-cc94a8352b1f",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "unconfirmed",
                                                ":transactionId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "transactionId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"id\": \"<string>\",\n \"meta\": {\n  \"height\": 1,\n  \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"index\": \"<integer>\"\n },\n \"transaction\": {\n  \"size\": 2222212828,\n  \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n  \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"version\": \"<integer>\",\n  \"network\": 144,\n  \"type\": \"<integer>\",\n  \"maxFee\": \"123456\",\n  \"deadline\": 200,\n  \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"linkAction\": \"<integer>\"\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "ff18422d-1264-4470-978d-4443e0c40b75",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "unconfirmed",
                                                ":transactionId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "transactionId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "f9dc6a2f-6e11-467c-9429-390c43bbd4d9",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "unconfirmed",
                                                ":transactionId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "transactionId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "4a10f131-5012-410f-a71c-9d2dde8a2b62",
                    "name": "partial",
                    "item": [
                        {
                            "id": "d96d9f7d-17a1-44a2-990c-81271a820902",
                            "name": "Get transactions",
                            "request": {
                                "name": "Get transactions",
                                "description": {
                                    "content": "Returns an array of partial transactions.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "transactions",
                                        "partial"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "description": "Filter by address involved in the transaction. \nAn account's address is consider to be involved in the transaction when the account is the sender, recipient, or it is required to cosign the transaction.\nThis filter cannot be combined with ``recipientAddress`` and ``signerPublicKey`` query params.\n",
                                            "key": "address",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Address of an account receiving the transaction.",
                                            "key": "recipientAddress",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Public key of the account signing the entity.",
                                            "key": "signerPublicKey",
                                            "value": "<hex>"
                                        },
                                        {
                                            "description": "Filter by block height.",
                                            "key": "height",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Filter by transaction type.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                            "key": "type",
                                            "value": "<integer>"
                                        },
                                        {
                                            "description": "Filter by transaction type.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                            "key": "type",
                                            "value": "<integer>"
                                        },
                                        {
                                            "description": "When true, the endpoint also returns all the embedded aggregate transactions.\nOtherwise, only top-level transactions used to calcualate the block transactionsHash are returned.\n",
                                            "key": "embedded",
                                            "value": "false"
                                        },
                                        {
                                            "description": "Select the number of entries to return.",
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "description": "Filter by page number.",
                                            "key": "pageNumber",
                                            "value": "1"
                                        },
                                        {
                                            "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                            "key": "offset",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Sort responses in ascending or descending order based on the collection property set on the param ``orderBy``.\nIf the request does not specify ``orderBy``, REST returns the collection ordered by id.\n",
                                            "key": "order",
                                            "value": "desc"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "3ba932d1-b519-430b-aec8-be51d86da9c2",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "partial"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "address",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "recipientAddress",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "signerPublicKey",
                                                    "value": "AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26"
                                                },
                                                {
                                                    "key": "height",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "embedded",
                                                    "value": "false"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "pageNumber",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"meta\": {\n    \"height\": 1,\n    \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"index\": \"<integer>\"\n   },\n   \"transaction\": {\n    \"size\": 2222212828,\n    \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n    \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"version\": \"<integer>\",\n    \"network\": 144,\n    \"type\": \"<integer>\",\n    \"maxFee\": \"123456\",\n    \"deadline\": 200,\n    \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"linkAction\": \"<integer>\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"meta\": {\n    \"height\": 1,\n    \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"index\": \"<integer>\"\n   },\n   \"transaction\": {\n    \"size\": 2222212828,\n    \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n    \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"version\": \"<integer>\",\n    \"network\": 144,\n    \"type\": \"<integer>\",\n    \"maxFee\": \"123456\",\n    \"deadline\": 200,\n    \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"linkAction\": \"<integer>\"\n   }\n  }\n ],\n \"pagination\": {\n  \"pageNumber\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"totalEntries\": \"<integer>\",\n  \"totalPages\": \"<integer>\"\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "8bc1fa2b-1f98-4a90-be39-355c9f23617d",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "partial"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "address",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "recipientAddress",
                                                    "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                                },
                                                {
                                                    "key": "signerPublicKey",
                                                    "value": "AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26"
                                                },
                                                {
                                                    "key": "height",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "embedded",
                                                    "value": "false"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "pageNumber",
                                                    "value": "1"
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "5a57db2b-ecac-47cb-bca9-8b28394d075c",
                            "name": "Announce an aggregate bonded transaction",
                            "request": {
                                "name": "Announce an aggregate bonded transaction",
                                "description": {
                                    "content": "Announces an aggregate bonded transaction to the network.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "transactions",
                                        "partial"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "noauth"
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"payload\": \"<string>\"\n}"
                                }
                            },
                            "response": [
                                {
                                    "id": "cf0613df-89e8-4021-832b-9a40e7b230bb",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "partial"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "PUT",
                                        "body": {}
                                    },
                                    "status": "Accepted",
                                    "code": 202,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "621e8e0b-ebbb-4b1f-9f80-b3f44a78da27",
                                    "name": "InvalidContent",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "partial"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "PUT",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "e354e9b2-6f27-4e8a-96b5-87f456fd646a",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "partial"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "PUT",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "110779c2-f354-4910-a61d-1c6d077267ca",
                            "name": "Get transactions information",
                            "request": {
                                "name": "Get transactions information",
                                "description": {
                                    "content": "Returns partial transactions information for a given array of transactionIds.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "transactions",
                                        "partial"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "noauth"
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"transactionIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                }
                            },
                            "response": [
                                {
                                    "id": "81b7c5d6-a8ad-44b4-928a-a5b16255fb7f",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "partial"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "[\n {\n  \"id\": \"<string>\",\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\"\n  },\n  \"transaction\": {\n   \"size\": 2222212828,\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n },\n {\n  \"id\": \"<string>\",\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\"\n  },\n  \"transaction\": {\n   \"size\": 2222212828,\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "9fc27da6-97d2-4188-9ac2-cc167a0a9c10",
                                    "name": "InvalidContent",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "partial"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "5e268ae5-c620-4645-8c96-984786bd244b",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "partial"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "d65d4cbf-6703-42ca-8e06-74b001c09848",
                            "name": "Get transaction information",
                            "request": {
                                "name": "Get transaction information",
                                "description": {
                                    "content": "Returns partial transaction information given a transactionId or hash.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "transactions",
                                        "partial",
                                        ":transactionId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "description": "Transaction id or hash.",
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "transactionId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "b07b3a9e-6bc6-4c94-87fe-648196f2d032",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "partial",
                                                ":transactionId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "transactionId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"id\": \"<string>\",\n \"meta\": {\n  \"height\": 1,\n  \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"index\": \"<integer>\"\n },\n \"transaction\": {\n  \"size\": 2222212828,\n  \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n  \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"version\": \"<integer>\",\n  \"network\": 144,\n  \"type\": \"<integer>\",\n  \"maxFee\": \"123456\",\n  \"deadline\": 200,\n  \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"linkAction\": \"<integer>\"\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "046c9bfe-7b4b-4301-ae0e-53f1be45587b",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "partial",
                                                ":transactionId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "transactionId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "3b0d4ce4-2609-4adf-8ac0-1aec1f3dbdfa",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "transactions",
                                                "partial",
                                                ":transactionId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "transactionId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "368a47e5-347d-4c5b-82b9-0baeb1903324",
                    "name": "Announce a cosignature transaction",
                    "request": {
                        "name": "Announce a cosignature transaction",
                        "description": {
                            "content": "Announces a cosignature transaction to the network.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "transactions",
                                "cosignature"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"parentHash\": \"<hex>\",\n    \"signature\": \"<string>\",\n    \"signerPublicKey\": \"<hex>\",\n    \"version\": \"<string>\"\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "c004b3a7-3c47-4d40-8767-8d1564dd7bed",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactions",
                                        "cosignature"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Accepted",
                            "code": 202,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5dd23def-7be2-4015-ada2-f0d983ca7f29",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactions",
                                        "cosignature"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fc9cc28c-97fb-4eb6-9e1f-625cab5712ef",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactions",
                                        "cosignature"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "a6c92f82-15e0-495c-ab09-09e204a410be",
            "name": "transaction Status",
            "item": [
                {
                    "id": "72463009-18a0-4f13-a819-454903c41271",
                    "name": "Get transaction statuses",
                    "request": {
                        "name": "Get transaction statuses",
                        "description": {
                            "content": "Returns an array of transaction statuses for a given array of transaction hashes.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "transactionStatus"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"hashes\": [\n        \"<hex>\",\n        \"<hex>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "1d63121d-91f5-4c38-961f-3b15a4c0bf42",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactionStatus"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"group\": \"<string>\",\n  \"deadline\": 200,\n  \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"code\": \"<string>\",\n  \"height\": 1\n },\n {\n  \"group\": \"<string>\",\n  \"deadline\": 200,\n  \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"code\": \"<string>\",\n  \"height\": 1\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "10399ceb-ed69-40ad-9de3-59adaece0048",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactionStatus"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "718d50be-2f9e-41d7-9077-8ad4d35b7f8d",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactionStatus"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "48a14563-55ee-46e0-afc6-38bb8090f2a2",
                    "name": "Get transaction status",
                    "request": {
                        "name": "Get transaction status",
                        "description": {
                            "content": "Returns the transaction status for a given hash.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "transactionStatus",
                                ":hash"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Transaction hash.",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/Hash256 not found in the OpenAPI spec"
                                    },
                                    "key": "hash"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "9defd2cc-5498-4d26-a867-44e01b4f71ec",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactionStatus",
                                        ":hash"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"group\": \"<string>\",\n \"deadline\": 200,\n \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n \"code\": \"<string>\",\n \"height\": 1\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0f62b860-a28e-4d69-94b0-f3a1bd0e89ca",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactionStatus",
                                        ":hash"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c471ce27-99b2-4db8-b1a4-b207a2eae20e",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transactionStatus",
                                        ":hash"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "51144893-491c-42c4-90d4-d908a52353c2",
            "name": "metadata",
            "item": [
                {
                    "id": "96d752d4-a3a0-4fab-b8ec-4cb9c3a7b2ad",
                    "name": "account/{address}",
                    "item": [
                        {
                            "id": "d09923e1-9895-439f-9fe5-53479b804aa3",
                            "name": "Get account metadata",
                            "request": {
                                "name": "Get account metadata",
                                "description": {
                                    "content": "Returns the account metadata given an account id.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "metadata",
                                        "account",
                                        ":address"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "description": "Select the number of entries to return.",
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "description": "Sort responses in ascending or descending order based on the collection property set on the param ``orderBy``.\nIf the request does not specify ``orderBy``, REST returns the collection ordered by id.\n",
                                            "key": "order",
                                            "value": "desc"
                                        },
                                        {
                                            "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                            "key": "id",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "description": "Account address.",
                                            "type": "any",
                                            "value": {
                                                "value": "reference #/components/schemas/AddressBase32 not found in the OpenAPI spec"
                                            },
                                            "key": "address"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "8707e185-df55-4028-afa4-2673a618cca5",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "account",
                                                ":address"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "address"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"metadataEntries\": [\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"sourceAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"sourceAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  }\n ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "de453dd9-ff37-4697-bafa-701896c09127",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "account",
                                                ":address"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "address"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "92739ac2-3a04-4c1f-8224-834e02c4042e",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "account",
                                                ":address"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "address"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "d2af5efc-de26-42de-a8f0-6c729a9dd51b",
                            "name": "key/{key}",
                            "item": [
                                {
                                    "id": "269db7df-22c5-4be5-9664-e1fe505c6d44",
                                    "name": "Get account metadata",
                                    "request": {
                                        "name": "Get account metadata",
                                        "description": {
                                            "content": "Returns the account metadata given an account id and a key.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "account",
                                                ":address",
                                                "key",
                                                ":key"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Account address.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/AddressBase32 not found in the OpenAPI spec"
                                                    },
                                                    "key": "address"
                                                },
                                                {
                                                    "description": "Metadata key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MetadataKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "key"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "dd381b03-db68-4eda-b29d-05bc1cb7e51a",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "account",
                                                        ":address",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "address"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"metadataEntries\": [\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"sourceAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"sourceAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  }\n ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "5d5d7676-6d33-4bbe-93f2-95215b879d61",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "account",
                                                        ":address",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "address"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "2266c6c0-fbe7-43f5-ab0b-7e156db8bc81",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "account",
                                                        ":address",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "address"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "07087039-57fe-41ae-ada2-3aff3fd4669f",
                                    "name": "Get account metadata",
                                    "request": {
                                        "name": "Get account metadata",
                                        "description": {
                                            "content": "Returns the account metadata given an account id, a key, and a sender.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "account",
                                                ":address",
                                                "key",
                                                ":key",
                                                "sender",
                                                ":sourceAddress"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Account address.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/AddressBase32 not found in the OpenAPI spec"
                                                    },
                                                    "key": "address"
                                                },
                                                {
                                                    "description": "Metadata key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MetadataKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "key"
                                                },
                                                {
                                                    "description": "Account address.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/AddressBase32 not found in the OpenAPI spec"
                                                    },
                                                    "key": "sourceAddress"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "d8e55c4a-c740-416a-97ac-ffecf3068601",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "account",
                                                        ":address",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":sourceAddress"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "address"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "sourceAddress"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"id\": \"<string>\",\n \"metadataEntry\": {\n  \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"sourceAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n  \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n  \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n  \"metadataType\": \"<integer>\",\n  \"value\": \"<hex>\",\n  \"targetId\": \"0DC67FBE1CAD29E3\"\n }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "53b6db93-384c-4997-9b87-bf6073d7e56a",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "account",
                                                        ":address",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":sourceAddress"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "address"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "sourceAddress"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "1276fe38-c4d1-4054-bc39-5939ba7c1544",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "account",
                                                        ":address",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":sourceAddress"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "address"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "sourceAddress"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "dacbfbc4-34d2-4a9f-b665-12f8083190b5",
                    "name": "mosaic/{mosaic Id}",
                    "item": [
                        {
                            "id": "2115d708-70e2-41a3-9541-a36e694ea82a",
                            "name": "Get mosaic metadata",
                            "request": {
                                "name": "Get mosaic metadata",
                                "description": {
                                    "content": "Returns the mosaic metadata given a mosaic id.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "metadata",
                                        "mosaic",
                                        ":mosaicId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "description": "Select the number of entries to return.",
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                            "key": "id",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Sort responses in ascending or descending order based on the collection property set on the param ``orderBy``.\nIf the request does not specify ``orderBy``, REST returns the collection ordered by id.\n",
                                            "key": "order",
                                            "value": "desc"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "description": "Mosaic identifier.",
                                            "type": "any",
                                            "value": {
                                                "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                            },
                                            "key": "mosaicId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "0a443425-ffd0-4506-8016-97e2950477b4",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "mosaic",
                                                ":mosaicId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "mosaicId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"metadataEntries\": [\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"sourceAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"sourceAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  }\n ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "6fdce536-772c-4ca0-a424-a3ed393f975f",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "mosaic",
                                                ":mosaicId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "mosaicId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "b791b45c-646f-42eb-bde6-520d948ade94",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "mosaic",
                                                ":mosaicId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "mosaicId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "d54606e8-ebe5-4866-9d08-cec63500c667",
                            "name": "key/{key}",
                            "item": [
                                {
                                    "id": "67ff7d9a-288e-44a3-8a7f-bc1a848e5558",
                                    "name": "Get mosaic metadata",
                                    "request": {
                                        "name": "Get mosaic metadata",
                                        "description": {
                                            "content": "Returns the mosaic metadata given a mosaic id and a key.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "mosaic",
                                                ":mosaicId",
                                                "key",
                                                ":key"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Mosaic identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                                    },
                                                    "key": "mosaicId"
                                                },
                                                {
                                                    "description": "Metadata key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MetadataKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "key"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "ab6f4aa8-73ed-41c5-8b54-99d8443c4a55",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"metadataEntries\": [\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"sourceAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"sourceAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  }\n ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "35ac69ab-0af1-495a-abb6-12baf82fcd9d",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "58383176-028a-4f0d-ab61-b606997b894c",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "5a35ef52-7e5a-4d62-bf3d-be6a3d029484",
                                    "name": "Get mosaic metadata",
                                    "request": {
                                        "name": "Get mosaic metadata",
                                        "description": {
                                            "content": "Returns the mosaic metadata given a mosaic id, a key, and a sender.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "mosaic",
                                                ":mosaicId",
                                                "key",
                                                ":key",
                                                "sender",
                                                ":sourceAddress"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Mosaic identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                                    },
                                                    "key": "mosaicId"
                                                },
                                                {
                                                    "description": "Metadata key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MetadataKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "key"
                                                },
                                                {
                                                    "description": "Account address.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/AddressBase32 not found in the OpenAPI spec"
                                                    },
                                                    "key": "sourceAddress"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "161cb8a8-1260-4aff-a04f-300acd12a962",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":sourceAddress"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "sourceAddress"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"id\": \"<string>\",\n \"metadataEntry\": {\n  \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"sourceAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n  \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n  \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n  \"metadataType\": \"<integer>\",\n  \"value\": \"<hex>\",\n  \"targetId\": \"0DC67FBE1CAD29E3\"\n }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "e9b2385c-0f8f-4e04-bc25-f6e4c5ad4a4f",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":sourceAddress"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "sourceAddress"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "2aab116f-6da8-4073-b184-d1d0e16d9768",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":sourceAddress"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "sourceAddress"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "d175f9cb-b542-41bd-a1c0-1bc2349dc60e",
                    "name": "namespace/{namespace Id}",
                    "item": [
                        {
                            "id": "f045e685-7c45-4c09-b219-e1f0614016cb",
                            "name": "Get namespace metadata",
                            "request": {
                                "name": "Get namespace metadata",
                                "description": {
                                    "content": "Returns the namespace metadata given a namespace id.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "metadata",
                                        "namespace",
                                        ":namespaceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "description": "Select the number of entries to return.",
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                            "key": "id",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Sort responses in ascending or descending order based on the collection property set on the param ``orderBy``.\nIf the request does not specify ``orderBy``, REST returns the collection ordered by id.\n",
                                            "key": "order",
                                            "value": "desc"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "description": "Namespace identifier.",
                                            "type": "any",
                                            "value": {
                                                "value": "reference #/components/schemas/NamespaceId not found in the OpenAPI spec"
                                            },
                                            "key": "namespaceId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "439db655-75b3-43a6-b48f-5dc3737e6b2c",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "namespace",
                                                ":namespaceId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "namespaceId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"metadataEntries\": [\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"sourceAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"sourceAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  }\n ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "2ddf4bd7-2059-43a2-b4e8-fdbb9ac03711",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "namespace",
                                                ":namespaceId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "namespaceId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "50253424-0144-4bbb-a819-d820eba653aa",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "namespace",
                                                ":namespaceId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "order",
                                                    "value": "desc"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "namespaceId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "0694aed1-182a-4b8a-99c1-79a7b5b2aeab",
                            "name": "key/{key}",
                            "item": [
                                {
                                    "id": "00d27c75-42d9-45a6-a223-9645dfbb4262",
                                    "name": "Get namespace metadata",
                                    "request": {
                                        "name": "Get namespace metadata",
                                        "description": {
                                            "content": "Returns the namespace metadata given a namespace id and a key.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "namespace",
                                                ":namespaceId",
                                                "key",
                                                ":key"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Namespace identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/NamespaceId not found in the OpenAPI spec"
                                                    },
                                                    "key": "namespaceId"
                                                },
                                                {
                                                    "description": "Metadata key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MetadataKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "key"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "cdd56138-cdb1-4738-8f3b-82c636794ddc",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "namespace",
                                                        ":namespaceId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "namespaceId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"metadataEntries\": [\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"sourceAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"sourceAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  }\n ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "a9154c56-3dd7-4d29-a4ba-e8a689749089",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "namespace",
                                                        ":namespaceId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "namespaceId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "038a7529-e891-4b0d-8565-7337c1fde5b2",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "namespace",
                                                        ":namespaceId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "namespaceId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "46b56d72-566d-4cd9-a7c5-29f2e5d3e874",
                                    "name": "Get namespace metadata",
                                    "request": {
                                        "name": "Get namespace metadata",
                                        "description": {
                                            "content": "Returns the namespace metadata given a namespace id, a key, and a sender.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "namespace",
                                                ":namespaceId",
                                                "key",
                                                ":key",
                                                "sender",
                                                ":sourceAddress"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Namespace identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/NamespaceId not found in the OpenAPI spec"
                                                    },
                                                    "key": "namespaceId"
                                                },
                                                {
                                                    "description": "Metadata key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MetadataKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "key"
                                                },
                                                {
                                                    "description": "Account address.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/AddressBase32 not found in the OpenAPI spec"
                                                    },
                                                    "key": "sourceAddress"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "1f6e2906-dc63-4290-bcd8-9f0ae99bd12a",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "namespace",
                                                        ":namespaceId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":sourceAddress"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "namespaceId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "sourceAddress"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"id\": \"<string>\",\n \"metadataEntry\": {\n  \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"sourceAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n  \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n  \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n  \"metadataType\": \"<integer>\",\n  \"value\": \"<hex>\",\n  \"targetId\": \"0DC67FBE1CAD29E3\"\n }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "cc8d660c-3072-4a7e-b5f7-ad41f983d36e",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "namespace",
                                                        ":namespaceId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":sourceAddress"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "namespaceId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "sourceAddress"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "c25afbb6-2b1a-4f52-80e9-44f34e39e0db",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "namespace",
                                                        ":namespaceId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":sourceAddress"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "namespaceId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "sourceAddress"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "fa5b7710-5d60-41f8-8267-a9d782040245",
            "name": "mosaics",
            "item": [
                {
                    "id": "a018558a-0d24-4bda-b08a-9685bd22a9bf",
                    "name": "Get mosaics",
                    "request": {
                        "name": "Get mosaics",
                        "description": {
                            "content": "Gets an array of mosaics.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "mosaics"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "description": "Filter by owner address.",
                                    "key": "ownerAddress",
                                    "value": "<string>"
                                },
                                {
                                    "description": "Select the number of entries to return.",
                                    "key": "pageSize",
                                    "value": "10"
                                },
                                {
                                    "description": "Filter by page number.",
                                    "key": "pageNumber",
                                    "value": "1"
                                },
                                {
                                    "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                    "key": "offset",
                                    "value": "<string>"
                                },
                                {
                                    "description": "Sort responses in ascending or descending order based on the collection property set on the param ``orderBy``.\nIf the request does not specify ``orderBy``, REST returns the collection ordered by id.\n",
                                    "key": "order",
                                    "value": "desc"
                                }
                            ],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "e4456326-2602-4621-9d4c-94b3097eb43d",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "ownerAddress",
                                            "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "key": "pageNumber",
                                            "value": "1"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "order",
                                            "value": "desc"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"mosaic\": {\n    \"id\": \"0DC67FBE1CAD29E3\",\n    \"supply\": \"123456\",\n    \"startHeight\": 1,\n    \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"revision\": 2222212828,\n    \"flags\": \"<integer>\",\n    \"divisibility\": \"<integer>\",\n    \"duration\": 200\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"mosaic\": {\n    \"id\": \"0DC67FBE1CAD29E3\",\n    \"supply\": \"123456\",\n    \"startHeight\": 1,\n    \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n    \"revision\": 2222212828,\n    \"flags\": \"<integer>\",\n    \"divisibility\": \"<integer>\",\n    \"duration\": 200\n   }\n  }\n ],\n \"pagination\": {\n  \"pageNumber\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"totalEntries\": \"<integer>\",\n  \"totalPages\": \"<integer>\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d85a5e65-2460-4716-a6ef-d9bb7398f28e",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "ownerAddress",
                                            "value": "SAAA244WMCB2JXGNQTQHQOS45TGBFF4V2MJBVOQ"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "key": "pageNumber",
                                            "value": "1"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "order",
                                            "value": "desc"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "47f3c79b-cd07-4155-bf59-d96f9a863a0c",
                    "name": "Get mosaics information for an array of mosaics",
                    "request": {
                        "name": "Get mosaics information for an array of mosaics",
                        "description": {
                            "content": "Gets an array of mosaic definition.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "mosaics"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"mosaicIds\": [\n        \"<hex>\",\n        \"<hex>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "7799fc37-5238-4255-a6a6-7dec65e53aa6",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"id\": \"<string>\",\n  \"mosaic\": {\n   \"id\": \"0DC67FBE1CAD29E3\",\n   \"supply\": \"123456\",\n   \"startHeight\": 1,\n   \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n   \"revision\": 2222212828,\n   \"flags\": \"<integer>\",\n   \"divisibility\": \"<integer>\",\n   \"duration\": 200\n  }\n },\n {\n  \"id\": \"<string>\",\n  \"mosaic\": {\n   \"id\": \"0DC67FBE1CAD29E3\",\n   \"supply\": \"123456\",\n   \"startHeight\": 1,\n   \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n   \"revision\": 2222212828,\n   \"flags\": \"<integer>\",\n   \"divisibility\": \"<integer>\",\n   \"duration\": 200\n  }\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e7e468e1-ad08-4f3d-8e05-1a42968635ec",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "623e31a4-50ce-42f0-9cae-15c977cc8fd6",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "1f42060b-2c5f-4d1c-8846-ebfcccd9c2b7",
                    "name": "Get mosaic information",
                    "request": {
                        "name": "Get mosaic information",
                        "description": {
                            "content": "Gets the mosaic definition for a given mosaic identifier.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "mosaics",
                                ":mosaicId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Mosaic identifier.",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                    },
                                    "key": "mosaicId"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "91f823fd-e9e4-4645-80fa-5a6158428480",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaics",
                                        ":mosaicId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "mosaicId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"id\": \"<string>\",\n \"mosaic\": {\n  \"id\": \"0DC67FBE1CAD29E3\",\n  \"supply\": \"123456\",\n  \"startHeight\": 1,\n  \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n  \"revision\": 2222212828,\n  \"flags\": \"<integer>\",\n  \"divisibility\": \"<integer>\",\n  \"duration\": 200\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bfdbf611-1ca2-4b85-990a-a091866b607c",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaics",
                                        ":mosaicId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "mosaicId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c41be54d-2c39-41f7-bed6-2e323a766a41",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaics",
                                        ":mosaicId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "mosaicId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "e444f063-0702-412d-836d-aaa07ae69808",
            "name": "namespace",
            "item": [
                {
                    "id": "64bd7df3-39fc-4971-8d82-3f2afd139666",
                    "name": "Get namespace information",
                    "request": {
                        "name": "Get namespace information",
                        "description": {
                            "content": "Gets the namespace for a given namespace identifier.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "namespace",
                                ":namespaceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Namespace identifier.",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/NamespaceId not found in the OpenAPI spec"
                                    },
                                    "key": "namespaceId"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "17ac9095-beb8-419b-8657-580fdf02cba7",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespace",
                                        ":namespaceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "namespaceId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"meta\": {\n  \"id\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"index\": \"<integer>\"\n },\n \"namespace\": {\n  \"registrationType\": 0,\n  \"depth\": 1,\n  \"level0\": \"85BBEA6CC462B244\",\n  \"alias\": {\n   \"type\": 0,\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n  },\n  \"parentId\": \"85BBEA6CC462B244\",\n  \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n  \"startHeight\": 1,\n  \"endHeight\": 1,\n  \"level1\": \"85BBEA6CC462B244\",\n  \"level2\": \"85BBEA6CC462B244\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "94ab52c5-1945-4e9e-9cd6-f9295028d9aa",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespace",
                                        ":namespaceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "namespaceId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "62f3ae28-fb24-475e-a5ed-6c2d23bd98bf",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespace",
                                        ":namespaceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "namespaceId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "8b282719-d015-4252-826d-af2cc3284cc5",
                    "name": "Get readable names for a set of namespaces",
                    "request": {
                        "name": "Get readable names for a set of namespaces",
                        "description": {
                            "content": "Returns friendly names for namespaces.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "namespace",
                                "names"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"namespaceIds\": [\n        \"<hex>\",\n        \"<hex>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "e1217a51-34ce-4f53-aaf7-dccf66fb5fd0",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespace",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"id\": \"85BBEA6CC462B244\",\n  \"name\": \"cat\",\n  \"parentId\": \"85BBEA6CC462B244\"\n },\n {\n  \"id\": \"85BBEA6CC462B244\",\n  \"name\": \"cat\",\n  \"parentId\": \"85BBEA6CC462B244\"\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "34c1d268-452c-4071-bc5f-eb8286abb1fd",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespace",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d8bbdd0d-c3d2-4702-844c-4de0fb39538d",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespace",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "9338e692-458b-485c-b0a1-a29bb1778cb6",
            "name": "Get readable names for a set of mosaics",
            "request": {
                "name": "Get readable names for a set of mosaics",
                "description": {
                    "content": "Returns friendly names for mosaics.",
                    "type": "text/plain"
                },
                "url": {
                    "path": [
                        "mosaic",
                        "names"
                    ],
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                },
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "method": "POST",
                "auth": {
                    "type": "noauth"
                },
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"mosaicIds\": [\n        \"<hex>\",\n        \"<hex>\"\n    ]\n}"
                }
            },
            "response": [
                {
                    "id": "04711b94-900b-443e-83ba-1994c820f60c",
                    "name": "success",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "mosaic",
                                "names"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "POST",
                        "body": {}
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "body": "{\n \"mosaicNames\": [\n  {\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"names\": [\n    \"symbol.xym\"\n   ]\n  },\n  {\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"names\": [\n    \"symbol.xym\"\n   ]\n  }\n ]\n}",
                    "cookie": [],
                    "_postman_previewlanguage": "json"
                },
                {
                    "id": "5a48baef-1f06-4a8e-b770-423abb1e7848",
                    "name": "InvalidContent",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "mosaic",
                                "names"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "POST",
                        "body": {}
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                    "cookie": [],
                    "_postman_previewlanguage": "json"
                },
                {
                    "id": "8c3cede7-cc53-461e-9e10-c665b965e8b2",
                    "name": "InvalidArgument",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "mosaic",
                                "names"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "POST",
                        "body": {}
                    },
                    "status": "Conflict",
                    "code": 409,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                    "cookie": [],
                    "_postman_previewlanguage": "json"
                }
            ],
            "event": []
        },
        {
            "id": "6cd414c9-da9c-43b5-ac78-dc9f645b4a3f",
            "name": "block/{height}",
            "item": [
                {
                    "id": "d63c1364-8ab0-4008-8114-64e8e0fb4ff8",
                    "name": "Get receipts from a block",
                    "request": {
                        "name": "Get receipts from a block",
                        "description": {
                            "content": "Returns the receipts linked to a block.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "block",
                                ":height",
                                "receipts"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Block height.",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/Height not found in the OpenAPI spec"
                                    },
                                    "key": "height"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "d81ac47c-d0c6-4765-be42-58d303ba0462",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "receipts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"transactionStatements\": [\n  {\n   \"statement\": {\n    \"height\": 1,\n    \"source\": {\n     \"primaryId\": 2222212828,\n     \"secondaryId\": 2222212828\n    },\n    \"receipts\": [\n     {\n      \"version\": \"<integer>\",\n      \"type\": \"<integer>\",\n      \"mosaicId\": \"0DC67FBE1CAD29E3\",\n      \"amount\": \"123456\",\n      \"senderAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n      \"recipientAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     },\n     {\n      \"version\": \"<integer>\",\n      \"type\": \"<integer>\",\n      \"mosaicId\": \"0DC67FBE1CAD29E3\",\n      \"amount\": \"123456\",\n      \"senderAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n      \"recipientAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     }\n    ]\n   }\n  },\n  {\n   \"statement\": {\n    \"height\": 1,\n    \"source\": {\n     \"primaryId\": 2222212828,\n     \"secondaryId\": 2222212828\n    },\n    \"receipts\": [\n     {\n      \"version\": \"<integer>\",\n      \"type\": \"<integer>\",\n      \"mosaicId\": \"0DC67FBE1CAD29E3\",\n      \"amount\": \"123456\",\n      \"senderAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n      \"recipientAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     },\n     {\n      \"version\": \"<integer>\",\n      \"type\": \"<integer>\",\n      \"mosaicId\": \"0DC67FBE1CAD29E3\",\n      \"amount\": \"123456\",\n      \"senderAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n      \"recipientAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     }\n    ]\n   }\n  }\n ],\n \"addressResolutionStatements\": [\n  {\n   \"statement\": {\n    \"height\": 1,\n    \"unresolved\": \"85BBEA6CC462B244\",\n    \"resolutionEntries\": [\n     {\n      \"source\": {\n       \"primaryId\": 2222212828,\n       \"secondaryId\": 2222212828\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     },\n     {\n      \"source\": {\n       \"primaryId\": 2222212828,\n       \"secondaryId\": 2222212828\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     }\n    ]\n   }\n  },\n  {\n   \"statement\": {\n    \"height\": 1,\n    \"unresolved\": \"85BBEA6CC462B244\",\n    \"resolutionEntries\": [\n     {\n      \"source\": {\n       \"primaryId\": 2222212828,\n       \"secondaryId\": 2222212828\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     },\n     {\n      \"source\": {\n       \"primaryId\": 2222212828,\n       \"secondaryId\": 2222212828\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     }\n    ]\n   }\n  }\n ],\n \"mosaicResolutionStatements\": [\n  {\n   \"statement\": {\n    \"height\": 1,\n    \"unresolved\": \"85BBEA6CC462B244\",\n    \"resolutionEntries\": [\n     {\n      \"source\": {\n       \"primaryId\": 2222212828,\n       \"secondaryId\": 2222212828\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     },\n     {\n      \"source\": {\n       \"primaryId\": 2222212828,\n       \"secondaryId\": 2222212828\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     }\n    ]\n   }\n  },\n  {\n   \"statement\": {\n    \"height\": 1,\n    \"unresolved\": \"85BBEA6CC462B244\",\n    \"resolutionEntries\": [\n     {\n      \"source\": {\n       \"primaryId\": 2222212828,\n       \"secondaryId\": 2222212828\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     },\n     {\n      \"source\": {\n       \"primaryId\": 2222212828,\n       \"secondaryId\": 2222212828\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\"\n     }\n    ]\n   }\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "167bede5-cb83-4e41-9ca1-47a0c665730d",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "receipts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3467bba9-adbf-4e16-a646-d3d94c0c2e10",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "receipts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "d0f9d4f7-222e-4111-9530-cf0927694fa0",
                    "name": "Get the merkle path for a given a receipt statement hash and block",
                    "request": {
                        "name": "Get the merkle path for a given a receipt statement hash and block",
                        "description": {
                            "content": "Returns the merkle path for a receipt statement or resolution linked to a block.\nThe merkle path is the minimum number of nodes needed to calculate the merkle root.\n\nSteps to calculate the merkle root:\n1. proofHash = hash (leaf).\n2. Concatenate proofHash with the first unprocessed item from the merklePath list as follows:\n* a) If item.position == left -> proofHash = sha_256(item.hash + proofHash).\n* b) If item.position == right -> proofHash = sha_256(proofHash+ item.hash).\n3. Repeat 2. for every item in the merklePath list.\n4. Compare if the calculated proofHash equals the one recorded in the\nblock header (block.receiptsHash) to verify if the statement was linked with the block.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "block",
                                ":height",
                                "receipt",
                                ":hash",
                                "merkle"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Block height.",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/Height not found in the OpenAPI spec"
                                    },
                                    "key": "height"
                                },
                                {
                                    "description": "Receipt hash.",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/Hash256 not found in the OpenAPI spec"
                                    },
                                    "key": "hash"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "8acbdaec-e1ee-41bb-b295-f8f7493de5e2",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "receipt",
                                        ":hash",
                                        "merkle"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        },
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"merklePath\": [\n  {\n   \"position\": \"<string>\",\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n  },\n  {\n   \"position\": \"<string>\",\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a8c70192-2d4f-4d96-a909-f0794df1ed79",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "receipt",
                                        ":hash",
                                        "merkle"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        },
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4c0b0907-7d08-4ca9-a90f-f1dcdbb939ce",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "receipt",
                                        ":hash",
                                        "merkle"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        },
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "11498dfb-045e-4d17-ba8c-c2cfcb2d966d",
            "name": "restrictions",
            "item": [
                {
                    "id": "49f6403c-dc7f-4fbf-8306-770296d69c97",
                    "name": "account",
                    "item": [
                        {
                            "id": "6d870039-43ed-40c9-9e8c-dd85349cdf0d",
                            "name": "Get account restrictions for given array of addresses",
                            "request": {
                                "name": "Get account restrictions for given array of addresses",
                                "description": {
                                    "content": "Returns the account restrictions for a given array of addresses.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "restrictions",
                                        "account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "noauth"
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"publicKeys\": [\n        \"<hex>\",\n        \"<hex>\"\n    ],\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                }
                            },
                            "response": [
                                {
                                    "id": "753b9053-4a1f-45d7-ac0f-6a02cf278569",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "[\n {\n  \"accountRestrictions\": {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n   \"restrictions\": [\n    {\n     \"restrictionFlags\": 1,\n     \"values\": [\n      \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\",\n      \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\"\n     ]\n    },\n    {\n     \"restrictionFlags\": 1,\n     \"values\": [\n      \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\",\n      \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\"\n     ]\n    }\n   ]\n  }\n },\n {\n  \"accountRestrictions\": {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n   \"restrictions\": [\n    {\n     \"restrictionFlags\": 1,\n     \"values\": [\n      \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\",\n      \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\"\n     ]\n    },\n    {\n     \"restrictionFlags\": 1,\n     \"values\": [\n      \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\",\n      \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\"\n     ]\n    }\n   ]\n  }\n }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "2797e296-8780-4ece-beff-e1fea428d1d7",
                                    "name": "InvalidContent",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "9b3aedb3-6b6b-4722-8eb6-c69ef1f3bf54",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "f2a3587b-1cbf-4bd3-bc5b-c28e1a550f18",
                            "name": "Get the account restrictions",
                            "request": {
                                "name": "Get the account restrictions",
                                "description": {
                                    "content": "Returns the account restrictions for a given account.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "restrictions",
                                        "account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "description": "Account public key or address enconded using a 32-character set.",
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "accountId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "1b248b0c-9af1-45d8-840e-428f01f13377",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"accountRestrictions\": {\n  \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n  \"restrictions\": [\n   {\n    \"restrictionFlags\": 1,\n    \"values\": [\n     \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\",\n     \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\"\n    ]\n   },\n   {\n    \"restrictionFlags\": 1,\n    \"values\": [\n     \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\",\n     \"90340017CFF3DD2BCF3B2670CDCB9FC8C75754E2325F297C\"\n    ]\n   }\n  ]\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "cf2c5cd3-9175-4837-a9ff-a3b977ddde24",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "6f662f87-6401-4a26-9c15-c99d0d3d27fa",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "126a16ed-22bf-473c-af12-57c9eb25c530",
                    "name": "mosaic",
                    "item": [
                        {
                            "id": "f4d29c5f-5c7f-44eb-bc40-f5f96004ceb4",
                            "name": "Get mosaic global restrictions for an array of mosaics.",
                            "request": {
                                "name": "Get mosaic global restrictions for an array of mosaics.",
                                "description": {
                                    "content": "Get mosaic global restrictions.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "restrictions",
                                        "mosaic"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "noauth"
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"mosaicIds\": [\n        \"<hex>\",\n        \"<hex>\"\n    ]\n}"
                                }
                            },
                            "response": [
                                {
                                    "id": "112f5ca0-39cb-4d79-b471-d61ed93c6758",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "[\n {\n  \"mosaicRestrictionEntry\": {\n   \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"entryType\": \"<integer>\",\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"restrictions\": [\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"restriction\": {\n      \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n      \"restrictionValue\": 1000,\n      \"restrictionType\": \"<integer>\"\n     }\n    },\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"restriction\": {\n      \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n      \"restrictionValue\": 1000,\n      \"restrictionType\": \"<integer>\"\n     }\n    }\n   ]\n  }\n },\n {\n  \"mosaicRestrictionEntry\": {\n   \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"entryType\": \"<integer>\",\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"restrictions\": [\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"restriction\": {\n      \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n      \"restrictionValue\": 1000,\n      \"restrictionType\": \"<integer>\"\n     }\n    },\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"restriction\": {\n      \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n      \"restrictionValue\": 1000,\n      \"restrictionType\": \"<integer>\"\n     }\n    }\n   ]\n  }\n }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "6e0cfe0f-c572-4b3b-9401-93de624abb11",
                                    "name": "InvalidContent",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "93067911-9e46-46f4-a30b-2f9ee1eacba6",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "f9c4d849-bbc6-4e8b-89b9-8cb441d8769b",
                            "name": "{mosaic Id}",
                            "item": [
                                {
                                    "id": "c6cc1092-c962-4f12-abdb-b362ff4a2dc5",
                                    "name": "Get mosaic global restriction for a given mosaic identifier.",
                                    "request": {
                                        "name": "Get mosaic global restriction for a given mosaic identifier.",
                                        "description": {
                                            "content": "Get mosaic global restriction.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic",
                                                ":mosaicId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Mosaic identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                                    },
                                                    "key": "mosaicId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "32fdeade-7ab8-455a-9e4a-041be49591b6",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"mosaicRestrictionEntry\": {\n  \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"entryType\": \"<integer>\",\n  \"mosaicId\": \"0DC67FBE1CAD29E3\",\n  \"restrictions\": [\n   {\n    \"key\": \"0DC67FBE1CAD29E3\",\n    \"restriction\": {\n     \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n     \"restrictionValue\": 1000,\n     \"restrictionType\": \"<integer>\"\n    }\n   },\n   {\n    \"key\": \"0DC67FBE1CAD29E3\",\n    \"restriction\": {\n     \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n     \"restrictionValue\": 1000,\n     \"restrictionType\": \"<integer>\"\n    }\n   }\n  ]\n }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "59b66a6d-f831-4a97-a665-e39bd844e316",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "a3d3ae3e-bb44-43b6-823f-fd724b85e115",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "d8b715f4-5056-4448-b358-f59aed239bd1",
                                    "name": "Get mosaic address restrictions for a given mosaic and account identifiers array.",
                                    "request": {
                                        "name": "Get mosaic address restrictions for a given mosaic and account identifiers array.",
                                        "description": {
                                            "content": "Get mosaic address restrictions.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic",
                                                ":mosaicId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Mosaic identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                                    },
                                                    "key": "mosaicId"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "noauth"
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"publicKeys\": [\n        \"<hex>\",\n        \"<hex>\"\n    ],\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "1da2023c-4d99-4280-a33d-c3588e18940a",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "POST",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "[\n {\n  \"mosaicRestrictionEntry\": {\n   \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"entryType\": \"<integer>\",\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n   \"restrictions\": [\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"value\": \"<string>\"\n    },\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"value\": \"<string>\"\n    }\n   ]\n  }\n },\n {\n  \"mosaicRestrictionEntry\": {\n   \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"entryType\": \"<integer>\",\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n   \"restrictions\": [\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"value\": \"<string>\"\n    },\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"value\": \"<string>\"\n    }\n   ]\n  }\n }\n]",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "7f727409-5303-42c4-a071-27198b42593d",
                                            "name": "InvalidContent",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "POST",
                                                "body": {}
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "6b4e02bf-5e43-490d-9b3a-b527d67a4d69",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "POST",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "d6d3fd34-057f-40f6-95b2-c4edb7c610fb",
                                    "name": "Get mosaic address restrictions for a given mosaic and account address.",
                                    "request": {
                                        "name": "Get mosaic address restrictions for a given mosaic and account address.",
                                        "description": {
                                            "content": "Get mosaic address restriction.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic",
                                                ":mosaicId",
                                                "address",
                                                ":address"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Mosaic identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                                    },
                                                    "key": "mosaicId"
                                                },
                                                {
                                                    "description": "Account address.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/AddressBase32 not found in the OpenAPI spec"
                                                    },
                                                    "key": "address"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "ecbf200d-3fa5-472a-955e-4490cfc0a4b7",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "address",
                                                        ":address"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "address"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"mosaicRestrictionEntry\": {\n  \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"entryType\": \"<integer>\",\n  \"mosaicId\": \"0DC67FBE1CAD29E3\",\n  \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0\",\n  \"restrictions\": [\n   {\n    \"key\": \"0DC67FBE1CAD29E3\",\n    \"value\": \"<string>\"\n   },\n   {\n    \"key\": \"0DC67FBE1CAD29E3\",\n    \"value\": \"<string>\"\n   }\n  ]\n }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "089cba6b-337f-4b81-83b1-e264bdf6d9b4",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "address",
                                                        ":address"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "address"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "8c1ab8da-9fe5-45a3-9b82-b46e684f1255",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "address",
                                                        ":address"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "address"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        }
    ],
    "event": [],
    "variable": [
        {
            "id": "baseUrl",
            "type": "string",
            "value": "http://localhost:3000"
        }
    ],
    "info": {
        "_postman_id": "cc62447a-f85e-4262-a4d6-7517da1908b0",
        "name": "Catapult REST Endpoints",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "description": {
            "content": "OpenAPI Specification of catapult-rest 1.1.2",
            "type": "text/plain"
        }
    }
}