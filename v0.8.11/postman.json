{
    "item": [
        {
            "id": "1ab3db99-4946-4312-8fe0-f7d3f988e841",
            "name": "account",
            "item": [
                {
                    "id": "ef3ddff2-6b5c-4a3f-be64-4dc787842a47",
                    "name": "Get accounts information",
                    "request": {
                        "name": "Get accounts information",
                        "description": {
                            "content": "Returns the account information for an array of accounts.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "account"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"publicKeys\": [\n        \"<hex>\",\n        \"<hex>\"\n    ],\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "b89bb1d4-fad9-4b6c-83e9-47120849a318",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"account\": {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"addressHeight\": 1,\n   \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"publicKeyHeight\": 1,\n   \"accountType\": \"<integer>\",\n   \"supplementalAccountKeys\": [\n    {\n     \"keyType\": \"<integer>\",\n     \"key\": \"<string>\"\n    },\n    {\n     \"keyType\": \"<integer>\",\n     \"key\": \"<string>\"\n    }\n   ],\n   \"activityBuckets\": [\n    {\n     \"startHeight\": 1,\n     \"totalFeesPaid\": \"123456\",\n     \"beneficiaryCount\": \"<integer>\",\n     \"rawScore\": 0\n    },\n    {\n     \"startHeight\": 1,\n     \"totalFeesPaid\": \"123456\",\n     \"beneficiaryCount\": \"<integer>\",\n     \"rawScore\": 0\n    }\n   ],\n   \"mosaics\": [\n    {\n     \"id\": \"0DC67FBE1CAD29E3\",\n     \"amount\": \"123456\"\n    },\n    {\n     \"id\": \"0DC67FBE1CAD29E3\",\n     \"amount\": \"123456\"\n    }\n   ],\n   \"importance\": 0,\n   \"importanceHeight\": 1\n  }\n },\n {\n  \"account\": {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"addressHeight\": 1,\n   \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"publicKeyHeight\": 1,\n   \"accountType\": \"<integer>\",\n   \"supplementalAccountKeys\": [\n    {\n     \"keyType\": \"<integer>\",\n     \"key\": \"<string>\"\n    },\n    {\n     \"keyType\": \"<integer>\",\n     \"key\": \"<string>\"\n    }\n   ],\n   \"activityBuckets\": [\n    {\n     \"startHeight\": 1,\n     \"totalFeesPaid\": \"123456\",\n     \"beneficiaryCount\": \"<integer>\",\n     \"rawScore\": 0\n    },\n    {\n     \"startHeight\": 1,\n     \"totalFeesPaid\": \"123456\",\n     \"beneficiaryCount\": \"<integer>\",\n     \"rawScore\": 0\n    }\n   ],\n   \"mosaics\": [\n    {\n     \"id\": \"0DC67FBE1CAD29E3\",\n     \"amount\": \"123456\"\n    },\n    {\n     \"id\": \"0DC67FBE1CAD29E3\",\n     \"amount\": \"123456\"\n    }\n   ],\n   \"importance\": 0,\n   \"importanceHeight\": 1\n  }\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "387e149a-9ac5-42e7-9f00-f98949a2ef47",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c2f26d83-c7cc-4afe-a21d-14d3f51ee95c",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "6d7819f4-56c5-4b90-9886-6c3ee89f50ef",
                    "name": "{account Id}",
                    "item": [
                        {
                            "id": "db9a6e53-0895-4abc-9c39-d529188d2b15",
                            "name": "Get account information",
                            "request": {
                                "name": "Get account information",
                                "description": {
                                    "content": "Returns the account information.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "description": "Account public key or address enconded using a 32-character set.",
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "accountId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "57575942-ad31-4583-b7c9-53caa6dd9e9e",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"account\": {\n  \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n  \"addressHeight\": 1,\n  \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"publicKeyHeight\": 1,\n  \"accountType\": \"<integer>\",\n  \"supplementalAccountKeys\": [\n   {\n    \"keyType\": \"<integer>\",\n    \"key\": \"<string>\"\n   },\n   {\n    \"keyType\": \"<integer>\",\n    \"key\": \"<string>\"\n   }\n  ],\n  \"activityBuckets\": [\n   {\n    \"startHeight\": 1,\n    \"totalFeesPaid\": \"123456\",\n    \"beneficiaryCount\": \"<integer>\",\n    \"rawScore\": 0\n   },\n   {\n    \"startHeight\": 1,\n    \"totalFeesPaid\": \"123456\",\n    \"beneficiaryCount\": \"<integer>\",\n    \"rawScore\": 0\n   }\n  ],\n  \"mosaics\": [\n   {\n    \"id\": \"0DC67FBE1CAD29E3\",\n    \"amount\": \"123456\"\n   },\n   {\n    \"id\": \"0DC67FBE1CAD29E3\",\n    \"amount\": \"123456\"\n   }\n  ],\n  \"importance\": 0,\n  \"importanceHeight\": 1\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "06a8b7b5-a132-4b93-a9b5-0810b17fb0c0",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "bf891d37-9cc3-40e7-92fa-35b54047d085",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "0d3558d4-604c-4dc1-adcd-a62998bc3987",
                            "name": "transactions",
                            "item": [
                                {
                                    "id": "dc8b68e9-19a2-4264-bea6-52878e45e730",
                                    "name": "Get confirmed transactions",
                                    "request": {
                                        "name": "Get confirmed transactions",
                                        "description": {
                                            "content": "Gets an array of transactions for which an account is the sender or receiver.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "transactions"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "description": "Number of entries to return.",
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "description": "Ordering criteria:\n* -id - Descending order by id.\n* id - Ascending order by id.\n",
                                                    "key": "ordering",
                                                    "value": "-id"
                                                },
                                                {
                                                    "description": "Transaction type to filter by.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "description": "Transaction type to filter by.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                                    "key": "type",
                                                    "value": "<integer>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "description": "Account public key or address enconded using a 32-character set.",
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "225a1231-f5e8-47bc-afad-4ba82f8f0c2a",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "transactions"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "pageSize",
                                                            "value": "10"
                                                        },
                                                        {
                                                            "key": "id",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "ordering",
                                                            "value": "-id"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "[\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n },\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n }\n]",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "3cb2768d-41a4-45e8-9f2e-641989bf95df",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "transactions"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "pageSize",
                                                            "value": "10"
                                                        },
                                                        {
                                                            "key": "id",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "ordering",
                                                            "value": "-id"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "1a969bec-9174-44e8-813e-b09bd5ebeec5",
                                    "name": "Get incoming transactions",
                                    "request": {
                                        "name": "Get incoming transactions",
                                        "description": {
                                            "content": "Gets an array of incoming transactions. A transaction is said to be incoming with respect to an account\nif the account is the recipient of the transaction.\n",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "transactions",
                                                "incoming"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "description": "Number of entries to return.",
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "description": "Ordering criteria:\n* -id - Descending order by id.\n* id - Ascending order by id.\n",
                                                    "key": "ordering",
                                                    "value": "-id"
                                                },
                                                {
                                                    "description": "Transaction type to filter by.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "description": "Transaction type to filter by.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                                    "key": "type",
                                                    "value": "<integer>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "description": "Account public key or address enconded using a 32-character set.",
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "c5e9ab43-7b54-4906-ab02-c96c7973f5bc",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "transactions",
                                                        "incoming"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "pageSize",
                                                            "value": "10"
                                                        },
                                                        {
                                                            "key": "id",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "ordering",
                                                            "value": "-id"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "[\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n },\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n }\n]",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "a177205a-5bd4-439e-a873-bd64aa76d9fb",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "transactions",
                                                        "incoming"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "pageSize",
                                                            "value": "10"
                                                        },
                                                        {
                                                            "key": "id",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "ordering",
                                                            "value": "-id"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "038865f4-3cf3-45fc-99e0-a323c7e435b6",
                                    "name": "Get outgoing transactions",
                                    "request": {
                                        "name": "Get outgoing transactions",
                                        "description": {
                                            "content": "Gets an array of outgoing transactions. A transaction is said to be outgoing with respect to an account\nif the account is the sender of the transaction.\n",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "transactions",
                                                "outgoing"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "description": "Number of entries to return.",
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "description": "Ordering criteria:\n* -id - Descending order by id.\n* id - Ascending order by id.\n",
                                                    "key": "ordering",
                                                    "value": "-id"
                                                },
                                                {
                                                    "description": "Transaction type to filter by.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "description": "Transaction type to filter by.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                                    "key": "type",
                                                    "value": "<integer>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "description": "Account public key or address enconded using a 32-character set.",
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "b1671c66-0baa-4230-bed9-15b344fbcebe",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "transactions",
                                                        "outgoing"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "pageSize",
                                                            "value": "10"
                                                        },
                                                        {
                                                            "key": "id",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "ordering",
                                                            "value": "-id"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "[\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n },\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n }\n]",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "cef09362-0e9d-482f-81da-c5ca5d794a18",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "transactions",
                                                        "outgoing"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "pageSize",
                                                            "value": "10"
                                                        },
                                                        {
                                                            "key": "id",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "ordering",
                                                            "value": "-id"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "c71fd56d-b6e7-4afb-bc25-bd3619326c6d",
                                    "name": "Get unconfirmed transactions",
                                    "request": {
                                        "name": "Get unconfirmed transactions",
                                        "description": {
                                            "content": "Gets the array of transactions not included in a block where an account is the sender or receiver.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "transactions",
                                                "unconfirmed"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "description": "Number of entries to return.",
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "description": "Ordering criteria:\n* -id - Descending order by id.\n* id - Ascending order by id.\n",
                                                    "key": "ordering",
                                                    "value": "-id"
                                                },
                                                {
                                                    "description": "Transaction type to filter by.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "description": "Transaction type to filter by.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                                    "key": "type",
                                                    "value": "<integer>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "description": "Account public key or address enconded using a 32-character set.",
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "c4120841-6a41-4ba9-a6e7-964bc8c260b8",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "transactions",
                                                        "unconfirmed"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "pageSize",
                                                            "value": "10"
                                                        },
                                                        {
                                                            "key": "id",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "ordering",
                                                            "value": "-id"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "[\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n },\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n }\n]",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "c9f3526a-e1ed-4d1a-b3e6-94f976a26913",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "transactions",
                                                        "unconfirmed"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "pageSize",
                                                            "value": "10"
                                                        },
                                                        {
                                                            "key": "id",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "ordering",
                                                            "value": "-id"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "64c6c44f-8b3c-44ad-8f0b-ac9ef110e4ae",
                                    "name": "Get aggregate bonded transactions information",
                                    "request": {
                                        "name": "Get aggregate bonded transactions information",
                                        "description": {
                                            "content": "Gets an array of aggregate bonded transactions where the account is the sender, recipient, or requires to cosign the transaction.\n",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "transactions",
                                                "partial"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "description": "Number of entries to return.",
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "description": "Ordering criteria:\n* -id - Descending order by id.\n* id - Ascending order by id.\n",
                                                    "key": "ordering",
                                                    "value": "-id"
                                                },
                                                {
                                                    "description": "Transaction type to filter by.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "description": "Transaction type to filter by.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                                    "key": "type",
                                                    "value": "<integer>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "description": "Account public key or address enconded using a 32-character set.",
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "65e120c2-abf2-4f2e-ab2d-7111618e4a55",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "transactions",
                                                        "partial"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "pageSize",
                                                            "value": "10"
                                                        },
                                                        {
                                                            "key": "id",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "ordering",
                                                            "value": "-id"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "[\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n },\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n }\n]",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "17b0195f-f486-4941-8e90-36387bb7a2f0",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "transactions",
                                                        "partial"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "pageSize",
                                                            "value": "10"
                                                        },
                                                        {
                                                            "key": "id",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "ordering",
                                                            "value": "-id"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "d95163ae-f86a-457f-8789-b59ca8393c83",
                            "name": "Get mosaics created by an account",
                            "request": {
                                "name": "Get mosaics created by an account",
                                "description": {
                                    "content": "Gets an array of mosaics created for a given account address.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "account",
                                        ":accountId",
                                        "mosaics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "description": "Account public key or address enconded using a 32-character set.",
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "accountId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "2d068fcb-020a-487f-ada3-2388fc63c5db",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "mosaics"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"mosaics\": [\n  {\n   \"id\": \"0DC67FBE1CAD29E3\",\n   \"supply\": \"123456\",\n   \"startHeight\": 1,\n   \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"revision\": 1,\n   \"flags\": \"<integer>\",\n   \"divisibility\": \"<integer>\",\n   \"duration\": 200\n  },\n  {\n   \"id\": \"0DC67FBE1CAD29E3\",\n   \"supply\": \"123456\",\n   \"startHeight\": 1,\n   \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"revision\": 1,\n   \"flags\": \"<integer>\",\n   \"divisibility\": \"<integer>\",\n   \"duration\": 200\n  }\n ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "4c830b7b-d842-4e20-b8ff-ea1f68d4f704",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "mosaics"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "30015c0d-5270-4ab3-8ff0-7cac29d6ea03",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "mosaics"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "26e5d7b9-3407-4fa3-a91d-41640b088849",
                            "name": "multisig",
                            "item": [
                                {
                                    "id": "d8292610-1dd3-4337-8e40-0fcd454b086e",
                                    "name": "Get multisig account information",
                                    "request": {
                                        "name": "Get multisig account information",
                                        "description": {
                                            "content": "Returns the multisig account information.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "multisig"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Account public key or address enconded using a 32-character set.",
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "896c59df-03bf-4941-a03b-e8274c610015",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "multisig"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"multisig\": {\n  \"accountPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"accountAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n  \"minApproval\": 2,\n  \"minRemoval\": 1,\n  \"cosignatoryPublicKeys\": [\n   \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\"\n  ],\n  \"multisigPublicKeys\": [\n   \"565059F55E68F904214E8BE1D610B5BBEA4CE46CC13D246D45BC1DAE5D32A0D2\"\n  ]\n }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "b08efcad-f1a5-4946-a84a-5474303a031d",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "multisig"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "156272ce-5b0a-439d-ac83-51c4f36ff6ac",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "multisig"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "6fee0bd8-4f71-47d4-a528-3b4a0948532b",
                                    "name": "Get multisig account graph information",
                                    "request": {
                                        "name": "Get multisig account graph information",
                                        "description": {
                                            "content": "Returns the multisig account graph.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "multisig",
                                                "graph"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Account public key or address enconded using a 32-character set.",
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "0ebd72cc-deff-4e66-84b8-ae8d2f162d13",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "multisig",
                                                        "graph"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "[\n {\n  \"level\": 0,\n  \"multisigEntries\": [\n   {\n    \"multisig\": {\n     \"accountPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n     \"accountAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n     \"minApproval\": 2,\n     \"minRemoval\": 1,\n     \"cosignatoryPublicKeys\": [\n      \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n      \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\"\n     ],\n     \"multisigPublicKeys\": [\n      \"565059F55E68F904214E8BE1D610B5BBEA4CE46CC13D246D45BC1DAE5D32A0D2\"\n     ]\n    }\n   },\n   {\n    \"multisig\": {\n     \"accountPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n     \"accountAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n     \"minApproval\": 2,\n     \"minRemoval\": 1,\n     \"cosignatoryPublicKeys\": [\n      \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n      \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\"\n     ],\n     \"multisigPublicKeys\": [\n      \"565059F55E68F904214E8BE1D610B5BBEA4CE46CC13D246D45BC1DAE5D32A0D2\"\n     ]\n    }\n   }\n  ]\n },\n {\n  \"level\": 0,\n  \"multisigEntries\": [\n   {\n    \"multisig\": {\n     \"accountPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n     \"accountAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n     \"minApproval\": 2,\n     \"minRemoval\": 1,\n     \"cosignatoryPublicKeys\": [\n      \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n      \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\"\n     ],\n     \"multisigPublicKeys\": [\n      \"565059F55E68F904214E8BE1D610B5BBEA4CE46CC13D246D45BC1DAE5D32A0D2\"\n     ]\n    }\n   },\n   {\n    \"multisig\": {\n     \"accountPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n     \"accountAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n     \"minApproval\": 2,\n     \"minRemoval\": 1,\n     \"cosignatoryPublicKeys\": [\n      \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n      \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\"\n     ],\n     \"multisigPublicKeys\": [\n      \"565059F55E68F904214E8BE1D610B5BBEA4CE46CC13D246D45BC1DAE5D32A0D2\"\n     ]\n    }\n   }\n  ]\n }\n]",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "928b7b19-91dd-4346-9ba0-1474bca48d50",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "multisig",
                                                        "graph"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "8101d7ab-ea3f-4aa6-b944-2ad85ce1a38e",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "multisig",
                                                        "graph"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "faf74f5f-2be6-4329-a4b8-2e64bed0c9bf",
                            "name": "Get namespaces created by an account",
                            "request": {
                                "name": "Get namespaces created by an account",
                                "description": {
                                    "content": "Gets an array of namespaces for a given account address.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "account",
                                        ":accountId",
                                        "namespaces"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "description": "Number of entries to return.",
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                            "key": "id",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "description": "Account public key or address enconded using a 32-character set.",
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "accountId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "00d01afe-8e61-453c-b444-edb7781ca4b9",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "namespaces"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"namespaces\": [\n  {\n   \"meta\": {\n    \"id\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"index\": \"<integer>\"\n   },\n   \"namespace\": {\n    \"registrationType\": 0,\n    \"depth\": 1,\n    \"level0\": \"85BBEA6CC462B244\",\n    \"alias\": {\n     \"type\": 0,\n     \"mosaicId\": \"0DC67FBE1CAD29E3\",\n     \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n    },\n    \"parentId\": \"85BBEA6CC462B244\",\n    \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n    \"startHeight\": 1,\n    \"endHeight\": 1,\n    \"level1\": \"85BBEA6CC462B244\",\n    \"level2\": \"85BBEA6CC462B244\"\n   }\n  },\n  {\n   \"meta\": {\n    \"id\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"index\": \"<integer>\"\n   },\n   \"namespace\": {\n    \"registrationType\": 0,\n    \"depth\": 1,\n    \"level0\": \"85BBEA6CC462B244\",\n    \"alias\": {\n     \"type\": 0,\n     \"mosaicId\": \"0DC67FBE1CAD29E3\",\n     \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n    },\n    \"parentId\": \"85BBEA6CC462B244\",\n    \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n    \"startHeight\": 1,\n    \"endHeight\": 1,\n    \"level1\": \"85BBEA6CC462B244\",\n    \"level2\": \"85BBEA6CC462B244\"\n   }\n  }\n ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "ac373ffb-72d9-45b8-ac8f-c6c9bcefb3c6",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "namespaces"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "d0bdd534-3080-46dd-aadf-4274b4a6794f",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "namespaces"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "6cb2740a-485b-4956-b3e4-4816d9e20f3b",
                    "name": "Get mosaics created for given array of addresses",
                    "request": {
                        "name": "Get mosaics created for given array of addresses",
                        "description": {
                            "content": "Gets mosaics created for a given array of addresses.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "account",
                                "mosaics"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"publicKeys\": [\n        \"<hex>\",\n        \"<hex>\"\n    ],\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "e4c4c4cf-20b7-407a-ac93-a318e9e145d7",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "mosaics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"mosaics\": [\n  {\n   \"id\": \"0DC67FBE1CAD29E3\",\n   \"supply\": \"123456\",\n   \"startHeight\": 1,\n   \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"revision\": 1,\n   \"flags\": \"<integer>\",\n   \"divisibility\": \"<integer>\",\n   \"duration\": 200\n  },\n  {\n   \"id\": \"0DC67FBE1CAD29E3\",\n   \"supply\": \"123456\",\n   \"startHeight\": 1,\n   \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"revision\": 1,\n   \"flags\": \"<integer>\",\n   \"divisibility\": \"<integer>\",\n   \"duration\": 200\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "37612756-0ca0-4098-9775-8eb7097f9a06",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "mosaics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "97eb5c84-2ab2-4612-915a-7443c44ae7f8",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "mosaics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "5c10ccda-8452-464f-b686-a6cca138efdc",
                    "name": "Get namespaces for given array of addresses",
                    "request": {
                        "name": "Get namespaces for given array of addresses",
                        "description": {
                            "content": "Gets namespaces for a given array of addresses.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "account",
                                "namespaces"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"publicKeys\": [\n        \"<hex>\",\n        \"<hex>\"\n    ],\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "6e0192f2-8ebf-4b04-8cc8-81d3c7b3724f",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "namespaces"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"namespaces\": [\n  {\n   \"meta\": {\n    \"id\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"index\": \"<integer>\"\n   },\n   \"namespace\": {\n    \"registrationType\": 0,\n    \"depth\": 1,\n    \"level0\": \"85BBEA6CC462B244\",\n    \"alias\": {\n     \"type\": 0,\n     \"mosaicId\": \"0DC67FBE1CAD29E3\",\n     \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n    },\n    \"parentId\": \"85BBEA6CC462B244\",\n    \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n    \"startHeight\": 1,\n    \"endHeight\": 1,\n    \"level1\": \"85BBEA6CC462B244\",\n    \"level2\": \"85BBEA6CC462B244\"\n   }\n  },\n  {\n   \"meta\": {\n    \"id\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"index\": \"<integer>\"\n   },\n   \"namespace\": {\n    \"registrationType\": 0,\n    \"depth\": 1,\n    \"level0\": \"85BBEA6CC462B244\",\n    \"alias\": {\n     \"type\": 0,\n     \"mosaicId\": \"0DC67FBE1CAD29E3\",\n     \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n    },\n    \"parentId\": \"85BBEA6CC462B244\",\n    \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n    \"startHeight\": 1,\n    \"endHeight\": 1,\n    \"level1\": \"85BBEA6CC462B244\",\n    \"level2\": \"85BBEA6CC462B244\"\n   }\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b47fc953-ed2c-447f-ad2a-fbb25a8ec476",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "namespaces"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "01173b53-cc0c-47ab-91e4-e4b8738b3d53",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "namespaces"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "a3abd6df-7c45-4c06-a972-eea89699a1a2",
                    "name": "Get readable names for a set of accountIds",
                    "request": {
                        "name": "Get readable names for a set of accountIds",
                        "description": {
                            "content": "Returns friendly names for accounts.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "account",
                                "names"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"publicKeys\": [\n        \"<hex>\",\n        \"<hex>\"\n    ],\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "10c777b3-3db2-449f-9b8a-645a5282792c",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"accountNames\": [\n  {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"names\": [\n    \"alias1\",\n    \"alias2\"\n   ]\n  },\n  {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"names\": [\n    \"alias1\",\n    \"alias2\"\n   ]\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "678438c4-36eb-4060-aeeb-256d16036a4a",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "937c0fcd-8998-4749-987f-bff5971a729c",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "992573c7-511b-417d-a831-5c926e4a0293",
            "name": "block/{height}",
            "item": [
                {
                    "id": "361f8d16-38a7-4459-81cd-fa5d548c8faa",
                    "name": "Get block information",
                    "request": {
                        "name": "Get block information",
                        "description": {
                            "content": "Gets a block from the chain that has the given height.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "block",
                                ":height"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Block height.\n",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/Height not found in the OpenAPI spec"
                                    },
                                    "key": "height"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "62ca3667-aeee-47c9-800c-5a8fc61d9622",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"meta\": {\n  \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"totalFee\": \"123456\",\n  \"generationHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"stateHashSubCacheMerkleRoots\": [\n   \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n  ],\n  \"numTransactions\": 0,\n  \"numStatements\": 1\n },\n \"block\": {\n  \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n  \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"version\": \"<integer>\",\n  \"network\": 144,\n  \"type\": \"<integer>\",\n  \"height\": 1,\n  \"timestamp\": 108303181802,\n  \"difficulty\": 100000000000000,\n  \"proofGamma\": \"8D49594A96C31EC6C64305FB2CCB47AA7A4AC0A4F614442BB3684D2BF41F274E\",\n  \"proofVerificationHash\": \"82FB583BFE3EE78805784D078F2547AE\",\n  \"proofScalar\": \"480175C83739B22C53EAECAA7E7F3B245F1DFAFA6B3AE5C1D0129502FCBAAD0C\",\n  \"previousBlockHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"transactionsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"receiptsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"stateHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"beneficiaryPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"feeMultiplier\": 0\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "75b53a32-da63-4478-aacf-ba35d67724fc",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5299afc2-ce3f-4490-b0b2-ee941b8ff4f8",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "724e08c8-cdd5-4925-a5fc-7b040059ba1f",
                    "name": "Get transactions from a block",
                    "request": {
                        "name": "Get transactions from a block",
                        "description": {
                            "content": "Returns an array of transactions included in a block for a given block height.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "block",
                                ":height",
                                "transactions"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "description": "Number of entries to return.",
                                    "key": "pageSize",
                                    "value": "10"
                                },
                                {
                                    "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                    "key": "id",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "description": "Block height.\n",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/Height not found in the OpenAPI spec"
                                    },
                                    "key": "height"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "458054b2-ce8b-4c35-87d7-ab7268b44b5b",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "transactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "key": "id",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n },\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b708e8b6-6a45-438c-9a8e-b64b95f41ac8",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "transactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "key": "id",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9ad6f098-7483-4482-b705-fc2932599392",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "transactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "key": "id",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "c0d0a9a4-34c1-4614-8ec5-6f1db6c492c1",
                    "name": "Get the merkle path for a given a transaction and block",
                    "request": {
                        "name": "Get the merkle path for a given a transaction and block",
                        "description": {
                            "content": "Returns the merkle path for a transaction included in a block.\nThe merkle path is the minimum number of nodes needed to calculate the merkle root.\n\nSteps to calculate the merkle root:\n1. proofHash = hash (leaf).\n2. Concatenate proofHash with the first unprocessed item from the merklePath list as follows:\n* a) If item.position == left -> proofHash = sha_256(item.hash + proofHash).\n* b) If item.position == right -> proofHash = sha_256(proofHash+ item.hash).\n3. Repeat 2. for every item in the merklePath list.\n4. Compare if the calculated proofHash equals the one recorded in the\nblock header (block.transactionsHash) to verify if the transaction was included in the block.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "block",
                                ":height",
                                "transaction",
                                ":hash",
                                "merkle"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Block height.\n",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/Height not found in the OpenAPI spec"
                                    },
                                    "key": "height"
                                },
                                {
                                    "description": "Transaction hash.",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/Hash256 not found in the OpenAPI spec"
                                    },
                                    "key": "hash"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "4c8fd4d0-aa82-4a67-8c9c-2185aaded80d",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "transaction",
                                        ":hash",
                                        "merkle"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        },
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"merklePath\": [\n  {\n   \"position\": \"<string>\",\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n  },\n  {\n   \"position\": \"<string>\",\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "66edcaff-b63b-4f8d-b428-9cf071dbe077",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "transaction",
                                        ":hash",
                                        "merkle"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        },
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "825f5876-ce8e-40d0-a766-f44cb1062d60",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "transaction",
                                        ":hash",
                                        "merkle"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        },
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "7b9a8b95-1b5d-4688-b363-69136e410a8e",
                    "name": "Get receipts from a block",
                    "request": {
                        "name": "Get receipts from a block",
                        "description": {
                            "content": "Returns the receipts linked to a block.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "block",
                                ":height",
                                "receipts"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Block height.\n",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/Height not found in the OpenAPI spec"
                                    },
                                    "key": "height"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "bba92f26-08d3-47db-918d-603d95629f5a",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "receipts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"transactionStatements\": [\n  {\n   \"statement\": {\n    \"height\": 1,\n    \"source\": {\n     \"primaryId\": 1,\n     \"secondaryId\": 0\n    },\n    \"receipts\": [\n     {\n      \"version\": \"<integer>\",\n      \"type\": \"<integer>\",\n      \"mosaicId\": \"0DC67FBE1CAD29E3\",\n      \"amount\": \"123456\",\n      \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n      \"recipientAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     },\n     {\n      \"version\": \"<integer>\",\n      \"type\": \"<integer>\",\n      \"mosaicId\": \"0DC67FBE1CAD29E3\",\n      \"amount\": \"123456\",\n      \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n      \"recipientAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     }\n    ]\n   }\n  },\n  {\n   \"statement\": {\n    \"height\": 1,\n    \"source\": {\n     \"primaryId\": 1,\n     \"secondaryId\": 0\n    },\n    \"receipts\": [\n     {\n      \"version\": \"<integer>\",\n      \"type\": \"<integer>\",\n      \"mosaicId\": \"0DC67FBE1CAD29E3\",\n      \"amount\": \"123456\",\n      \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n      \"recipientAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     },\n     {\n      \"version\": \"<integer>\",\n      \"type\": \"<integer>\",\n      \"mosaicId\": \"0DC67FBE1CAD29E3\",\n      \"amount\": \"123456\",\n      \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n      \"recipientAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     }\n    ]\n   }\n  }\n ],\n \"addressResolutionStatements\": [\n  {\n   \"statement\": {\n    \"height\": 1,\n    \"unresolved\": \"85BBEA6CC462B244\",\n    \"resolutionEntries\": [\n     {\n      \"source\": {\n       \"primaryId\": 1,\n       \"secondaryId\": 0\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     },\n     {\n      \"source\": {\n       \"primaryId\": 1,\n       \"secondaryId\": 0\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     }\n    ]\n   }\n  },\n  {\n   \"statement\": {\n    \"height\": 1,\n    \"unresolved\": \"85BBEA6CC462B244\",\n    \"resolutionEntries\": [\n     {\n      \"source\": {\n       \"primaryId\": 1,\n       \"secondaryId\": 0\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     },\n     {\n      \"source\": {\n       \"primaryId\": 1,\n       \"secondaryId\": 0\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     }\n    ]\n   }\n  }\n ],\n \"mosaicResolutionStatements\": [\n  {\n   \"statement\": {\n    \"height\": 1,\n    \"unresolved\": \"85BBEA6CC462B244\",\n    \"resolutionEntries\": [\n     {\n      \"source\": {\n       \"primaryId\": 1,\n       \"secondaryId\": 0\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     },\n     {\n      \"source\": {\n       \"primaryId\": 1,\n       \"secondaryId\": 0\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     }\n    ]\n   }\n  },\n  {\n   \"statement\": {\n    \"height\": 1,\n    \"unresolved\": \"85BBEA6CC462B244\",\n    \"resolutionEntries\": [\n     {\n      \"source\": {\n       \"primaryId\": 1,\n       \"secondaryId\": 0\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     },\n     {\n      \"source\": {\n       \"primaryId\": 1,\n       \"secondaryId\": 0\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     }\n    ]\n   }\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ebb9f7ab-d914-4d85-a965-3ad9159ac5f4",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "receipts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2032e431-72f1-4095-8585-0a402a40d2cd",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "receipts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "ca80b61b-4560-4b48-9d8a-2a11742aafaf",
                    "name": "Get the merkle path for a given a receipt statement hash and block",
                    "request": {
                        "name": "Get the merkle path for a given a receipt statement hash and block",
                        "description": {
                            "content": "Returns the merkle path for a receipt statement or resolution linked to a block.\nThe merkle path is the minimum number of nodes needed to calculate the merkle root.\n\nSteps to calculate the merkle root:\n1. proofHash = hash (leaf).\n2. Concatenate proofHash with the first unprocessed item from the merklePath list as follows:\n* a) If item.position == left -> proofHash = sha_256(item.hash + proofHash).\n* b) If item.position == right -> proofHash = sha_256(proofHash+ item.hash).\n3. Repeat 2. for every item in the merklePath list.\n4. Compare if the calculated proofHash equals the one recorded in the\nblock header (block.receiptsHash) to verify if the statement was linked with the block.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "block",
                                ":height",
                                "receipt",
                                ":hash",
                                "merkle"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Block height.\n",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/Height not found in the OpenAPI spec"
                                    },
                                    "key": "height"
                                },
                                {
                                    "description": "Receipt hash.",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/Hash256 not found in the OpenAPI spec"
                                    },
                                    "key": "hash"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "5624d5ea-99fa-4156-bf77-09b38430b616",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "receipt",
                                        ":hash",
                                        "merkle"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        },
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"merklePath\": [\n  {\n   \"position\": \"<string>\",\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n  },\n  {\n   \"position\": \"<string>\",\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e3a23a06-4e5b-44c5-bda6-515aa122d4c0",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "receipt",
                                        ":hash",
                                        "merkle"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        },
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1d804924-9830-4d32-ac2e-7fe407d41d24",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "receipt",
                                        ":hash",
                                        "merkle"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        },
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "d5c073fc-461a-4b80-971e-3cc0c53f872b",
            "name": "Get blocks information",
            "request": {
                "name": "Get blocks information",
                "description": {
                    "content": "Gets up to limit number of blocks after given block height.",
                    "type": "text/plain"
                },
                "url": {
                    "path": [
                        "blocks",
                        ":height",
                        "limit",
                        ":limit"
                    ],
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                        {
                            "description": "Block height.\n",
                            "type": "any",
                            "value": {
                                "value": "reference #/components/schemas/Height not found in the OpenAPI spec"
                            },
                            "key": "height"
                        },
                        {
                            "description": "Number of elements to be returned.\nThe limit should be greater than or equal to \"db.pageSizeMin\" and not higher than \"db.pageSizeMax\".\nThe settings are adjustable via the configuration file (rest/resources/rest.json) per REST instance.\n",
                            "type": "any",
                            "value": "<integer>",
                            "key": "limit"
                        }
                    ]
                },
                "method": "GET",
                "auth": {
                    "type": "noauth"
                }
            },
            "response": [
                {
                    "id": "9290a5d7-fe2b-4952-bc1a-ffa995240f2f",
                    "name": "success",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "blocks",
                                ":height",
                                "limit",
                                ":limit"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "key": "height"
                                },
                                {
                                    "type": "any",
                                    "key": "limit"
                                }
                            ]
                        },
                        "method": "GET",
                        "body": {}
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "body": "[\n {\n  \"meta\": {\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"totalFee\": \"123456\",\n   \"generationHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"stateHashSubCacheMerkleRoots\": [\n    \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n   ],\n   \"numTransactions\": 0,\n   \"numStatements\": 1\n  },\n  \"block\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"height\": 1,\n   \"timestamp\": 108303181802,\n   \"difficulty\": 100000000000000,\n   \"proofGamma\": \"8D49594A96C31EC6C64305FB2CCB47AA7A4AC0A4F614442BB3684D2BF41F274E\",\n   \"proofVerificationHash\": \"82FB583BFE3EE78805784D078F2547AE\",\n   \"proofScalar\": \"480175C83739B22C53EAECAA7E7F3B245F1DFAFA6B3AE5C1D0129502FCBAAD0C\",\n   \"previousBlockHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"transactionsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"receiptsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"stateHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"beneficiaryPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"feeMultiplier\": 0\n  }\n },\n {\n  \"meta\": {\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"totalFee\": \"123456\",\n   \"generationHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"stateHashSubCacheMerkleRoots\": [\n    \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n   ],\n   \"numTransactions\": 0,\n   \"numStatements\": 1\n  },\n  \"block\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"height\": 1,\n   \"timestamp\": 108303181802,\n   \"difficulty\": 100000000000000,\n   \"proofGamma\": \"8D49594A96C31EC6C64305FB2CCB47AA7A4AC0A4F614442BB3684D2BF41F274E\",\n   \"proofVerificationHash\": \"82FB583BFE3EE78805784D078F2547AE\",\n   \"proofScalar\": \"480175C83739B22C53EAECAA7E7F3B245F1DFAFA6B3AE5C1D0129502FCBAAD0C\",\n   \"previousBlockHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"transactionsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"receiptsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"stateHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"beneficiaryPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"feeMultiplier\": 0\n  }\n }\n]",
                    "cookie": [],
                    "_postman_previewlanguage": "json"
                },
                {
                    "id": "64629a30-4394-4243-933c-b231ad7ca203",
                    "name": "InvalidArgument",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "blocks",
                                ":height",
                                "limit",
                                ":limit"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "key": "height"
                                },
                                {
                                    "type": "any",
                                    "key": "limit"
                                }
                            ]
                        },
                        "method": "GET",
                        "body": {}
                    },
                    "status": "Conflict",
                    "code": 409,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                    "cookie": [],
                    "_postman_previewlanguage": "json"
                }
            ],
            "event": []
        },
        {
            "id": "51cbf1db-9927-4c3d-a54e-039a1430d5f2",
            "name": "chain",
            "item": [
                {
                    "id": "d38967fd-7613-464f-ac9d-7c215e39bf4d",
                    "name": "Get the current height of the chain",
                    "request": {
                        "name": "Get the current height of the chain",
                        "description": {
                            "content": "Returns the current height of the blockchain.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "chain",
                                "height"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "cb9a35e0-5479-4975-a14d-66a16e4938db",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "chain",
                                        "height"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"height\": 1\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "c4785fb1-73e8-44f5-8da9-45c02df21eee",
                    "name": "Get the current score of the chain",
                    "request": {
                        "name": "Get the current score of the chain",
                        "description": {
                            "content": "Gets the current score of the blockchain. The higher the score, the better the chain.\nDuring synchronization, nodes try to get the best blockchain in the network.\n\nThe score for a block is derived from its difficulty and the time (in seconds) that has elapsed since the last block:\n\n    block score = difficulty − time elapsed since last block\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "chain",
                                "score"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "aa81ec19-0d2e-4c18-a779-ff4bdab4aa2c",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "chain",
                                        "score"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"scoreHigh\": 1683298087010368300,\n \"scoreLow\": 1683298087010368300\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "e8426f85-7e00-404e-82e0-057c11556169",
            "name": "network",
            "item": [
                {
                    "id": "f4748c39-7447-472c-bf4e-a01fe7e1c9e8",
                    "name": "Get the current network type of the chain",
                    "request": {
                        "name": "Get the current network type of the chain",
                        "description": {
                            "content": "Returns the current network type.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "network"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "f867295c-1375-4eca-b13c-562a6777610a",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "network"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"name\": \"mijinTest\",\n \"description\": \"catapult development network\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "93e4b1f5-ef30-44ad-88fe-a9a310e672f6",
                    "name": "fees",
                    "item": [
                        {
                            "id": "05356d8d-4e82-467e-bb95-28c848162c0a",
                            "name": "Get rental fees information",
                            "request": {
                                "name": "Get rental fees information",
                                "description": {
                                    "content": "Returns the estimated effective rental fees for namespaces and mosaics.\nThis endpoint is only available if the REST instance has access to catapult-server ``resources/config-network.properties`` file.\nTo activate this feature, add the setting \"network.propertiesFilePath\" in the configuration file (rest/resources/rest.json).\n",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "network",
                                        "fees",
                                        "rental"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "f46dfcca-5621-4a70-8afb-edc61ecf9ec0",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "network",
                                                "fees",
                                                "rental"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"effectiveRootNamespaceRentalFeePerBlock\": \"123456\",\n \"effectiveChildNamespaceRentalFee\": \"123456\",\n \"effectiveMosaicRentalFee\": \"123456\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "537897d5-09fb-4337-a319-31c17a81c96c",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "network",
                                                "fees",
                                                "rental"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "6a3644a7-873f-4ac7-aad3-8928bd95409f",
                            "name": "Get transaction fees information",
                            "request": {
                                "name": "Get transaction fees information",
                                "description": {
                                    "content": "Returns the average, median, highest and lower fee multiplier over the last \"numBlocksTransactionFeeStats\".\nThe setting \"numBlocksTransactionFeeStats\" is adjustable via the configuration file (rest/resources/rest.json) per REST instance.\n",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "network",
                                        "fees",
                                        "transaction"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "f3030380-192c-4974-9cd7-e377597fcab4",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "network",
                                                "fees",
                                                "transaction"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"averageFeeMultiplier\": 1,\n \"medianFeeMultiplier\": 1,\n \"highestFeeMultiplier\": 0,\n \"lowestFeeMultiplier\": 0\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "b1229640-ce42-4422-8f64-7576b70434f3",
                    "name": "Get the network properties",
                    "request": {
                        "name": "Get the network properties",
                        "description": {
                            "content": "Returns the content from a catapult-server network configuration file (resources/config-network.properties).\nTo enable this feature, the REST setting \"network.propertiesFilePath\" must define where the file is located.\nThis is adjustable via the configuration file (rest/resources/rest.json) per REST instance.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "network",
                                "properties"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "a6a4b421-314e-479d-ae62-e5090c1efd8d",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "network",
                                        "properties"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"network\": {\n  \"identifier\": \"mijin-test\",\n  \"nodeEqualityStrategy\": \"<string>\",\n  \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"generationHashSeed\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"epochAdjustment\": \"1573430400s\"\n },\n \"chain\": {\n  \"enableVerifiableState\": true,\n  \"enableVerifiableReceipts\": true,\n  \"currencyMosaicId\": \"0x621E'C5B4'0385'6FC2\",\n  \"harvestingMosaicId\": \"0x4291'ED23'000A'037A\",\n  \"blockGenerationTargetTime\": \"30s\",\n  \"blockTimeSmoothingFactor\": \"3000\",\n  \"blockFinalizationInterval\": 30,\n  \"importanceGrouping\": \"39\",\n  \"importanceActivityPercentage\": \"5\",\n  \"maxRollbackBlocks\": \"40\",\n  \"maxDifficultyBlocks\": \"60\",\n  \"defaultDynamicFeeMultiplier\": \"10'000\",\n  \"maxTransactionLifetime\": \"24h\",\n  \"maxBlockFutureTime\": \"500ms\",\n  \"initialCurrencyAtomicUnits\": \"8'998'999'998'000'000\",\n  \"maxMosaicAtomicUnits\": \"9'000'000'000'000'000\",\n  \"totalChainImportance\": \"15'000'000\",\n  \"minHarvesterBalance\": \"500\",\n  \"maxHarvesterBalance\": \"4'000'000\",\n  \"minVoterBalance\": \"50'000\",\n  \"harvestBeneficiaryPercentage\": \"10\",\n  \"harvestNetworkPercentage\": \"5\",\n  \"harvestNetworkFeeSinkPublicKey\": \"FF5563F1C5824EE0CD868799FBE8744B46D5549973FDA499939C952D951494E4\",\n  \"blockPruneInterval\": \"360\",\n  \"maxTransactionsPerBlock\": \"200'000\"\n },\n \"plugins\": {\n  \"accountlink\": {\n   \"dummy\": \"<string>\"\n  },\n  \"aggregate\": {\n   \"maxTransactionsPerAggregate\": \"1'000\",\n   \"maxCosignaturesPerAggregate\": \"15\",\n   \"enableStrictCosignatureCheck\": false,\n   \"enableBondedAggregateSupport\": true,\n   \"maxBondedTransactionLifetime\": \"48h\"\n  },\n  \"lockhash\": {\n   \"lockedFundsPerAggregate\": \"10'000'000\",\n   \"maxHashLockDuration\": \"2d\"\n  },\n  \"locksecret\": {\n   \"maxSecretLockDuration\": \"30d\",\n   \"minProofSize\": \"1\",\n   \"maxProofSize\": \"1000\"\n  },\n  \"metadata\": {\n   \"maxValueSize\": \"1024\"\n  },\n  \"mosaic\": {\n   \"maxMosaicsPerAccount\": \"10'000\",\n   \"maxMosaicDuration\": \"3650d\",\n   \"maxMosaicDivisibility\": \"6\",\n   \"mosaicRentalFeeSinkPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"mosaicRentalFee\": \"500\"\n  },\n  \"multisig\": {\n   \"maxMultisigDepth\": \"3\",\n   \"maxCosignatoriesPerAccount\": \"10\",\n   \"maxCosignedAccountsPerAccount\": \"5\"\n  },\n  \"namespace\": {\n   \"maxNameSize\": \"64\",\n   \"maxChildNamespaces\": \"500\",\n   \"maxNamespaceDepth\": \"3\",\n   \"minNamespaceDuration\": \"1m\",\n   \"maxNamespaceDuration\": \"365d\",\n   \"namespaceGracePeriodDuration\": \"2m\",\n   \"reservedRootNamespaceNames\": \"xem, nem, user, account, org, com, biz, net, edu, mil, gov, info\",\n   \"namespaceRentalFeeSinkPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"rootNamespaceRentalFeePerBlock\": \"1\",\n   \"childNamespaceRentalFee\": \"100\"\n  },\n  \"restrictionaccount\": {\n   \"maxAccountRestrictionValues\": \"512\"\n  },\n  \"restrictionmosaic\": {\n   \"maxMosaicRestrictionValues\": \"20\"\n  },\n  \"transfer\": {\n   \"maxMessageSize\": \"1024\"\n  }\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e9f497fb-5565-4e72-b1b5-84d9cc1934d6",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "network",
                                        "properties"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "1df0f252-c305-4988-ad82-2980773a2aed",
            "name": "node",
            "item": [
                {
                    "id": "e682cb5e-9c4b-4e76-af5d-3f44d0cb3fbd",
                    "name": "Get the node health information",
                    "request": {
                        "name": "Get the node health information",
                        "description": {
                            "content": "Supplies information regarding the connection and services status.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "health"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "c4502611-c1a3-4d66-8a95-d499d5a8c6ea",
                            "name": "Both API node and database services are reachable from REST server.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "health"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"status\": {\n  \"apiNode\": \"<string>\",\n  \"db\": \"<string>\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ce3a7c8a-42cb-4478-96be-5998999dc9bb",
                            "name": "Either API node or database service is unavailable or unreachable from REST server.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "health"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"status\": {\n  \"apiNode\": \"<string>\",\n  \"db\": \"<string>\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "04f5dd02-f0cc-4b4e-9ec2-377a8db60c90",
                    "name": "Get the node information",
                    "request": {
                        "name": "Get the node information",
                        "description": {
                            "content": "Supplies additional information about the application running on a node.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "info"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "499aac7f-813a-49cc-b86a-cddce1194cb2",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "info"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"version\": 0,\n \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n \"networkGenerationHashSeed\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n \"roles\": 2,\n \"port\": 7900,\n \"networkIdentifier\": 144,\n \"friendlyName\": \"api-node-0\",\n \"host\": \"127.0.0.1\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "5c3f4e8b-8964-40e2-965f-ec81c718824e",
                    "name": "Get peers information",
                    "request": {
                        "name": "Get peers information",
                        "description": {
                            "content": "Gets the list of peers visible by the node.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "peers"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "e3e97bcc-237b-422a-b869-14cc032d1176",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "peers"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"version\": 0,\n  \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"networkGenerationHashSeed\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"roles\": 2,\n  \"port\": 7900,\n  \"networkIdentifier\": 144,\n  \"friendlyName\": \"api-node-0\",\n  \"host\": \"127.0.0.1\"\n },\n {\n  \"version\": 0,\n  \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"networkGenerationHashSeed\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"roles\": 2,\n  \"port\": 7900,\n  \"networkIdentifier\": 144,\n  \"friendlyName\": \"api-node-0\",\n  \"host\": \"127.0.0.1\"\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "67aef03e-b858-4317-8161-b6770d0e0f6d",
                    "name": "Get the storage information of the node",
                    "request": {
                        "name": "Get the storage information of the node",
                        "description": {
                            "content": "Returns storage information about the node.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "storage"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "b72ef555-3a2e-42fc-a3b3-6b7c7f58fcbb",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "storage"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"numBlocks\": 245053,\n \"numTransactions\": 58590,\n \"numAccounts\": 177\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "ff1aaa00-9040-4cac-a758-a9ee02b311fd",
                    "name": "Get the node time",
                    "request": {
                        "name": "Get the node time",
                        "description": {
                            "content": "Gets the node time at the moment the reply was sent and received.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "time"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "a7718b03-36ab-452a-b416-86d5f3b06360",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "time"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"communicationTimestamps\": {\n  \"sendTimestamp\": 108303181802,\n  \"receiveTimestamp\": 108303181802\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "af9a6431-0906-4de7-8df7-790fd68d8495",
                    "name": "Get the version of the running REST component",
                    "request": {
                        "name": "Get the version of the running REST component",
                        "description": {
                            "content": "Returns the version of the running catapult-rest component.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "server"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "3b8fe02c-42db-4cc1-9a25-e116272e74e2",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "server"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"serverInfo\": {\n  \"restVersion\": \"1.0.14\",\n  \"sdkVersion\": \"0.7.14\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "d606fba8-8920-4e7b-ab87-b8e47755f0cf",
            "name": "transaction",
            "item": [
                {
                    "id": "23ca7eae-9495-4463-9967-e5f2c163606a",
                    "name": "Get transactions information",
                    "request": {
                        "name": "Get transactions information",
                        "description": {
                            "content": "Returns transactions information for a given array of transactionIds.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "transaction"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"transactionIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "1b4437bf-aa36-44cb-9e90-e68e5101cdeb",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n },\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "512ce723-553a-41a4-b85d-1a0c4c2a82dd",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ee85d3d9-901e-4869-9f46-d562b06f8f95",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "490fa511-9ced-4715-9a73-83cf13400750",
                    "name": "Announce a new transaction",
                    "request": {
                        "name": "Announce a new transaction",
                        "description": {
                            "content": "Announces a transaction to the network.\nWe recommended to use the Symbol-SDKs to announce transactions because they should be serialized.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "transaction"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"payload\": \"<string>\"\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "631cbcf4-8717-4798-a45f-79ae841d98bf",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Accepted",
                            "code": 202,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c94668a7-dc32-4ad7-a986-169890e7d326",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6cc7ce80-c51e-4bd8-ba73-268dbf50070f",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "55e46b64-743e-45f2-a02a-fd971c6a1970",
                    "name": "Get transaction information",
                    "request": {
                        "name": "Get transaction information",
                        "description": {
                            "content": "Returns transaction information given a transactionId or hash.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "transaction",
                                ":transactionId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Transaction identifier or hash.",
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "transactionId"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "6c6be4f9-fdb5-4083-a3d8-879a3d87ed98",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        ":transactionId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "transactionId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"meta\": {\n  \"height\": 1,\n  \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"index\": \"<integer>\",\n  \"id\": \"<string>\"\n },\n \"transaction\": {\n  \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n  \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"version\": \"<integer>\",\n  \"network\": 144,\n  \"type\": \"<integer>\",\n  \"maxFee\": \"123456\",\n  \"deadline\": 200,\n  \"linkedPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"linkAction\": \"<integer>\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "03a41633-46c5-4e63-a467-a9d136b65ff7",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        ":transactionId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "transactionId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a12cd67d-368d-4ea0-ae82-b4fc08298c96",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        ":transactionId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "transactionId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "a6075fce-81c8-46ec-8138-ad5b2bd48636",
                    "name": "Get transaction status",
                    "request": {
                        "name": "Get transaction status",
                        "description": {
                            "content": "Returns the transaction status for a given hash.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "transaction",
                                ":hash",
                                "status"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Transaction hash.",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/Hash256 not found in the OpenAPI spec"
                                    },
                                    "key": "hash"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "c08096b2-8244-4b9b-9f8d-6ea4249bae8d",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        ":hash",
                                        "status"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"group\": \"<string>\",\n \"deadline\": 200,\n \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n \"code\": \"<string>\",\n \"height\": 1\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9f4ee60a-1c68-40d1-8699-a565b721ecb9",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        ":hash",
                                        "status"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "182192d4-cda9-4730-9a54-8b6ac503a4e8",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        ":hash",
                                        "status"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "fe615962-cd03-4ea9-b0a4-d82df55658af",
                    "name": "Get transactions status",
                    "request": {
                        "name": "Get transactions status",
                        "description": {
                            "content": "Returns an array of transaction statuses for a given array of transaction hashes.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "transaction",
                                "statuses"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"hashes\": [\n        \"<hex>\",\n        \"<hex>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "56c619b7-370e-424e-a9b0-725e7bb85211",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        "statuses"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"group\": \"<string>\",\n  \"deadline\": 200,\n  \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"code\": \"<string>\",\n  \"height\": 1\n },\n {\n  \"group\": \"<string>\",\n  \"deadline\": 200,\n  \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"code\": \"<string>\",\n  \"height\": 1\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1c3b96f1-dd72-4820-8868-ce5992056f28",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        "statuses"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6ad6904c-ccbc-4f88-9457-7c0eefc88a47",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        "statuses"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "5447e335-12b3-41a7-9ee1-c3f173999798",
                    "name": "Announce an aggregate bonded transaction",
                    "request": {
                        "name": "Announce an aggregate bonded transaction",
                        "description": {
                            "content": "Announces an aggregate bonded transaction to the network.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "transaction",
                                "partial"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"payload\": \"<string>\"\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "a04163ca-e63c-4927-b767-94b5ab9a8275",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        "partial"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Accepted",
                            "code": 202,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "21277b48-ea62-450f-a757-7492f0fa6957",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        "partial"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "76040d2a-5b8f-463c-82be-3eea429eac9d",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        "partial"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "d8333b57-b2c5-42ee-bc29-0151704df23c",
                    "name": "Announce a cosignature transaction",
                    "request": {
                        "name": "Announce a cosignature transaction",
                        "description": {
                            "content": "Announces a cosignature transaction to the network.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "transaction",
                                "cosignature"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"parentHash\": \"<hex>\",\n    \"signature\": \"<string>\",\n    \"signerPublicKey\": \"<hex>\"\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "e670bdeb-bfdd-4247-bf19-4dd8e8e9f5d0",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        "cosignature"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Accepted",
                            "code": 202,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2bf621df-7486-4bf5-ba9f-f6ae4f9b1768",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        "cosignature"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "cc49122b-46e7-46f7-9a6c-36c9d88e4998",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        "cosignature"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "68302207-b973-4ecb-bf4b-01218270c7af",
            "name": "metadata",
            "item": [
                {
                    "id": "ef8e94a7-4c4f-443f-88ea-630004ecf673",
                    "name": "account/{account Id}",
                    "item": [
                        {
                            "id": "28c34299-4e51-440b-857c-1257c94d5b12",
                            "name": "Get account metadata",
                            "request": {
                                "name": "Get account metadata",
                                "description": {
                                    "content": "Returns the account metadata given an account id.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "metadata",
                                        "account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "description": "Number of entries to return.",
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                            "key": "id",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Ordering criteria:\n* -id - Descending order by id.\n* id - Ascending order by id.\n",
                                            "key": "ordering",
                                            "value": "-id"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "description": "Account public key or address enconded using a 32-character set.",
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "accountId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "58eb30bc-5303-45d3-af0c-4616eb230c5a",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "ordering",
                                                    "value": "-id"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"metadataEntries\": [\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  }\n ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "1c29c6a6-ff9e-4141-bd4d-f4dc2c2adaad",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "ordering",
                                                    "value": "-id"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "9a224f13-f27d-4c81-bd77-9cdb5638f8f3",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "ordering",
                                                    "value": "-id"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "db592929-d02b-4145-98e7-917e8e95a534",
                            "name": "key/{key}",
                            "item": [
                                {
                                    "id": "921ea54e-e661-4b93-86e4-ac0f4e5c645e",
                                    "name": "Get account metadata",
                                    "request": {
                                        "name": "Get account metadata",
                                        "description": {
                                            "content": "Returns the account metadata given an account id and a key.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "account",
                                                ":accountId",
                                                "key",
                                                ":key"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Account public key or address enconded using a 32-character set.",
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "accountId"
                                                },
                                                {
                                                    "description": "Metadata key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MetadataKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "key"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "a49e7d38-f3e1-4398-81fc-8326ea2004d4",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "account",
                                                        ":accountId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"metadataEntries\": [\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  }\n ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "9f7cac8d-adcb-47f4-bb03-43641fa162e2",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "account",
                                                        ":accountId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "26d9a1cb-f800-4ccc-90db-22abed9ea8a3",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "account",
                                                        ":accountId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "2e256cbd-e964-4436-a4f9-26f4488c00f7",
                                    "name": "Get account metadata",
                                    "request": {
                                        "name": "Get account metadata",
                                        "description": {
                                            "content": "Returns the account metadata given an account id, a key, and a sender.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "account",
                                                ":accountId",
                                                "key",
                                                ":key",
                                                "sender",
                                                ":publicKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Account public key or address enconded using a 32-character set.",
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "accountId"
                                                },
                                                {
                                                    "description": "Metadata key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MetadataKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "key"
                                                },
                                                {
                                                    "description": "Account public key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/PublicKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "publicKey"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "630209e9-ae5b-4e9a-b816-303edc59a3c0",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "account",
                                                        ":accountId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":publicKey"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "publicKey"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"id\": \"<string>\",\n \"metadataEntry\": {\n  \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n  \"metadataType\": \"<integer>\",\n  \"value\": \"<hex>\",\n  \"targetId\": \"0DC67FBE1CAD29E3\"\n }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "3910d805-439b-4b9c-abc0-bdae2524eb96",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "account",
                                                        ":accountId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":publicKey"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "publicKey"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "c48cc62e-c71e-495e-81a1-109d12eb0da5",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "account",
                                                        ":accountId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":publicKey"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "publicKey"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "66038357-230f-420d-8098-31bfdeece632",
                    "name": "mosaic/{mosaic Id}",
                    "item": [
                        {
                            "id": "e5703151-c828-4284-800f-90371fcfe924",
                            "name": "Get mosaic metadata",
                            "request": {
                                "name": "Get mosaic metadata",
                                "description": {
                                    "content": "Returns the mosaic metadata given a mosaic id.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "metadata",
                                        "mosaic",
                                        ":mosaicId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "description": "Number of entries to return.",
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                            "key": "id",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Ordering criteria:\n* -id - Descending order by id.\n* id - Ascending order by id.\n",
                                            "key": "ordering",
                                            "value": "-id"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "description": "Mosaic identifier.",
                                            "type": "any",
                                            "value": {
                                                "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                            },
                                            "key": "mosaicId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "490dece1-4915-4504-a302-49df77d957a4",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "mosaic",
                                                ":mosaicId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "ordering",
                                                    "value": "-id"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "mosaicId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"metadataEntries\": [\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  }\n ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "9185a788-5853-4ef2-a6b8-3143ef843b4a",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "mosaic",
                                                ":mosaicId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "ordering",
                                                    "value": "-id"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "mosaicId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "b78a681b-c6fb-4bb3-96c6-04243bad77bf",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "mosaic",
                                                ":mosaicId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "ordering",
                                                    "value": "-id"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "mosaicId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "29c45fdd-0fc8-4f20-9ac5-ce6ca8a45f66",
                            "name": "key/{key}",
                            "item": [
                                {
                                    "id": "88565e1c-75f6-45e9-a72b-d65d52798009",
                                    "name": "Get mosaic metadata",
                                    "request": {
                                        "name": "Get mosaic metadata",
                                        "description": {
                                            "content": "Returns the mosaic metadata given a mosaic id and a key.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "mosaic",
                                                ":mosaicId",
                                                "key",
                                                ":key"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Mosaic identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                                    },
                                                    "key": "mosaicId"
                                                },
                                                {
                                                    "description": "Metadata key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MetadataKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "key"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "f473b85e-6c2c-4902-8dd9-6849642278e2",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"metadataEntries\": [\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  }\n ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "ac5463c8-233a-4e8f-983f-0d66aebb78ff",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "e66afa91-ac72-4817-a97c-9504a5aae73a",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "cbe70f77-9392-4df9-9392-349f3eb0b681",
                                    "name": "Get mosaic metadata",
                                    "request": {
                                        "name": "Get mosaic metadata",
                                        "description": {
                                            "content": "Returns the mosaic metadata given a mosaic id, a key, and a sender.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "mosaic",
                                                ":mosaicId",
                                                "key",
                                                ":key",
                                                "sender",
                                                ":publicKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Mosaic identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                                    },
                                                    "key": "mosaicId"
                                                },
                                                {
                                                    "description": "Metadata key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MetadataKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "key"
                                                },
                                                {
                                                    "description": "Account public key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/PublicKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "publicKey"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "c8e1605f-ec35-474b-8ee6-b66b23c59e8e",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":publicKey"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "publicKey"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"id\": \"<string>\",\n \"metadataEntry\": {\n  \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n  \"metadataType\": \"<integer>\",\n  \"value\": \"<hex>\",\n  \"targetId\": \"0DC67FBE1CAD29E3\"\n }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "87f3b4e4-5f10-4194-8b41-0f0e9e92e9f9",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":publicKey"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "publicKey"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "11cd30ad-458e-4523-8bef-db19826ca97a",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":publicKey"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "publicKey"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "b8e1028a-7e5e-45fc-aa6c-fb9dd946ff05",
                    "name": "namespace/{namespace Id}",
                    "item": [
                        {
                            "id": "120549da-6d96-456e-b3cc-7ae3e6382aee",
                            "name": "Get namespace metadata",
                            "request": {
                                "name": "Get namespace metadata",
                                "description": {
                                    "content": "Returns the namespace metadata given a namespace id.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "metadata",
                                        "namespace",
                                        ":namespaceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "description": "Number of entries to return.",
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                            "key": "id",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Ordering criteria:\n* -id - Descending order by id.\n* id - Ascending order by id.\n",
                                            "key": "ordering",
                                            "value": "-id"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "description": "Namespace identifier.",
                                            "type": "any",
                                            "value": {
                                                "value": "reference #/components/schemas/NamespaceId not found in the OpenAPI spec"
                                            },
                                            "key": "namespaceId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "98867e00-0e5d-4285-b5ab-349895ac1764",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "namespace",
                                                ":namespaceId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "ordering",
                                                    "value": "-id"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "namespaceId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"metadataEntries\": [\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  }\n ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "4a727488-ac02-42a8-ab42-c18652e93675",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "namespace",
                                                ":namespaceId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "ordering",
                                                    "value": "-id"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "namespaceId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "97226dd9-aace-4ead-8c0e-b23648d0de41",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "namespace",
                                                ":namespaceId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "ordering",
                                                    "value": "-id"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "namespaceId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "4206bf89-262a-4ad6-a7fc-44caa4b02a85",
                            "name": "key/{key}",
                            "item": [
                                {
                                    "id": "9623b396-1171-4668-b9c0-10321015e6d0",
                                    "name": "Get namespace metadata",
                                    "request": {
                                        "name": "Get namespace metadata",
                                        "description": {
                                            "content": "Returns the namespace metadata given a namespace id and a key.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "namespace",
                                                ":namespaceId",
                                                "key",
                                                ":key"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Namespace identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/NamespaceId not found in the OpenAPI spec"
                                                    },
                                                    "key": "namespaceId"
                                                },
                                                {
                                                    "description": "Metadata key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MetadataKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "key"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "e52de3be-de5f-4c0a-9c2e-b57764c00bae",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "namespace",
                                                        ":namespaceId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "namespaceId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"metadataEntries\": [\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  }\n ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "2b9a3db5-e8a8-4338-9e94-e9e777f698e8",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "namespace",
                                                        ":namespaceId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "namespaceId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "f35e4e9c-a475-4505-a7a6-54b737d56d36",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "namespace",
                                                        ":namespaceId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "namespaceId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "a7835897-c828-41bd-b535-ca16a9f50ee7",
                                    "name": "Get namespace metadata",
                                    "request": {
                                        "name": "Get namespace metadata",
                                        "description": {
                                            "content": "Returns the namespace metadata given a namespace id, a key, and a sender.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "namespace",
                                                ":namespaceId",
                                                "key",
                                                ":key",
                                                "sender",
                                                ":publicKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Namespace identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/NamespaceId not found in the OpenAPI spec"
                                                    },
                                                    "key": "namespaceId"
                                                },
                                                {
                                                    "description": "Metadata key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MetadataKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "key"
                                                },
                                                {
                                                    "description": "Account public key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/PublicKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "publicKey"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "8b7cebc4-a959-4a1c-883e-2607a29d3c5a",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "namespace",
                                                        ":namespaceId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":publicKey"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "namespaceId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "publicKey"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"id\": \"<string>\",\n \"metadataEntry\": {\n  \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n  \"metadataType\": \"<integer>\",\n  \"value\": \"<hex>\",\n  \"targetId\": \"0DC67FBE1CAD29E3\"\n }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "dd7f5ee8-e8e2-4e5f-9b77-858ddfb1f232",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "namespace",
                                                        ":namespaceId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":publicKey"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "namespaceId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "publicKey"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "cd053b35-5241-4721-b2dd-8cbabaf78870",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "namespace",
                                                        ":namespaceId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":publicKey"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "namespaceId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "publicKey"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "04208065-2f9a-4031-bc94-ccd810bda19e",
            "name": "mosaic",
            "item": [
                {
                    "id": "854900a8-7066-468e-a7d0-528785aab284",
                    "name": "Get mosaics information for an array of mosaics",
                    "request": {
                        "name": "Get mosaics information for an array of mosaics",
                        "description": {
                            "content": "Gets an array of mosaic definition.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "mosaic"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"mosaicIds\": [\n        \"<hex>\",\n        \"<hex>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "94857334-7873-4789-9216-cdd34342fba7",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaic"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"mosaic\": {\n   \"id\": \"0DC67FBE1CAD29E3\",\n   \"supply\": \"123456\",\n   \"startHeight\": 1,\n   \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"revision\": 1,\n   \"flags\": \"<integer>\",\n   \"divisibility\": \"<integer>\",\n   \"duration\": 200\n  }\n },\n {\n  \"mosaic\": {\n   \"id\": \"0DC67FBE1CAD29E3\",\n   \"supply\": \"123456\",\n   \"startHeight\": 1,\n   \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"revision\": 1,\n   \"flags\": \"<integer>\",\n   \"divisibility\": \"<integer>\",\n   \"duration\": 200\n  }\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bfe1bd03-f6ea-4d16-bad8-4fb1a650ce9a",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaic"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bdf959ef-bae1-4af0-99b3-498af9ca3f8d",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaic"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "c15702ed-1884-4213-a14e-1c4bc190341c",
                    "name": "Get mosaic information",
                    "request": {
                        "name": "Get mosaic information",
                        "description": {
                            "content": "Gets the mosaic definition for a given mosaic identifier.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "mosaic",
                                ":mosaicId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Mosaic identifier.",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                    },
                                    "key": "mosaicId"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "cb9ad2b2-9ca2-4b2e-b8bb-5fdbbc020e97",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaic",
                                        ":mosaicId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "mosaicId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"mosaic\": {\n  \"id\": \"0DC67FBE1CAD29E3\",\n  \"supply\": \"123456\",\n  \"startHeight\": 1,\n  \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n  \"revision\": 1,\n  \"flags\": \"<integer>\",\n  \"divisibility\": \"<integer>\",\n  \"duration\": 200\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4b402952-5daa-46b2-ad15-64005f8919c9",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaic",
                                        ":mosaicId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "mosaicId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2caf8049-20e6-4835-9341-dfff926aef74",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaic",
                                        ":mosaicId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "mosaicId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "32bad993-3afa-4963-88fe-e170c68e5b12",
                    "name": "Get readable names for a set of mosaics",
                    "request": {
                        "name": "Get readable names for a set of mosaics",
                        "description": {
                            "content": "Returns friendly names for mosaics.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "mosaic",
                                "names"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"mosaicIds\": [\n        \"<hex>\",\n        \"<hex>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "c86f46ff-f6f6-4358-af61-b0a7b03b0826",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaic",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"mosaicNames\": [\n  {\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"names\": [\n    \"symbol.xym\"\n   ]\n  },\n  {\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"names\": [\n    \"symbol.xym\"\n   ]\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "da3286e3-bae5-4ac5-b080-f949021b9e87",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaic",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e3ec864f-e4c6-4fe1-a129-39bce3f83fe8",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaic",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "34cad2b5-4916-4182-a589-75bd3e955f5a",
            "name": "namespace",
            "item": [
                {
                    "id": "cde1a66d-33e9-4170-aff7-05093f1e2c31",
                    "name": "Get namespace information",
                    "request": {
                        "name": "Get namespace information",
                        "description": {
                            "content": "Gets the namespace for a given namespace identifier.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "namespace",
                                ":namespaceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Namespace identifier.",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/NamespaceId not found in the OpenAPI spec"
                                    },
                                    "key": "namespaceId"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "94032f42-4114-4bfd-b153-ad27a5587587",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespace",
                                        ":namespaceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "namespaceId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"meta\": {\n  \"id\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"index\": \"<integer>\"\n },\n \"namespace\": {\n  \"registrationType\": 0,\n  \"depth\": 1,\n  \"level0\": \"85BBEA6CC462B244\",\n  \"alias\": {\n   \"type\": 0,\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n  },\n  \"parentId\": \"85BBEA6CC462B244\",\n  \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n  \"startHeight\": 1,\n  \"endHeight\": 1,\n  \"level1\": \"85BBEA6CC462B244\",\n  \"level2\": \"85BBEA6CC462B244\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1c9dc561-be31-45c4-b9c7-668a8f2e3bcd",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespace",
                                        ":namespaceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "namespaceId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "310a0856-b710-45a1-95ff-91c478104f56",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespace",
                                        ":namespaceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "namespaceId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "7a812ab9-9b9a-43c4-9dd2-862bb8532fc1",
                    "name": "Get readable names for a set of namespaces",
                    "request": {
                        "name": "Get readable names for a set of namespaces",
                        "description": {
                            "content": "Returns friendly names for namespaces.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "namespace",
                                "names"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"namespaceIds\": [\n        \"<hex>\",\n        \"<hex>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "56cdf0f7-c5de-4dff-9470-6975d1456edc",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespace",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"id\": \"85BBEA6CC462B244\",\n  \"name\": \"cat\",\n  \"parentId\": \"85BBEA6CC462B244\"\n },\n {\n  \"id\": \"85BBEA6CC462B244\",\n  \"name\": \"cat\",\n  \"parentId\": \"85BBEA6CC462B244\"\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2072a55c-df73-4765-9e06-74a5799d6b6b",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespace",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8b4dd85e-b2aa-4c1b-a6e9-0e4aa5b15b0a",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespace",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "388f876a-4cd3-42bd-bb53-35b8054cdaee",
            "name": "restrictions",
            "item": [
                {
                    "id": "1e4d77e1-92b2-477b-9b88-63d542f619bc",
                    "name": "account",
                    "item": [
                        {
                            "id": "810d0132-ec09-4b60-98e6-080c50ad35b3",
                            "name": "Get account restrictions for given array of addresses",
                            "request": {
                                "name": "Get account restrictions for given array of addresses",
                                "description": {
                                    "content": "Returns the account restrictions for a given array of addresses.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "restrictions",
                                        "account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "noauth"
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"publicKeys\": [\n        \"<hex>\",\n        \"<hex>\"\n    ],\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                }
                            },
                            "response": [
                                {
                                    "id": "6c38c108-e6dc-4a48-8562-d58e155229eb",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "[\n {\n  \"accountRestrictions\": {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"restrictions\": [\n    {\n     \"restrictionFlags\": 1,\n     \"values\": [\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     ]\n    },\n    {\n     \"restrictionFlags\": 1,\n     \"values\": [\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     ]\n    }\n   ]\n  }\n },\n {\n  \"accountRestrictions\": {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"restrictions\": [\n    {\n     \"restrictionFlags\": 1,\n     \"values\": [\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     ]\n    },\n    {\n     \"restrictionFlags\": 1,\n     \"values\": [\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     ]\n    }\n   ]\n  }\n }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "f293db74-f5b5-4070-88f6-5d05347b898e",
                                    "name": "InvalidContent",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "34825e1b-3976-4a46-b711-5c7b8fd18d5e",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "b43395f1-1877-4bce-b2a4-d1128669a4f3",
                            "name": "Get the account restrictions",
                            "request": {
                                "name": "Get the account restrictions",
                                "description": {
                                    "content": "Returns the account restrictions for a given account.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "restrictions",
                                        "account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "description": "Account public key or address enconded using a 32-character set.",
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "accountId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "48830143-c1a2-4e19-848f-c89163082787",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"accountRestrictions\": {\n  \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n  \"restrictions\": [\n   {\n    \"restrictionFlags\": 1,\n    \"values\": [\n     \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n     \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n    ]\n   },\n   {\n    \"restrictionFlags\": 1,\n    \"values\": [\n     \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n     \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n    ]\n   }\n  ]\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "58142d5b-363d-4f26-a2ec-7590a05f6c44",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "61f3e17d-6bf9-4d47-987c-66e3ceae281c",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "e8758664-ee5a-4501-97d1-c4548e8f536c",
                    "name": "mosaic",
                    "item": [
                        {
                            "id": "683a6519-913c-48e1-9644-7fad98847f3f",
                            "name": "Get mosaic global restrictions for an array of mosaics.",
                            "request": {
                                "name": "Get mosaic global restrictions for an array of mosaics.",
                                "description": {
                                    "content": "Get mosaic global restrictions.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "restrictions",
                                        "mosaic"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "noauth"
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"mosaicIds\": [\n        \"<hex>\",\n        \"<hex>\"\n    ]\n}"
                                }
                            },
                            "response": [
                                {
                                    "id": "3c70111a-ce5b-413e-8544-92aa7158e94b",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "[\n {\n  \"mosaicRestrictionEntry\": {\n   \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"entryType\": \"<integer>\",\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"restrictions\": [\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"restriction\": {\n      \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n      \"restrictionValue\": 1000,\n      \"restrictionType\": \"<integer>\"\n     }\n    },\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"restriction\": {\n      \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n      \"restrictionValue\": 1000,\n      \"restrictionType\": \"<integer>\"\n     }\n    }\n   ]\n  }\n },\n {\n  \"mosaicRestrictionEntry\": {\n   \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"entryType\": \"<integer>\",\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"restrictions\": [\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"restriction\": {\n      \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n      \"restrictionValue\": 1000,\n      \"restrictionType\": \"<integer>\"\n     }\n    },\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"restriction\": {\n      \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n      \"restrictionValue\": 1000,\n      \"restrictionType\": \"<integer>\"\n     }\n    }\n   ]\n  }\n }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "06b201ea-b355-42d9-986e-aae72ecb9288",
                                    "name": "InvalidContent",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "78cdb8d8-f420-4d02-ac7f-9d3131489ca9",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "18c2a3f1-4669-4dde-950d-f018d1768eae",
                            "name": "{mosaic Id}",
                            "item": [
                                {
                                    "id": "ef3f2405-3237-46d4-b3af-450f3cc99df4",
                                    "name": "Get mosaic global restriction for a given mosaic identifier.",
                                    "request": {
                                        "name": "Get mosaic global restriction for a given mosaic identifier.",
                                        "description": {
                                            "content": "Get mosaic global restriction.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic",
                                                ":mosaicId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Mosaic identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                                    },
                                                    "key": "mosaicId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "6973f049-1f14-43d4-9240-a9f0bc52364e",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"mosaicRestrictionEntry\": {\n  \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"entryType\": \"<integer>\",\n  \"mosaicId\": \"0DC67FBE1CAD29E3\",\n  \"restrictions\": [\n   {\n    \"key\": \"0DC67FBE1CAD29E3\",\n    \"restriction\": {\n     \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n     \"restrictionValue\": 1000,\n     \"restrictionType\": \"<integer>\"\n    }\n   },\n   {\n    \"key\": \"0DC67FBE1CAD29E3\",\n    \"restriction\": {\n     \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n     \"restrictionValue\": 1000,\n     \"restrictionType\": \"<integer>\"\n    }\n   }\n  ]\n }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "ceb70beb-d98d-4595-9c8e-e3bd486e0530",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "d64982ad-ed1d-4696-9b4b-0f94dc687851",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "c1bd3bdf-484f-4b4c-991c-e9eeb574aaf0",
                                    "name": "Get mosaic address restrictions for a given mosaic and account identifiers array.",
                                    "request": {
                                        "name": "Get mosaic address restrictions for a given mosaic and account identifiers array.",
                                        "description": {
                                            "content": "Get mosaic address restrictions.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic",
                                                ":mosaicId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Mosaic identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                                    },
                                                    "key": "mosaicId"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "noauth"
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"publicKeys\": [\n        \"<hex>\",\n        \"<hex>\"\n    ],\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "b3725961-f089-468a-8775-e3b4cf17ce12",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "POST",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "[\n {\n  \"mosaicRestrictionEntry\": {\n   \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"entryType\": \"<integer>\",\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"restrictions\": [\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"value\": \"<string>\"\n    },\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"value\": \"<string>\"\n    }\n   ]\n  }\n },\n {\n  \"mosaicRestrictionEntry\": {\n   \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"entryType\": \"<integer>\",\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"restrictions\": [\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"value\": \"<string>\"\n    },\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"value\": \"<string>\"\n    }\n   ]\n  }\n }\n]",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "cf6ebc96-79a7-4c38-99bb-b8bf24502b47",
                                            "name": "InvalidContent",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "POST",
                                                "body": {}
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "6112b81e-0ab2-492c-bd87-d5c29e77e4c2",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "POST",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "be56a9ac-32fa-4d7f-b6c7-e0352041eb01",
                                    "name": "Get mosaic address restrictions for a given mosaic and account identifier.",
                                    "request": {
                                        "name": "Get mosaic address restrictions for a given mosaic and account identifier.",
                                        "description": {
                                            "content": "Get mosaic address restriction.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic",
                                                ":mosaicId",
                                                "address",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Mosaic identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                                    },
                                                    "key": "mosaicId"
                                                },
                                                {
                                                    "description": "Account public key or address enconded using a 32-character set.",
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "e177ff3d-bcfa-469a-8efe-c965d6be79c7",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "address",
                                                        ":accountId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"mosaicRestrictionEntry\": {\n  \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"entryType\": \"<integer>\",\n  \"mosaicId\": \"0DC67FBE1CAD29E3\",\n  \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n  \"restrictions\": [\n   {\n    \"key\": \"0DC67FBE1CAD29E3\",\n    \"value\": \"<string>\"\n   },\n   {\n    \"key\": \"0DC67FBE1CAD29E3\",\n    \"value\": \"<string>\"\n   }\n  ]\n }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "f55c9232-e9af-44e4-addd-e6a79a90a940",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "address",
                                                        ":accountId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "cbe06db2-71a8-4367-9e6c-fe3a0dcf5cb6",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "address",
                                                        ":accountId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        }
    ],
    "event": [],
    "variable": [
        {
            "id": "baseUrl",
            "type": "string",
            "value": "http://localhost:3000"
        }
    ],
    "info": {
        "_postman_id": "5ac8e23c-957e-4e5f-bded-5ab369d8403d",
        "name": "Catapult REST Endpoints",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "description": {
            "content": "OpenAPI Specification of catapult-rest 1.0.20.34",
            "type": "text/plain"
        }
    }
}